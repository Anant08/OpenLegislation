/*! openleg - v - 2016-10-12 *//** --- Module configuration --- */
/** Such dependencies. wow. */
function mismatchViewDirective(a,b,c,d,e,f){return{scope:{mismatches:"=",summary:"=",filter:"=?",loading:"@"},restrict:"E",templateUrl:ctxPath+"/partial/report/spotcheck-mismatch-view",link:function(g,h,i){function j(){g.summary&&(k(),m())}
// Update the filter to match the types/statuses in the summary
function k(){ensureProperties(g.summary.mismatchStatuses,g.filter.statuses,!0),ensureProperties(g.summary.mismatchCounts,g.filter.types,!0),l(),g.state.filterLoaded=!0}
// Update status/type options
function l(){g.state.statusOptions=n.concat(Object.keys(g.summary.mismatchStatuses)),g.state.typeOptions=n.concat(Object.keys(g.summary.mismatchCounts))}function m(){g.total=0,angular.forEach(g.summary.mismatchStatuses,function(a){g.total+=a})}
//$scope.$watch('mismatches', function () {
//    console.log('first mismatch', $scope.mismatches[0]);
//});
var n=["all"];g.showStatusFilter=!i.hasOwnProperty("noStatusFilter"),g.ctxPath=ctxPath,g.state={allStatuses:!0,allTypes:!0,total:0,ignoreFilter:0,trackingFilter:3,filterLoaded:!1,iSelectedStatus:0,iSelectedType:0,selectedStatus:"all",selectedType:"all",statusOptions:angular.extend(n),typeOptions:angular.extend(n),currentPage:1,settingIssueId:!1,settingIgnoreStatus:!1,requestError:!1},g.filter=g.filter||angular.merge({},c),g.orderByLabels=orderByLabels,g.sortOrderLabels={ASC:"Ascending",DESC:"Descending"},g.ignoreStatuses=f,g.setIgnoreStatus=function(a,b){var c=a.mismatch;g.state.settingIgnoreStatus=!0,console.log("setting ignore status",a,b),d.save({mismatchId:c.mismatchId,ignoreLevel:b},function(d){if("NOT_IGNORED"!==c.ignoreStatus){var e=a.chips.indexOf(c.ignoreStatus);e>=0&&a.chips.splice(e,1)}"NOT_IGNORED"!==b&&a.chips.unshift(b),c.ignoreStatus=b,g.state.settingIgnoreStatus=!1},function(c){g.state.settingIgnoreStatus=!1,g.state.requestError=!0,console.error("error setting ignore status",a,b,c)})},g.addIssueId=function(a){var b=a.mismatch,c=a.newIssueId;console.log("adding issue id",a,c);for(var d in b.issueIds.items)if(d===c)return void console.log("mismatch already has issue id",a,c);g.state.settingIssueId=!0,e.save({mismatchId:b.mismatchId,issueId:c},function(d){g.state.settingIssueId=!1,a.chips.push(c),b.issueIds.items.push(c),a.newIssueId=""},function(b){g.state.settingIssueId=!1,g.state.requestError=!0,console.error("error adding issue id",a,c,b)})},g.removeIssueIdPrompt=function(a,c){
// Don't do anything if an issue id is being added/removed or the removed issue id is no longer present
g.state.settingIssueId||a.mismatch.issueIds.items.indexOf(c)<0||b.show(b.confirm().title("Remove Issue").textContent("Do you wish to remove issue id #"+c+"?").ok("Yes").cancel("No")).then(function(){g.removeIssueId(a,c)})},g.removeIssueId=function(a,b){var c=a.mismatch;console.log("removing issue id",a,b),g.state.settingIssueId=!0,e["delete"]({mismatchId:c.mismatchId,issueId:b},function(d){g.state.settingIssueId=!1;var e=a.chips.indexOf(b);e>=0&&a.chips.splice(e,1);var f=c.issueIds.items.indexOf(b);f>=0&&c.issueIds.items.splice(f,1)},function(b){g.state.settingIssueId=!1,g.state.requestError=!0,console.error("error removing issue id",a,newIssueId,b)})},g.getIssueUrl=function(a){var b="${issueId}",c="http://dev.nysenate.gov/issues/"+b;return c.replace(b,a)},
// Get a count of mismatches of a particular type based on the filtering of mismatch statuses
g.getTypeCount=function(a,b){var c=g.summary.mismatchCounts[a];if(!c)return"?!";var d=0;return angular.forEach(c,function(a,b){angular.forEach(a,function(a,c){angular.forEach(a,function(a,e){g.filter.passes(b,!0,c,e)&&(d+=a)})})}),d},g.passes=function(a){return g.filter.passes(a)},g.isLoading=function(){return"true"===i.loading},g.$watch("state.currentPage",function(){var a=(g.state.currentPage-1)*g.filter.limit+1;console.log("new page",g.state.currentPage,"limit",g.filter.limit,"offset",a),a!==g.filter.offset&&(g.filter.offset=a,g.onFilterChange(!0))}),
// Watch the summary for changes and alter the filter accordingly
g.$watch("summary",j,!0),g.onStatusChange=function(){console.log("selected new status:",g.state.selectedStatus);var a=g.state.selectedStatus;setAllProperties(g.filter.statuses,"all"===a),g.filter.statuses.hasOwnProperty(a)&&(g.filter.statuses[a]=!0),g.onFilterChange()},g.onTypeChange=function(){console.log("selected new type:",g.state.selectedType);var a=g.state.selectedType;setAllProperties(g.filter.types,"all"===a),g.filter.types.hasOwnProperty(a)&&(g.filter.types[a]=!0),g.onFilterChange()},g.ignoreFilterOptions=["Hide Ignored","Show Ignored","unused","Show Only Ignored"],g.onIgnoreChange=function(){var a=1,b=2;g.filter.ignoredShown=(a&g.state.ignoreFilter)>0,g.filter.ignoredOnly=(b&g.state.ignoreFilter)>0,g.onFilterChange()},g.trackingFilterOptions=["unused","Show Tracked","Show Untracked","Show All"],g.onTrackingChange=function(){var a=1,b=2;g.filter.trackedShown=(a&g.state.trackingFilter)>0,g.filter.untrackedShown=(b&g.state.trackingFilter)>0,g.onFilterChange()},g.onFilterChange=function(b){b||(g.filter.offset=1,g.state.currentPage=1),console.log("filter changed",g.filter),a.$emit("mismatchFilterChange")},
// Triggers a detail sheet popup for the mismatch designated by mismatchId
g.showDetailedDiff=function(a){console.log("wtf"),b.show({templateUrl:"mismatchDetailWindow",controller:"detailDialogCtrl",locals:{mismatchRow:a}})}}}}function orderByLabelFilter(){return function(a){return orderByLabels.hasOwnProperty(a)?orderByLabels[a]:"Order By!?"}}function extractIgnoreTrackFilter(a){var b={};return a.ignoredOnly?b.ignored=!0:a.ignoredShown||(b.ignored=!1),a.trackedShown?a.untrackedShown||(b.tracked=!0):b.tracked=!1,b}function statusSelectLabelFilter(a){return function(b,c,d){var e=extractIgnoreTrackFilter(d);e.status=b;var f=a("mismatchCount")(c,e);return a("mismatchStatusLabel")(b)+" ("+f+")"}}function typeSelectLabelFilter(a){return function(b,c,d,e){var f=extractIgnoreTrackFilter(d);f.type=b,f.status=e;var g=a("mismatchCount")(c,f);return a("mismatchTypeLabel")(b)+" ("+g+")"}}
// Ensures that the copycat object contains properties
// corresponding to the property names of the model object
// properties with the default val will be created if they do not exist already
function ensureProperties(a,b,c){var d=typeof c;
// Delete properties of copycat that do not exist in the model or are not boolean props
for(var e in b)b.hasOwnProperty(e)&&(!a.hasOwnProperty(e)||"undefined"!==d&&typeof b[e]!==d)&&delete b[e];
// Add any model properties that are missing from the copycat
for(var f in a)a.hasOwnProperty(f)&&!b.hasOwnProperty(f)&&(b[f]="undefined"!==d?c:a[f])}
// Sets all properties in the given object to the given value
function setAllProperties(a,b){for(var c in a)a.hasOwnProperty(c)&&(a[c]=b)}function openSummaryCtrl(a,b,c){function d(){a.loadingSummaries=!0,c.get({},function(b){a.summaries=b.result.summaryMap,a.loadingSummaries=!1},function(b){a.loadingSummaries=!1,a.summaryRequestError=!0})}a.summaries={},a.init=function(){a.setHeaderText("Summary of Open Mismatches"),d()}}var openApp=angular.module("open",
// External modules
["ngRoute","ngResource","ngMaterial","smart-table","ui.calendar","angularUtils.directives.dirPagination","diff-match-patch","ngAnimate",
// Internal modules
"open.bill","open.agenda","open.law","open.calendar","open.spotcheck","open.transcript","open.admin"]);
// Configure the material themes
openApp.config(function(a){var b=a.extendPalette("grey",{500:"#f1f1f1",300:"#eee",800:"#444",A100:"#fff",contrastDefaultColor:"dark"}),c=a.extendPalette("blue",{A200:"#008cba",A100:"#165b81",A400:"#2b6a90",
//'A700':'#fff',
contrastLightColors:["A200","A100","A400","A700"]});a.definePalette("primaryPalette",b),a.definePalette("bluePalette",c),a.theme("default").primaryPalette("primaryPalette").accentPalette("bluePalette")}).constant("$mdGesture",{}).config(function(a){a.defaults.stripTrailingSlashes=!1}).config(function(a){a.setPath(ctxPath+"/static/tpl/dirPagination.tpl.html")}),/**
 * App Controller
 * --------------
 *
 * Since AppCtrl is the top-most parent controller, some useful utility methods are included here to be used
 * by the children controller.
 */
openApp.controller("AppCtrl",["$scope","$location","$mdSidenav","$mdDialog","$http","$interval","$window","$filter",function(a,b,c,d,e,f,g,h){function i(a,b){for(var c=[],d=a;d>=b;d-=2)c.push(d);return c}a.header={text:"",visible:!1},a.firstSession=2009,a.activeSession=h("sessionYear")(),
// List of session years for which there is data, descending from the current session
a.activeSessionYears=i(a.activeSession,a.firstSession),a.ctxPath=ctxPath,/**
     * Toggle the left navigation menu (only works on mobile, left nav is locked on larger screens).
     */
a.toggleLeftNav=function(){c("left").toggle()},/**
     * Set the text of the top header bar. This should be called by any controller that is responsible for
     * rendering a view.
     * @param text string
     */
a.setHeaderText=function(b){a.header.text=b},/**
     * If the screen is larger than 'sm', indicate whether to display the top header bar.
     * On small screens, the header will always be visible since it contains the mobile menu.
     *
     * @param visible boolean
     */
a.setHeaderVisible=function(b){a.header.visible=b},/**
     * Log a message in the console
     * @param stuff
     */
a.log=function(a){console.log(a)},/**
     * Return the keys of the given object in array form
     * @param obj
     * @returns {Array}
     */
a.keys=function(a){return Object.keys(a)},/**
     * Navigate to the given url. Useful for ngClick callbacks.
     * @param url string
     */
a.go=function(a){b.url(a)},/**
     * Navigate to the given url in a new tab.
     * @param url string
     */
a.goNewTab=function(a){console.log("hello"),console.log("opening",a,"in new tab"),g.open(a,"_blank")},/** Given a moment date object, return an iso-8601 string representing the local time */
a.toZonelessISOString=function(a){return a.format("YYYY-MM-DDTHH:mm:ss.SSS")},/**
     * Sets the request/search param 'paramName' to paramValue if condition is not false.
     * If param value is null/empty/false or condition is false, the request param is set to null,
     * effectively removing it from the url.  Replaces last url in history
     */
a.setSearchParam=function(a,c,d){b.search(a,d!==!1?c:null).replace()},a.clearSearchParams=function(){b.search({})},/**
     * Handles cases where an invalid api parameter was given by constructing a dialog from the error response
     */
a.invalidParamDialog=function(a){if(400===a.status&&1===a.data.errorCode){var b=a.data.errorData,c=b.parameterConstraint.name;d.show(d.alert().title("Invalid Parameter: "+c).content("Value '"+b.receivedValue+"' is not a valid for request parameter "+c).ok("OK"))}},a.notImplementedDialog=function(){d.show(d.confirm().title("Not Yet Implemented").content("Coming Soon!").ariaLabel("Feature Not Yet Implemented").theme("md-primary").ok("Can't Wait!!").cancel("I can wait"))}}]);var coreModule=angular.module("open.core",[]);/**
 * Filter to provide a default string if the input is falsy.
 */
coreModule.filter("default",["$filter",function(a){return function(a,b){return a?a:b}}]),/**
 * Converts a date/time string into a moment object and then produces
 * a formatted date/time string based on the supplied moment format.
 *
 * e.g. {{myRawDateString | moment:'MM/DD/YYYY'}}
 */
coreModule.filter("moment",["$filter",function(a){return function(a,b,c){return a?moment(a).format(b):"undefined"!=typeof c?c:"--"}}]),/**
 * Converts a year into it's session year.
 * Returns the current session if no year is supplied
 */
coreModule.filter("sessionYear",["$filter",function(a){return function(a){return a=a||moment().year(),a%2===0?a-1:a}}]),/**
 * Outputs a value if the given input matches a key on the supplied map.
 */
coreModule.filter("label",function(){return function(a,b){return a in b?b[a]:a}}),/**
 * Appends an appropriate ordinal suffix to the input number
 */
coreModule.filter("ordinalSuffix",["$filter",function(a){var b=["th","st","nd","rd"];return function(a){if("number"==typeof a&&a%1===0){var c=a<20?a%20:a%10;return a.toString().concat(c<=3?b[c]:b[0])}return"D:"}}]),/**
 * Converts the properties of an object to an array of key, value pairs.
 * Useful when you want to use the orderBy filter on the properties of an object
 */
coreModule.filter("toDictionaryArray",function(){return function(a){if(!(a instanceof Object))return a;var b=[];for(var c in a)b.push({key:c,value:a[c]});return b}}),/**
 * Takes a camelCased string like 'meowCasedWoof' and turns it into 'meow cased woof'
 */
coreModule.filter("unCamelCase",function(){return function(a){return a.split(/(?=[A-Z])/).map(function(a){return a.toLowerCase()}).join(" ")}}),/**
 * Capitalizes the first letter of each word.
 */
coreModule.filter("titleCaps",function(){return function(a){return a.replace(/\w\S*/g,function(a){return a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()})}}),/**
 * Generates list of years.
 */
coreModule.factory("YearGenerator",function(){return{getSingleYearsInt:function(a,b){var c=[];b||(b=(new Date).getFullYear());for(var d=a;d<=b;d++)c.push(d);return c},getSessionYearsInt:function(a,b){var c=this.getSingleYearsInt(a,b);return c.filter(function(a){return a%2!=0})},getSingleYearsStr:function(a,b){var c=this.getSingleYearsInt(a,b);return c.map(function(a){return String(a)})}}}),/**
 * Basic Pagination model that represents the state of a paginated list.
 */
coreModule.factory("PaginationModel",function(){return{firstPage:1,currPage:1,lastPage:1,itemsPerPage:6,totalItems:0,setTotalItems:function(a){this.totalItems=a,this.lastPage=Math.ceil(this.totalItems/this.itemsPerPage),this.currPage>this.lastPage&&(this.currPage=1)},reset:function(){this.currPage=1},needsPagination:function(){return this.totalItems>this.itemsPerPage},getOffset:function(){return this.itemsPerPage*(this.currPage-1)+1},getLimit:function(){return this.itemsPerPage},nextPage:function(){this.currPage+=1},hasNextPage:function(){return this.currPage<this.lastPage},prevPage:function(){this.currPage=Math.max(this.currPage-1,0)},hasPrevPage:function(){return this.currPage>this.firstPage},toLastPage:function(){this.currPage=this.lastPage},toFirstPage:function(){this.currPage=this.firstPage}}}),coreModule.filter("default",["$filter",function(a){return function(a,b){return a?a:b}}]),coreModule.filter("moment",["$filter",function(a){return function(a,b,c){return a?moment(a).format(b):"undefined"!=typeof c?c:"--"}}]),/**
 * Appends an appropriate ordinal suffix to the input number
 */
coreModule.filter("ordinalSuffix",["$filter",function(a){var b=["th","st","nd","rd"];return function(a){if("number"==typeof a&&a%1===0){var c=a<20?a%20:a%10;return a.toString().concat(c<=3?b[c]:b[0])}return"D:"}}]),coreModule.factory("sessionYears",[function(){function a(){for(var a=[],b=2009;b<=(new Date).getFullYear();b+=2)a.push(b);return a}return a()}]),/** --- CheckButton --- */
coreModule.directive("checkButton",function(){return{restrict:"E",scope:{btnclass:"@btnClass",btnmodel:"=ngModel"},transclude:!0,template:"<button type='button' class='check-button {{btnclass}}' ng-class='{success: btnmodel, disabled: !btnmodel }' btn-checkbox ng-model='btnmodel' ng-transclude></button>"}}),/**
 * A page number input designed to work for an angular smart tables pagination template
 */
coreModule.directive("stPaginationInput",function(){return{restrict:"E",template:'<input type="number" class="select-page" min="1" max="{{numPages}}"ng-model="inputPage" ng-change="selectPage(inputPage)" ng-model-options="{debounce:100}">',link:function(a,b,c){a.$watch("currentPage",function(b){a.inputPage=b})}}}),/**
 * Safe Highlights Directive
 * -------------------------
 */
coreModule.factory("safeHighlights",["$sce",function(a){return function(b){angular.forEach(b,function(b){if(b.hasOwnProperty("highlights"))for(var c in b.highlights)for(var d=b.highlights[c].length||0,e=0;e<d;e++)b.highlights[c][e]&&(b.highlights[c][e]=a.trustAsHtml(String(b.highlights[c][e]).replace(/\\n/g," ... ")))})}}]),/**
 * Updates List
 *
 * Displays a list of updates.
 *
 * Usage
 * -----
 * <update-list updates-response="updatesResponse" [pagination="pagination"]
 *              [show-id="showId"] [show-details="showDetails"]></update-list>
 *
 * Attributes
 * ----------
 * updates-response - The full json updates api response
 * pagination - pagination object - When included, the list will display a pagination bar based on this object
 * show-id - boolean variable - default true - Content Ids will be shown when this is true
 * show-details - boolean variable - default true - Update detail tables will be shown when this is true
 */
coreModule.directive("updateList",["PaginationModel",function(a){return{restrict:"E",scope:{updateResponse:"=",pagination:"=?",showId:"=?",showDetails:"=?",fromDate:"=?",toDate:"=?"},templateUrl:ctxPath+"/partial/core/update-list",link:function(b,c,d){b.showId=b.showId||!0,b.showDetails=b.showDetails!==!1,b.pagination||(b.paginationModel=angular.extend({},a),b.paginationModel.itemsPerPage=Number.MAX_SAFE_INTEGER)}}}]),/**
 * Update Id
 *
 * Generates a content id string for an update based on its scope
 * Returns a less specific Id if the update is an update token
 */
coreModule.filter("updateId",function(){return function(a){var b=a.contentType,c=a.id,d="";
// Calendars
if("CALENDAR"===b){if(d="Calendar "+c.calendarNumber+" ("+c.year+")","fields"in a)if("supVersion"in a.fields){var e=a.fields.supVersion;d+="-"+(""==e?"floor":e)}else"sequenceNo"in a.fields&&(d+="-"+a.fields.sequenceNo)}else"AGENDA"===b?d="Agenda "+c.number+" ("+c.year+")":"LAW"===b?d=c.lawId+" ("+c.locationId+")":"BILL"===b&&(d=c.basePrintNo+"-"+c.session);return d}}),/**
 * Image Error Placeholder
 *
 * When set on an img tag, changes the src to a placeholder value if an error occurs while loading the image.
 *
 * Usage
 * -----
 * <img ng-src="imageURL" err-src="placeHolderURL"/>
 */
coreModule.directive("errSrc",function(){return{restrict:"A",link:function(a,b,c){b.bind("error",function(){c.src!=c.errSrc&&c.$set("src",c.errSrc)})}}}),coreModule.directive("lineNumbers",function(){return{restrict:"E",scope:{lineStart:"=?",lineEnd:"=?",source:"=?"},replace:!0,transclude:!0,template:"<span class='line-numbers'><span ng-repeat='i in range(lineEnd-lineStart + 1) track by $index'>{{$index + lineStart}}</span></span>",link:function(a){a.lineStart=a.lineStart||1,a.lineEnd||(a.source&&"string"==typeof a.source?a.lineEnd=a.source.split("\n").length:a.lineEnd=0),a.range=function(a){return new Array(a)}}}}),/**
 * The toggle-panel directive wraps your content in expandable/collapsible container.
 *
 * Ex Usage
 * -----
 * <toggle-panel label="My Title" open="true" extra-classes="my-css">
 *   Insert your content here...
 * </toggle-panel>
 *
 * Attributes
 * ----------
 * label (String) The text for your container header
 * open (boolean) Set to true to expand the content, false to collapse
 * render-closed (boolean) Allows closed content to render when set to true
 * extra-classes (String) Any css classes you want to apply to the outermost toggle panel container
 * show-tip (boolean) Set to true to see a 'Click to expand section' tip when panel is collapsed.
 * callback (fn) Callback when the panel is opened
 */
coreModule.directive("togglePanel",[function(){return{restrict:"E",scope:{label:"@",extraClasses:"@",callback:"=",renderClosed:"@"},replace:!0,transclude:!0,template:'<md-card class="toggle-panel {{extraClasses}}" ng-class="{\'open\': open}">   <md-card-content class="toggle-panel-bar" ng-click="toggle()">       <div>           <a class="toggle-panel-label">{{label}}</a>           <span flex></span>           <i ng-class="{\'icon-chevron-up\': open, \'icon-chevron-down\': !open}" style="float: right"></i>           <span class="text-xsmall margin-right-20" ng-show="showTip && !open" style="float: right">               (Click to expand section)</span>       </div>   </md-card-content>   <md-card-content ng-if="opened || renderClosed" ng-show="open" class="panel-content" ng-cloak ng-transclude></md-card-content></md-card>',link:function(a,b,c){a.opened=!1,a.toggle=function(){a.open=!a.open,a.callback&&a.callback(a.open)},a.renderClosed="true"==a.renderClosed,
// Convert attribute value to boolean using watch
a.$watch(c.open,function(b){a.open=b}),a.$watch(c.showTip,function(b){a.showTip=b}),a.$watch("open",function(c,d){var e=b.children(".panel-content");c?e.slideDown(200):e.slideUp(200),a.opened=c||a.opened})}}}]),/**
 * Main Menu Directive
 * -------------------
 * Constructs the left navigation menu with collapsible sections. Check out the fancy ink ripples!
 * Usage:
 * <material-menu>
 *     <menu-section title="Title of the section">
 *         <menu-item url="URL of the section item">Title of the menu item</menu-item>
 *          ...
 *     </menu-section>
 * </material-menu>
 */
openApp.directive("materialMenu",["$compile","$rootScope","$mdSidenav","$log","$location","$timeout",function(a,b,c,d,e,f){return{scope:{},// Isolated scope
template:'<nav>  <div ng-repeat="section in menu.sections">    <a ng-class="{active: isSectionSelected(section)}" class="menu-item menu-title md-menu-item"       ng-click="selectSection(section)" tab-index="-1"> {{section.title}}    </a>    <div ng-if="section.items" ng-repeat="item in section.items">      <a ng-class="{active: isItemSelected(item)}" target="{{item.target}}"         class="menu-item menu-sub-item md-menu-item"          ng-show="isSectionSelected(section)" tab-index="-1"         ng-href="{{item.url}}">         <span><i ng-class="item.icon" class="prefix-icon2"></i><span ng-bind="item.title"></span></span>      </a>    </div>  </div></nav>',restrict:"E",replace:!0,controller:function(a){function d(b){angular.forEach(a.urlMap,function(a){b?a.ref.active=!1:a.secRef.active=!1})}a.isSectionSelected=function(a){return a.active},a.isItemSelected=function(a){return a.active},a.selectSection=function(a){d(!1),a.active=!0},a.selectItem=function(a){d(!0),a.active=!0,c("left").close()},b.$on("$routeChangeSuccess",function(){a.urlMap.some(function(b){return!!b.re.test(e.url())&&(a.selectSection(b.secRef),a.selectItem(b.ref),!0)})})},compile:function(a,b,c){return{pre:function(a,b,c){
// The menu object is used to render the nav.
a.menu={sections:[]};var d=$(b.context).children("menu-section");angular.forEach(d,function(b){var c={title:b.title,items:[]};angular.forEach($(b).children("menu-item"),function(a){var b={url:$(a).attr("url"),title:$(a).text(),icon:$(a).attr("icon"),target:$(a).attr("target")};c.items.push(b)}),a.menu.sections.push(c)}),
// The url map is used to find route matches when the location changes.
a.urlMap=[],angular.forEach(a.menu.sections,function(b){angular.forEach(b.items,function(c){a.urlMap.push({isSection:!1,url:c.url,re:new RegExp("^"+c.url),ref:c,secRef:b})})}),a.urlMap.sort(function(a,b){return b.url.length-a.url.length})}}}}}]),/** --- CheckButton --- */
coreModule.directive("checkButton",function(){return{restrict:"E",scope:{btnClass:"@",btnModel:"=ngModel",ariaLabel:"@"},transclude:!0,template:"<md-button class='check-butt md-default-theme {{btnClass}}' aria-label='{{ariaLabel}}'   ng-mouseenter='hover = true' ng-mouseleave='hover = false'   ng-class='{\"md-primary\": btnModel, \"md-raised\": btnModel || hover, \"md-background\": !btnModel }'    ng-click='toggle()'> <ng-transclude></ng-transclude></md-button>",controller:function(a){a.toggle=function(){a.btnModel=!a.btnModel}}}}),/**
 * Utility methods related to bill data.
 */
coreModule.factory("BillUtils",[function(){return{getStatusDesc:function(a){var b="";if(a)switch(a.statusType){case"IN_SENATE_COMM":b="In Senate "+a.committeeName+" Committee";break;case"IN_ASSEMBLY_COMM":b="In Assembly "+a.committeeName+" Committee";break;case"SENATE_FLOOR":b="On Senate Floor as Calendar No: "+a.billCalNo;break;case"ASSEMBLY_FLOOR":b="On Assembly Floor as Calendar No: "+a.billCalNo;break;default:b=a.statusDesc}return b}}}]),/** Routing Configuration --- */
angular.module("open").config(["$routeProvider","$locationProvider",function(a,b){a.when(ctxPath+"/bills",{templateUrl:ctxPath+"/partial/content/bill/bill-search",reloadOnSearch:!1}).when(ctxPath+"/bills/:session/:printNo",{templateUrl:ctxPath+"/partial/content/bill/bill-view",reloadOnSearch:!1}).when(ctxPath+"/agendas",{templateUrl:ctxPath+"/partial/content/agenda/agenda-search",reloadOnSearch:!1}).when(ctxPath+"/agendas/:year/:agendaNo",{templateUrl:ctxPath+"/partial/content/agenda/agenda-view",reloadOnSearch:!1}).when(ctxPath+"/agendas/:year/:agendaNo/:comm",{templateUrl:ctxPath+"/partial/content/agenda/agenda-view",reloadOnSearch:!1}).when(ctxPath+"/calendars",{templateUrl:ctxPath+"/partial/content/calendar/calendar-search",reloadOnSearch:!1}).when(ctxPath+"/calendars/:year/:calNo",{templateUrl:ctxPath+"/partial/content/calendar/calendar-view",reloadOnSearch:!1}).when(ctxPath+"/laws",{templateUrl:ctxPath+"/partial/content/law/law-search",reloadOnSearch:!1}).when(ctxPath+"/laws/:lawId",{templateUrl:ctxPath+"/partial/content/law/law-view",reloadOnSearch:!1}).when(ctxPath+"/members",{templateUrl:ctxPath+"/partial/content/member/member-search",reloadOnSearch:!1}).when(ctxPath+"/members/:sessionYear/:memberId",{templateUrl:ctxPath+"/partial/content/member/member-view",reloadOnSearch:!1}).when(ctxPath+"/transcripts",{templateUrl:ctxPath+"/partial/content/transcript/transcript-list",reloadOnSearch:!1}).when(ctxPath+"/transcripts/session/:filename/",{templateUrl:ctxPath+"/partial/content/transcript/session-transcript-view",reloadOnSearch:!1}).when(ctxPath+"/transcripts/hearing/:filename/",{templateUrl:ctxPath+"/partial/content/transcript/hearing-transcript-view"}).when(ctxPath+"/admin/report/spotcheck",{templateUrl:ctxPath+"/partial/report/spotcheck-summary",reloadOnSearch:!1}).when(ctxPath+"/admin/report/spotcheck/open",{templateUrl:ctxPath+"/partial/report/spotcheck-open-summary"}).when(ctxPath+"/admin/report/spotcheck/open/:reportType",{templateUrl:ctxPath+"/partial/report/spotcheck-mismatch",reloadOnSearch:!1}).when(ctxPath+"/admin/report/spotcheck/:type/:runTime",{templateUrl:ctxPath+"/partial/report/spotcheck-report",reloadOnSearch:!1}).when(ctxPath+"/admin",{templateUrl:ctxPath+"/partial/admin/dashboard",reloadOnSearch:!1}).when(ctxPath+"/admin/account",{templateUrl:ctxPath+"/partial/admin/account",reloadOnSearch:!1}).when(ctxPath+"/admin/logs",{templateUrl:ctxPath+"/partial/admin/logs",reloadOnSearch:!1}).when(ctxPath+"/admin/logout",{templateUrl:ctxPath+"/partial/admin/logout"}).when(ctxPath+"/docs",{redirectTo:ctxPath+"/docs"}).when(ctxPath+"/logout",{redirectTo:ctxPath+"/logout",reloadOnSearch:!0}).otherwise({redirectTo:ctxPath+"/bills"}),b.html5Mode(!0),b.hashPrefix("!")}]);var apiModule=angular.module("open.api",[]);/** --- Bill API --- */
apiModule.factory("BillListingApi",["$resource",function(a){return a(apiPath+"/bills/:sessionYear?sort=:sort&limit=:limit&offset=:offset",{sessionYear:"@sessionYear",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillSearchApi",["$resource",function(a){return a(apiPath+"/bills/:session/search/?term=:term&sort=:sort&limit=:limit&offset=:offset",{session:"@session",term:"@term",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillAggUpdatesApi",["$resource",function(a){return a(apiPath+"/bills/updates/:from/:to?order=:order&type=:type&filter=:filter&limit=:limit&offset=:offset&summary=true",{from:"@from",to:"@to",type:"@type",order:"@order",filter:"@filter",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillGetApi",["$resource",function(a){return a(apiPath+"/bills/:session/:printNo?view=:view&version=:version",{session:"@session",printNo:"@printNo",view:"@view",version:"@version"})}]),apiModule.factory("BillUpdatesApi",["$resource",function(a){return a(apiPath+"/bills/:session/:printNo/updates?order=:order&filter=:filter&limit=:limit&offset=:offset",{session:"@session",printNo:"@printNo",order:"@order",filter:"@filter",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillDiffApi",["$resource",function(a){return a(apiPath+"/bills/:session/:printNo/diff/:version1/:version2/",{session:"@session",printNo:"@printNo",version1:"@version1",version2:"@version2"})}]),/** --- Calendar API --- */
apiModule.factory("CalendarViewApi",["$resource",function(a){return a(apiPath+"/calendars/:year/:calNo",{year:"@year",calNo:"@calNo"})}]),apiModule.factory("CurrentCalendarIdApi",["$resource",function(a){return a(apiPath+"/calendars/:year?order=DESC&limit=1",{year:"@year"})}]),apiModule.factory("CalendarIdsApi",["$resource",function(a){return a(apiPath+"/calendars/:year",{year:"@year"})}]),apiModule.factory("CalendarSearchApi",["$resource",function(a){return a(apiPath+"/calendars/search",{})}]),apiModule.factory("CalendarUpdatesApi",["$resource",function(a){return a(apiPath+"/calendars/:year/:calNo/updates",{year:"@year",calNo:"@calNo"})}]),apiModule.factory("CalendarFullUpdatesApi",["$resource",function(a){return a(apiPath+"/calendars/updates/:fromDateTime/:toDateTime/",{fromDateTime:"@fromDateTime",toDateTime:"@toDateTime"})}]),/** --- Agenda API --- */
apiModule.factory("AgendaListingApi",["$resource",function(a){return a(apiPath+"/agendas/:year?sort=:sort&limit=:limit&offset=:offset",{year:"@year",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("AgendaMeetingApi",["$resource",function(a){return a(apiPath+"/agendas/meetings/:from/:to",{from:"@from",to:"@to"})}]),apiModule.factory("AgendaSearchApi",["$resource",function(a){return a(apiPath+"/agendas/search?term=:term&sort=:sort&limit=:limit&offset=:offset",{term:"@term",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("AgendaGetApi",["$resource",function(a){return a(apiPath+"/agendas/:year/:agendaNo/",{year:"@year",agendaNo:"@agendaNo"})}]),apiModule.factory("AgendaUpdatesApi",["$resource",function(a){return a(apiPath+"/agendas/:year/:agendaNo/updates",{year:"@year",agendaNo:"@agendaNo"})}]),apiModule.factory("AgendaAggUpdatesApi",["$resource",function(a){return a(apiPath+"/agendas/updates/:from/:to",{from:"@from",to:"@to"})}]),/** --- Law API --- */
apiModule.factory("LawListingApi",["$resource",function(a){return a(apiPath+"/laws")}]),apiModule.factory("LawTreeApi",["$resource",function(a){return a(apiPath+"/laws/:lawId?fromLocation=:fromLocation&depth=:depth",{lawId:"@lawId",fromLocation:"@fromLocation",depth:"@depth"})}]),apiModule.factory("LawDocApi",["$resource",function(a){return a(apiPath+"/laws/:lawId/:docId/",{lawId:"@lawId",docId:"@docId"})}]),apiModule.factory("LawFullSearchApi",["$resource",function(a){return a(apiPath+"/laws/search?term=:term",{term:"@term"})}]),apiModule.factory("LawVolumeSearchApi",["$resource",function(a){return a(apiPath+"/laws/:lawId/search?term=:term",{lawId:"@lawId",term:"@term"})}]),apiModule.factory("LawFullUpdatesApi",["$resource",function(a){return a(apiPath+"/laws/updates/:from/:to/",{from:"@from",to:"@to",type:"@type",order:"@order"})}]),apiModule.factory("LawVolumeUpdatesApi",["$resource",function(a){return a(apiPath+"/laws/:lawId/updates",{lawId:"@lawId",order:"@order"})}]),/** --- Transcript API --- */
apiModule.factory("SessionListingApi",["$resource",function(a){return a(apiPath+"/transcripts/:year?summary=true&limit=:limit&offset=:offset&sort=:sort",{year:"@year",limit:"@limit",offset:"@offset",sort:"dateTime:desc"})}]),apiModule.factory("SessionTranscriptDetailsApi",["$resource",function(a){return a(apiPath+"/transcripts/:filename",{filename:"@filename"})}]),apiModule.factory("PublicHearingListingApi",["$resource",function(a){return a(apiPath+"/hearings/:year?full=true&limit=:limit&offset=:offset&sort=:soft",{year:"@year",limit:"@limit",offset:"@offset",sort:"date:desc"})}]),apiModule.factory("PublicHearingDetailsApi",["$resource",function(a){return a(apiPath+"/hearings/:filename",{filename:"@filename"})}]),apiModule.factory("TranscriptSearchApi",["$resource",function(a){return a(apiPath+"/transcripts/:year/search",{term:"@term",summary:!0,year:"@year",limit:"@limit",offset:"@offset",sort:"_score:desc,dateTime:desc"})}]),apiModule.factory("PublicHearingSearchApi",["$resource",function(a){return a(apiPath+"/hearings/:year/search",{term:"@term",summary:!0,year:"@year",limit:"@limit",offset:"@offset",sort:"_score:desc,date:desc"})}]),/** --- Members API --- */
coreModule.factory("MemberApi",["$resource",function(a){return a(apiPath+"/members/:sessionYear/:chamber?limit=1000",{sessionYear:"@sessionYear",chamber:"@chamber"})}]),coreModule.factory("CommitteeListingApi",["$resource",function(a){return a(apiPath+"/committees/:sessionYear/senate",{sessionYear:"@sessionYear"})}]);var openModule=angular.module("open");openModule.controller("ContentDashboardCtrl",["$scope","$timeout",function(a,b){a.setHeaderVisible(!0),a.setHeaderText("Legislation Dashboard"),a.items=[];for(var c=0;c<1e3;c++)a.items.push(c)}]);var billModule=angular.module("open.bill",["open.core","open.api"]);/** --- Parent Bill Controller --- */
billModule.controller("BillCtrl",["$scope","$rootScope","$location","$route","$routeParams","BillUtils","MemberApi",function(a,b,c,d,e,f,g){a.setHeaderVisible(!0),a.setHeaderText("Search NYS Legislation"),a.selectedView=parseInt(e.view,10)||0,/** Watch for changes to the current view. */
a.$watch("selectedView",function(b,d){b!==d&&c.search().view!==b&&(c.search("view",a.selectedView),a.$broadcast("viewChange",a.selectedView))}),a.$on("$locationChangeSuccess",function(){a.selectedView=+c.search().view||0}),
// Convenience method for formatting bill status description
a.getStatusDesc=function(a){return f.getStatusDesc(a)}}]);var billModule=angular.module("open.bill"),billModule=angular.module("open.bill");/** --- Filters --- */
billModule.filter("resolutionOrBill",function(){return function(a){return a?"Resolution":"Bill"}}),billModule.filter("prettyAmendVersion",function(){return function(a){return a?a:"Original"}}),billModule.filter("voteTypeFilter",function(){return function(a){switch(a){case"AYE":return"Aye";case"NAY":return"Nay";case"AYEWR":return"Aye with reservations";case"ABS":return"Absent";case"ABD":return"Abstained";case"EXC":return"Excused";default:return"Unknown"}}});var billModule=angular.module("open.bill");/** --- Directives --- */
billModule.directive("milestones",[function(){/** Returns an array of milestone descriptions. */
var a=function(a){var b=[],c=function(a){return{statusDesc:a,actionDate:null}},d=[c("In Senate Committee"),c("On Senate Floor"),c("Passed Senate")],e=[c("In Assembly Committee"),c("On Assembly Floor"),c("Passed Assembly")];return b="SENATE"==a?b.concat(d).concat(e):b.concat(e).concat(d),b=b.concat([c("Sent to Governor"),c("Signed Into Law")])},b=function(b,c){var d=[];
// Replacing part of the arrays that overlap.. maybe there is a cleaner way, idk...
return b&&(d=a(c),[].splice.apply(d,[0,b.size].concat(b.items))),d};return{restrict:"E",scope:{milestoneArr:"=",chamber:"="},replace:!0,template:'<div class="bill-ms-container"><div ng-repeat="milestone in paddedMs"><div class="bill-ms-step" ng-class="{\'filled\': milestone.actionDate !== null, \'vetoed\': milestone.statusDesc == \'Vetoed\'}"><md-tooltip>{{milestone.statusDesc}}<span ng-if="milestone.actionDate">&nbsp;| {{milestone.actionDate | moment:\'MMM DD, YYYY\'}}</span><span ng-if="milestone.committeeName">&nbsp;| {{milestone.committeeName}}</span><span ng-if="milestone.billCalNo">&nbsp;| Cal #{{milestone.billCalNo}}</span></md-tooltip></div><div ng-class="{\'bill-ms-line\': $index !== 7}"></div></div></div>',link:function(a,c,d){a.paddedMs=b(a.milestoneArr,a.chamber)}}}]),billModule.directive("billListing",["BillUtils",function(a){return{restrict:"E",scope:{billIds:"=",billRefsMap:"=",bills:"=",billSearchTerm:"=",showTitle:"=",showImg:"="},templateUrl:ctxPath+"/partial/content/bill/bill-listing-view",controller:function(b,c){b.billUtils=a,b.billIds&&b.billRefsMap&&!b.bills?b.billViews=b.billIds.map(function(a){var c=a.basePrintNo+"-"+a.session;return b.billRefsMap[c]?b.billRefsMap[c]:angular.extend({},a,{idOnly:!0})}):b.bills&&(b.billViews=b.bills)}}}]),billModule.directive("billSearchListing",["BillUtils",function(a){return{restrict:"E",scope:{billSearchResponse:"=",billSearchTerm:"=",pagination:"=",onPageChange:"=",showTitle:"=",showImg:"="},templateUrl:ctxPath+"/partial/content/bill/bill-search-listing-view",controller:function(b,c){b.billUtils=a;var d=b.pagination.currPage;b.pageChange=function(a){d!=a&&b.onPageChange&&(d=a,// Prevents duplicate calls
b.onPageChange(a))}}}}]),billModule.directive("billUpdatesListing",["BillUtils",function(a){return{restrict:"E",scope:{billUpdateResponse:"=",pagination:"=",onPageChange:"=",showTitle:"=",showImg:"=",showDetail:"="},templateUrl:ctxPath+"/partial/content/bill/bill-update-listing-view",controller:function(b,c){b.billUtils=a;var d=b.pagination.currPage;b.pageChange=function(a){d!=a&&b.onPageChange&&(d=a,// Prevents duplicate calls
b.onPageChange(a))}}}}]),billModule.directive("billRefineSearchPanel",["BillUtils",function(a){return{restrict:"E",scope:{searchParams:"=",onChange:"="},templateUrl:ctxPath+"/partial/content/bill/bill-refine-search-panel",controller:function(a,b){a.params=a.params||{},a.$watchCollection("searchParams",function(b,c){b!=c&&a.onChange(a.searchParams)})}}}]);var billModule=angular.module("open.bill");/** --- Bill Search Controller --- */
billModule.controller("BillSearchCtrl",["$scope","$filter","$routeParams","$location","$sce","BillSearchApi","PaginationModel",function(a,b,c,d,e,f,g){a.curr={state:"initial",pagination:angular.extend({},g,{itemsPerPage:6}),billSearch:{term:c.search||"",session:c.session||"",refine:{},isRefined:!1,sort:c.sort||"_score:desc,session:desc",response:{},results:[],error:!1}},
// The refine parameters in the url will be prefixed with the following string
a.refineUrlParamPrefix="refine:",
// The following maps refine params to search columns
a.refinePaths={actionText:"actions.\\*.text",agendaNo:"\\*.agendaId.number",billCalNo:"\\*.billCalNo",chamber:"billType.chamber",committeeName:"status.committeeName",fullText:"amendments.\\*.fullText",isRes:"billType.resolution",lawCode:"amendments.\\*.lawCode",lawSection:"amendments.\\*.lawSection",memo:"amendments.\\*.memo",printNo:"printNo",
//milestones: "milestones.size",
sponsor:"sponsor.member.memberId",status:"status.statusType",title:"title"},
// Any refined params that have custom query logic are defined here
// These are params that don't have a simple column:value query.
a.refineFixedPaths={signed:"(signed:true OR adopted:true)",hasVotes:"(votes.size:>0)",hasApVetoMemo:"(vetoMessages.size:>0 OR !_empty_:approvalMessage)",isGov:"(programInfo.name:*Governor*)",isSubstituted:"(_exists_:substitutedBy)",isUni:"(amendments.\\*.uniBill:true)",isBudget:"(sponsor.budget:true)",isRulesSponsor:"(sponsor.rules:true)"},
// Initialize the bill search page.
a.init=function(){
// Set the pagination to point to the page specified in the url
a.curr.pagination.currPage=Math.max(parseInt(c.searchPage)||1,1),
// Set the refine params from the url
a.getRefineUrlParams(a.refineUrlParamPrefix),
// Perform a search to kick things off if there are no refine params.
a.simpleSearch(!1)},
// Performs a search against the API
a.simpleSearch=function(b){var c=a.curr.billSearch.term||"*";if(c){d.search("search",a.curr.billSearch.term),a.curr.state="searching",b&&(a.curr.pagination.currPage=1,d.search("searchPage",1));var e=a.buildRefinedQuery(c);a.curr.billSearch.response=f.get({session:a.curr.billSearch.session,term:e,sort:a.curr.billSearch.sort,limit:a.curr.pagination.getLimit(),offset:a.curr.pagination.getOffset()},function(){a.curr.billSearch.response&&a.curr.billSearch.response.success&&(a.curr.billSearch.error=!1,a.curr.billSearch.results=a.curr.billSearch.response.result.items||[],a.markHighlightsAsSafe(a.curr.billSearch.results),a.curr.pagination.setTotalItems(a.curr.billSearch.response.total),a.curr.state="searched")},function(b){a.curr.billSearch.error=b.data,a.curr.pagination.setTotalItems(0),a.curr.state="searched"})}else a.curr.billSearch.error=!1,a.curr.billSearch.results=[],a.curr.pagination.setTotalItems(0)},
// Combines the search term with any selected refine filters and constructs a search query
a.buildRefinedQuery=function(b){var c=a.curr.billSearch.refine,d=[];for(var e in c)c.hasOwnProperty(e)&&c[e]&&(a.refineFixedPaths[e]?d.push(a.refineFixedPaths[e]):a.refinePaths[e]&&d.push(a.refinePaths[e]+":("+c[e]+")"));return d.length>0?(b+=" AND "+d.join(" AND "),a.curr.billSearch.isRefined=!0):a.curr.billSearch.isRefined=!1,b},a.onRefineUpdate=function(){a.setRefineUrlParams(a.curr.billSearch.refine,a.refineUrlParamPrefix),a.simpleSearch(!1)},
// Reset the refine filters.
a.resetRefine=function(){a.curr.billSearch.refine={},a.curr.billSearch.isRefined=!1,a.setRefineUrlParams(a.curr.billSearch.refine,a.refineUrlParamPrefix),a.simpleSearch(!0)},a.setRefineUrlParams=function(b,d){
// Delete any existing refine URL params
for(var e in c)c.hasOwnProperty(e)&&e.slice(0,d.length)===d&&(delete c[e],a.setSearchParam(e,null));
// Set new refine URL params
for(var e in b)b.hasOwnProperty(e)&&b[e]&&a.setSearchParam(d+e,b[e])},a.getRefineUrlParams=function(b){for(var d in c)c.hasOwnProperty(d)&&d.slice(0,b.length)===b&&(a.curr.billSearch.refine[d.slice(b.length)]=c[d],a.curr.billSearch.isRefined=!0);return a.curr.billSearch.isRefined},
// Mark highlighted search results as safe html.
a.markHighlightsAsSafe=function(a){angular.forEach(a,function(a){if(a.hasOwnProperty("highlights"))for(var b in a.highlights)a.highlights[b][0]&&(a.highlights[b][0]=e.trustAsHtml(String(a.highlights[b][0])))})},
// Trigger a search and update the url when the sort field is changed.
a.sortChanged=function(){a.setSearchParam("sort",a.curr.billSearch.sort),a.simpleSearch(!0)},
// Trigger a search and update the url when the session field is changed.
a.sessionChanged=function(){a.setSearchParam("session",a.curr.billSearch.session),a.simpleSearch(!0)},
// Method that is triggered when the search listing page is changed.
a.pageChanged=function(b){a.setSearchParam("searchPage",b),a.simpleSearch(!1)},a.init()}]);var billModule=angular.module("open.bill");/** --- Bill Updates Controller --- */
billModule.controller("BillUpdatesCtrl",["$scope","$location","$routeParams","BillAggUpdatesApi","PaginationModel",function(a,b,c,d,e){a.pagination=angular.extend({},e),a.pagination.currPage=c.page||1,a.pagination.itemsPerPage=20,a.curr={state:"initial",options:{fromDate:c.fromDate?new Date(c.fromDate):moment().subtract(5,"days").startOf("minute").toDate(),toDate:c.toDate?new Date(c.toDate):moment().add(1,"days").startOf("minute").toDate(),type:c.type||"published",sortOrder:c.sortOrder||"desc",detail:c.detail===!0,filter:c.filter||""},billUpdates:{response:{},total:0,result:{},errMsg:""}},a.getUpdates=function(){a.curr.state="searching",a.curr.billUpdates.response=d.get({from:a.toZonelessISOString(moment(a.curr.options.fromDate)),to:a.toZonelessISOString(moment(a.curr.options.toDate)),type:a.curr.options.type,order:a.curr.options.sortOrder,detail:a.curr.options.detail,filter:a.curr.options.filter,limit:a.pagination.getLimit(),offset:a.pagination.getOffset()},function(){a.curr.billUpdates.total=a.curr.billUpdates.response.total,a.curr.billUpdates.result=a.curr.billUpdates.response.result,a.curr.state="searched"},function(b){a.curr.billUpdates.response.success=!1,a.curr.billUpdates.total=0,a.curr.billUpdates.errMsg=b.data.message,a.curr.state="searched"})},a.setUrlParams=function(){angular.forEach(a.curr.options,function(b,c){b&&b instanceof Date&&(b=a.toZonelessISOString(moment(b))),a.setSearchParam(c,b)})},a.onParamChange=function(){a.setUrlParams(),a.getUpdates(),a.pagination.reset()},a.onPageChange=function(b){a.setSearchParam("page",b),a.getUpdates()},a.init=function(){a.getUpdates()},
// Initialize
a.init()}]);var billModule=angular.module("open.bill");/** --- Bill View Controller --- */
billModule.controller("BillViewCtrl",["$scope","$filter","$location","$routeParams","$sce","BillGetApi","BillDiffApi","BillUpdatesApi",function(a,b,c,d,e,f,g,h){a.apiPath=null,a.response=null,a.bill=null,a.loading=!1,a.fullTextFetched={},// Contains a dict of versions to indicate the ones where text was fetched.
a.curr={amdVersion:"",compareVersion:"None",selectedView:parseInt(d.view,10)||1,updateTypeFilter:"status",updateOrder:"desc"},a.diffHtml=null,a.updateHistory=null,a.$watch("curr.selectedView",function(b,d){b!==d&&c.search("view",a.curr.selectedView).replace(),5===b&&// selected full text tab
a.fetchFullText()}),a.$watch("curr.amdVersion",function(b,c){b!==c&&5===a.curr.selectedView&&a.fetchFullText()}),a.init=function(){a.session=d.session,a.printNo=d.printNo;var c=/default|base/i,g=c.exec(d.version)?"":d.version&&d.version.toUpperCase();a.loading=!0,a.billApiPath=e.trustAsResourceUrl(apiPath+"/bills/"+a.session+"/"+a.printNo),a.response=f.get({printNo:a.printNo,session:a.session,view:"with_refs_no_fulltext"},function(){a.response.success&&(a.bill=a.response.result,a.mergeActions(a.bill),a.setHeaderText("NYS "+a.bill.billType.desc+" "+b("resolutionOrBill")(a.bill.billType.resolution)+" "+a.bill.basePrintNo+"-"+a.bill.session+(a.bill.session!==a.activeSession?" (Inactive) ":"")),a.curr.amdVersion=a.bill.amendments.items.hasOwnProperty(g)?g:a.bill.activeVersion),a.loading=!1},function(b){a.setHeaderText(b.data.message),a.response=b.data,a.loading=!1})}(),a.fetchFullText=function(){if(!a.fullTextFetched[a.curr.amdVersion]){a.loading=!0;var b=f.get({printNo:a.printNo,session:a.session,view:"only_fulltext",version:a.curr.amdVersion},function(){if(b.success){var c=b.result.version,d=b.result.fullText;a.bill.amendments.items[c].fullText=d,a.fullTextFetched[c]=!0}a.loading=!1},function(){a.loading=!1})}},a.mergeActions=function(a){var b=a.basePrintNoStr;if(a.substitutedBy){var c=a.substitutedBy.basePrintNoStr,d=a.actions.items.concat(a.billInfoRefs.items[c].actions.items).sort(function(a,b){return moment(a.date).diff(moment(b.date))}),e=d.slice(0),f=d.slice(0);
// Set sub bill actions to null in list 1
e=e.map(function(a){return a.billId.basePrintNoStr==b?a:null}),
// Set primary bill actions to null in list 2
f=f.map(function(a){return a.billId.basePrintNoStr==c?a:null}),a.mergedActions=[[b,e],[c,f]]}else a.mergedActions=[[b,a.actions.items]]},a.diffBills=function(){"None"!==a.curr.compareVersion?a.diffResponse=g.get({printNo:a.bill.printNo,session:a.bill.session,version1:a.curr.compareVersion.trim(),version2:a.curr.amdVersion},function(){a.diffHtml=e.trustAsHtml(a.diffResponse.result.diffHtml)}):a.diffHtml=null},a.initialGetUpdates=function(){null===a.updateHistory&&a.getUpdates()},a.getUpdates=function(){a.updateHistoryResponse=h.get({printNo:a.printNo,session:a.session,order:a.curr.updateOrder,filter:a.curr.updateTypeFilter,offset:1,limit:1e3},function(){a.updateHistoryResponse.success===!0&&(a.updateHistory=a.updateHistoryResponse.result)})},a.backToSearch=function(){c.search("view",0),c.path(ctxPath+"/bills")}}]);var calendarModule=angular.module("open.calendar",["open.core","open.api"]),calendarModule=angular.module("open.calendar");calendarModule.filter("sectionDisplayName",function(){var a={ORDER_OF_THE_FIRST_REPORT:"First Report",ORDER_OF_THE_SECOND_REPORT:"Second Report",ORDER_OF_THE_SPECIAL_REPORT:"Special Report",THIRD_READING_FROM_SPECIAL_REPORT:"Third Reading from Special Report",THIRD_READING:"Third Reading",STARRED_ON_THIRD_READING:"Starred on Third Reading"};return function(b){return a.hasOwnProperty(b)?a[b]:"* "+b}});var sectionArray=["ORDER_OF_THE_FIRST_REPORT","ORDER_OF_THE_SECOND_REPORT","ORDER_OF_THE_SPECIAL_REPORT","THIRD_READING_FROM_SPECIAL_REPORT","THIRD_READING","STARRED_ON_THIRD_READING"];calendarModule.filter("orderBySection",function(){return function(a){var b=[];return Object.keys(a).forEach(function(c){b.push(a[c])}),b.sort(function(a,b){return sectionArray.indexOf(a.items[0].sectionType)-sectionArray.indexOf(b.items[0].sectionType)}),b}});var calendarModule=angular.module("open.calendar");calendarModule.directive("calendarEntryTable",["BillUtils",function(a){return{scope:{year:"=",calEntries:"=",getCalBillNumUrl:"&",highlightValue:"=",sectionType:"@",scrollTo:"=",calEntryFilter:"="},templateUrl:ctxPath+"/partial/content/calendar/calendar-entry-table",controller:function(b){b.billUtils=a,b.billPageBaseUrl=ctxPath+"/bills",b.getCalBillNumUrl=b.getCalBillNumUrl()}}}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarViewCtrl",["$scope","$rootScope","$routeParams","$location","$q","$filter","$timeout","CalendarViewApi","CurrentCalendarIdApi",function(a,b,c,d,e,f,g,h,i){/** --- Get Calendar Data --- */
// Performs tasks that follow the loading of a new calendar view such as setting the header text
// and alerting child controllers
function j(){a.calendarNum=a.calendarView.calendarNumber,a.year=a.calendarView.year,
// Set the header text
a.setHeaderText("Senate Calendar #"+a.calendarView.calendarNumber+" - "+f("moment")(a.calendarView.calDate,"ll")),
// Alert child scopes of new calendar view
b.$emit("newCalendarEvent"),
// Scroll to the bill if specified in the url hash
a.scrollToBill(d.hash()),
// Switch to the tab specified for the incoming route or by default the active list or floor tab
(!a.tabParam||a.pageNames.indexOf(a.tabParam)<0)&&(a.calendarView.activeLists.size>0?a.tabParam="active-list":a.tabParam="floor"),a.changeTab(a.tabParam)}
// returns a predicate that takes in an object and returns true if the 'field' property of the object equals the matchingValue
function k(a,b){return function(c){return c[a]===b}}
// Returns true if the current active lists contain an entry that matches the given predicate
function l(b){var c=a.calendarView.activeLists.items;for(var d in c){var e=0;for(var f in c[d].entries.items){if(b(c[d].entries.items[f]))return{"active-list":e};e++}}return!1}
// Searches through every floor calendar entry returning the containing section of the first entry that matches
//  the given predicate.  Returns false if no entries match
function m(b){var c=[a.calendarView.floorCalendar];for(var d in a.calendarView.supplementalCalendars.items)c.push(a.calendarView.supplementalCalendars.items[d]);for(var e in c){var f=c[e].entriesBySection.items;for(var g in f){var h=0;for(var i in f[g].items){if(b(f[g].items[i])){var j={};return j[g]=h,j}h++}}}return!1}a.calendarView=null,
// Top header text
a.calendarHeaderText="",
// Stores reference to context path in scope
a.ctxPath=ctxPath,
// Current state variables
a.curr={state:"initial",activeIndex:2,topListIndex:{},openSections:{},sectionFilter:{}},
// Page types
a.pageNames=["sklerch","active-list","floor","updates"],a.highlightValue="none",a.init=function(){a.getCalendarViewById(c.year,c.calNo),c.hasOwnProperty("view")&&["active-list","sklerch"].indexOf(c.view)<0&&(a.tabParam=c.view),"sview"in c&&(a.previousPage=c.sview),a.$watch("curr.activeIndex",function(b,c){b>=1?d.search("view",a.pageNames[b]).replace():(b<0||b>=a.pageNames.length)&&d.search("view",null).replace()})},/** --- Tab / Header Management --- */
a.changeTab=function(b){console.log("switching to "+b);var c=a.pageNames.indexOf(b);c>=0&&(a.curr.activeIndex=c)},
// Loads a calendar according to the specified year and calendar number
a.getCalendarViewById=function(b,c){console.log("loading calendar",b,c),a.curr.state="fetching",a.calendarResponse=h.get({year:b,calNo:c},function(){a.calendarResponse.success===!0&&(console.log("received successful calendar response"),a.calendarView=a.calendarResponse.result,j()),a.curr.state="fetching"},function(b){a.setHeaderText(b.data.message),a.calendarResponse=b.data,a.curr.state="fetching"})},
// Scrolls to the bill specified by identifier
a.scrollToBill=function(b){b=b.toUpperCase();var c,d=/^\d+$/,e=/^([SA]\d+)[A-Z]?$/i;if(d.test(b))c=k("billCalNo",parseInt(b));else{var f=e.exec(b);if(!f)return;c=k("basePrintNo",f[1])}var g;if(g=m(c),g||(g=l(c),a.tabParam="active-list"),g){a.tabParam="floor";for(var h in g)a.curr.topListIndex[h]=g[h],a.curr.openSections[h]=!0;a.highlightValue=b}},
// Returns to the search page, restoring any saved request parameters
a.backToSearch=function(){var a=d.search(),b=ctxPath+"/calendars",c=!0;for(var e in a)"view"!=e&&(b+=(c?"?":"&")+("sview"==e?"view":e)+"="+a[e],c=!1);d.url(b)},
// Calendar Bill Number Search
a.getCalBillNumUrl=function(a,b){return ctxPath+"/calendars?view=search&sfield=billCalNo&syear="+a+"&svalue="+b},a.init()}]),calendarModule.controller("CalendarActiveListCtrl",["$scope","$rootScope",function(a,b){
// Creates a list of active list supplementals from a full calendar object in the parent scope
function c(){if(a.calendarView){a.activeLists=[];for(var b=0;a.calendarView.activeLists.items.hasOwnProperty(b);b++)a.activeLists.push(a.calendarView.activeLists.items[b]);d()}}
// Initializes the filter object based on the current active lists
function d(){a.activeListFilter={},angular.forEach(a.activeLists,function(b){a.activeListFilter[b.sequenceNumber]=!0})}
// Sets the contents of the displayedEntries based on the currently active filter
function e(){a.displayedEntries=[],angular.forEach(a.activeLists,function(b){a.activeListFilter[b.sequenceNumber]&&(a.displayedEntries=a.displayedEntries.concat(b.entries.items))})}a.activeLists=[],a.activeListFilter={},a.displayedEntries=[],b.$on("newCalendarEvent",c),a.$watch("activeListFilter",e,!0),c()}]),calendarModule.controller("FloorCalendarCtrl",["$scope","$rootScope",function(a,b){
// Creates a dictionary of floor calendar supplementals from a full calendar object in the parent scope
function c(){a.calendarView&&(a.floorCals={},a.calendarView.floorCalendar.year&&(a.floorCals={floor:a.calendarView.floorCalendar}),a.calendarView.supplementalCalendars.size>0&&angular.forEach(a.calendarView.supplementalCalendars.items,function(b,c){a.floorCals[c]=b}),d())}
// Constructs a filter object for the currently loaded floor and supplemental calendars
function d(){a.floorCalFilter={},a.floorCalVersions=[],angular.forEach(a.floorCals,function(b,c){a.floorCalFilter[c]=!0,a.floorCalVersions.push(c)})}
// Adds sections and entries to the displayed list for floor calendars that pass the filter
function e(){a.displayedSections={},angular.forEach(a.floorCals,function(b,c){a.floorCalFilter[c]&&angular.forEach(b.entriesBySection.items,function(b,c){a.displayedSections.hasOwnProperty(c)||(a.displayedSections[c]=[]),a.displayedSections[c]=a.displayedSections[c].concat(b.items)})})}a.floorCals={},a.floorCalFilter={},a.floorCalVersions=[],a.displayedSections={},a.versionSortValue=function(a){return"floor"==a?0:a.charCodeAt(0)},a.sectionSortValue=sectionArray.indexOf,b.$on("newCalendarEvent",c),a.$watch("floorCalFilter",e,!0),c()}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarBrowseCtrl",["$scope","$rootScope","$routeParams","$location","$timeout","$q","$mdToast","$mdMedia","CalendarIdsApi",function(a,b,c,d,e,f,g,h,i){
// Fetches the calendar info for a given year from the server
function j(b){var c=f.defer(),d=i.get({year:b,limit:"all"},function(){d.success?(a.calendarIds[b]=d.result.items,c.resolve(a.calendarIds)):c.reject("unsuccessful calendar id request")});return c.promise}
// Gets the object model for a single session event
function k(a){var b=window.innerWidth>820,c=b?"Floor Cal #"+a.calendarNumber+" - "+a.floorCalendar.totalEntries+" Bills\n"+a.supplementalCalendars.size+" Supplementals\n"+a.activeLists.size+" Active Lists":"Calendar "+a.calendarNumber;return{title:c,start:a.calDate,calNo:a.calendarNumber,className:"session-day"}}
// Fetches all the events during a given date range
function l(b,c,d){for(var e=[],g=[],h=b.getFullYear();h<=c.getFullYear();h++)a.activeYears.indexOf(h)>=0&&a.loadedYears.indexOf(h)<0&&(e.push(j(h)),g.push(h));e.length>0?(a.requestsInProgress+=1,f.all(e).then(function(){for(var b in g)if(g.hasOwnProperty(b)&&a.loadedYears.indexOf(g[b])<0){console.log("Fetching year "+g[b]);var c=[];a.calendarIds[g[b]].map(k).forEach(function(b){
// Keep track of which months we have events for
c[new Date(b.start).getMonth()]=!0,a.events.push(b)});
// Add an event on the first day of months that don't have any sessions
for(var e=0;e<12;e++)if(!c.hasOwnProperty(e)){var f=moment([g[b],e,1]);a.events.push({title:"No sessions exist for the month of "+f.format("MMMM")+".",start:f.day("Monday").add(7,"days").format("YYYY-MM-DD"),
//end: momentDate.add(14, "days").format("YYYY-MM-DD"),
className:"no-session-month"})}a.loadedYears.push(g[b])}a.requestsInProgress-=1,d(a.events)})):d(a.events)}
// Stores all the events and some default options
function m(){return{events:l,allDay:!0,className:"calendar-event",editable:!1}}
// Handle a click event when a session is clicked on the calendar
function n(b,c,e){b.calNo&&d.url(a.getCalendarUrl(b.start.getFullYear(),b.calNo))}
// Set the search param to match the currently viewed month
function o(b,c){var d=moment(b.start);a.setSearchParam("bdate",d.format("YYYY-MM-DD"),!d.isSame(moment(),"month"))}
// Hide events from different months
function p(a,b,c){a.start.getMonth()!==c.start.getMonth()&&(b[0].hidden=!0)}
// Configures the full calendar directive.
// See http://fullcalendar.io/docs/ for complete config options.
function q(){return{editable:!1,theme:!1,header:{left:window.innerWidth>550?"prevYear prev,next nextYear":"prev,next",center:"title",right:"today"},viewRender:o,eventRender:p,fixedWeekCount:!1,aspectRatio:1.5,eventClick:n,weekends:!1,buttonText:{today:"View Current month"}}}a.curr={prevStart:null,// Keep track of the last month the user viewed
monthHasEvents:!1,// Indicates if the current month has any events,
startDate:null},a.eventSources=[],a.calendarConfig=null,a.calendarIds={},a.requestsInProgress=0,a.events=[],a.loadedYears=[],// years for which ids have been loaded into the event list
// Initialize the calendar
a.init=function(){a.eventSources.push(m()),a.calendarConfig=q(),"bdate"in c?a.setCalendarDate(c.bdate):a.renderCalendar()},
// Render the calendar using the default settings
a.renderCalendar=function(){e(function(){angular.element("#calendar-date-picker").fullCalendar("render")})},b.$on("renderCalendarEvent",a.renderCalendar),
// Render the calendar using a specific date
a.setCalendarDate=function(b){var c=moment(b);c.isValid()&&e(function(){angular.element("#calendar-date-picker").fullCalendar("gotoDate",c.toDate()),a.renderCalendar()})},a.init()}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarSearchCtrl",["$scope","$routeParams","$location","CalendarSearchApi","PaginationModel",function(a,b,c,d,e){function f(a,b){return a?a+" AND "+b:b}
// Constructs a search query string from the current search fields
function g(){var b=!1;return a.searchFields.year&&(b=f(b,"year:"+a.searchFields.year)),a.searchFields.fieldName&&a.searchFields.fieldValue&&(b="calendarNumber"===a.searchFields.fieldName?f(b,"calendarNumber:"+a.searchFields.fieldValue):f(b,(a.searchFields.activeList?"activeLists":"")+"\\*."+a.searchFields.fieldName+":"+a.searchFields.fieldValue)),b}function h(){return a.searchFields.order in a.orderOptions?"calDate:"+a.searchFields.order:""}function i(){angular.forEach({syear:a.searchFields.year,sfield:a.searchFields.fieldName,svalue:a.searchFields.fieldValue,sactlist:a.searchFields.activeList,sorder:a.searchFields.order},function(b,c){a.setSearchParam(c,b,0===a.searchActiveIndex)})}function j(){
// Only display search parameter if query search tab is active
a.setSearchParam("search",a.searchQuery.term,1===a.searchActiveIndex),a.setSearchParam("sort",a.searchQuery.sort,1===a.searchActiveIndex)}a.searchResults=[],a.searchResponse={},a.searchActiveIndex=0,a.searchQuery={term:"",sort:""};var k={year:moment().year(),fieldName:"calendarNumber",fieldValue:"",activeList:!1,order:"DESC"};a.searchFields=angular.extend({},k),a.fieldOptions={calendarNumber:"Calendar No.",printNo:"Print No.",billCalNo:"Bill Calendar No."},a.orderOptions={DESC:"Newest First",ASC:"Oldest First"},a.pagination=angular.extend({},e),a.searching=!1,a.init=function(){if("stype"in b&&"string"===b.stype&&(a.searchActiveIndex=1),"search"in b&&1===a.searchActiveIndex&&(a.searchQuery.term=b.search),"sort"in b&&1===a.searchActiveIndex&&(a.searchQuery.sort=b.sort),"syear"in b){var c=parseInt(b.syear);a.activeYears.indexOf(c)>=0&&(a.searchFields.year=c)}"sfield"in b&&b.sfield in a.fieldOptions&&(a.searchFields.fieldName=b.sfield),"svalue"in b&&(a.searchFields.fieldValue=b.svalue),"sactlist"in b&&(a.searchFields.activeList="true"===b.sactlist),"sorder"in b&&b.sorder in a.orderOptions&&(a.searchFields.order=b.sorder),a.$watchCollection("searchFields",a.fieldSearch),a.$watch("pagination.currPage",function(b,c){b!==c&&b>0&&(a.setSearchParam("searchPage",b,b>1),a.termSearch(!1))}),a.$watch("searchActiveIndex",function(b,c){0===b&&a.fieldSearch(),a.setSearchParam("stype","string",1===b),i(),j()}),a.$watchCollection("searchQuery",function(b,c){a.termSearch(!0),j()})},
// Perform a simple search based on the current search term
a.termSearch=function(b){
// If pagination is to be reset and it is not on page 1 just change pagination to trigger the watch
if(b&&1!=a.pagination.currPage)a.pagination.currPage=1;else{var c=a.searchQuery.term,e=a.searchQuery.sort;c?(console.log("searching.","term:",c,"sort:",e),a.searching=!0,a.searchResponse=d.get({term:c,sort:e,limit:a.pagination.getLimit(),offset:a.pagination.getOffset()},function(){a.searchResults=a.searchResponse.result.items||[],a.searching=!1,a.pagination.setTotalItems(a.searchResponse.total)},function(){a.searching=!1})):(console.log("not searching."),a.searchResults=[],a.pagination.setTotalItems(0))}},a.fieldSearch=function(){if(0===a.searchActiveIndex){var b=g(),c=h();a.searchQuery.term!==b&&(a.searchQuery.term=b?b:""),a.searchQuery.sort!==h()&&(a.searchQuery.sort=c)}i()},a.getTotalActiveListBills=function(a){var b=0;return angular.forEach(a.activeLists.items,function(a){b+=a.totalEntries}),b},a.getTotalFloorBills=function(a){var b=0;return a.floorCalendar.year&&(b+=a.floorCalendar.totalEntries),angular.forEach(a.supplementalCalendars.items,function(a){b+=a.totalEntries}),b},a.init()}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarUpdatesCtrl",["$scope","$rootScope","CalendarUpdatesApi",function(a,b,c){a.updateResponse={result:{items:[]}},a.updatesOrder="ASC",a.getUpdates=function(){if(a.year&&a.calendarNum){a.loadingUpdates=!0,a.updateResponse={result:{items:[]}};var b=c.get({year:a.year,calNo:a.calendarNum,detail:!0,order:a.updatesOrder},function(){a.loadingUpdates=!1,b.success&&(a.updateResponse=b)},function(){a.loadingUpdates=!1})}},b.$on("newCalendarEvent",function(){a.getUpdates()}),a.$watch("updatesOrder",function(){a.getUpdates()})}]),/** --- Calendar Search Page --- */
calendarModule.controller("CalendarSearchPageCtrl",["$scope","$rootScope","$routeParams","$location","$timeout",function(a,b,c,d,e){function f(){"view"in c&&a.changeTab(c.view),a.$watch("activeIndex",function(b,c){a.setSearchParam("view",a.pageNames[b])})}a.pageNames=["browse","search","updates"],a.activeYears=[];for(var g=moment().year();g>=2009;g--)a.activeYears.push(g);a.changeTab=function(b){console.log("changing view to",b),a.activeIndex=a.pageNames.indexOf(b)},a.pageIsActive=function(b){return a.activeIndex==a.pageNames.indexOf(b)},a.setCalendarHeaderText=function(){e(function(){// Set text on next digest to account for delay in active index change
var b=a.pageNames[a.activeIndex],c="Search For Calendars";"browse"==b?c="Browse Calendars":"updates"==b&&(c="View Calendar Updates"),a.setHeaderText(c)})},a.getCalendarUrl=function(a,b,c){var e=ctxPath+"/calendars/"+a+"/"+b,f=!0;for(var g in d.search())e+=(f?"?":"&")+("view"==g?"sview":g)+"="+d.search()[g],f=!1;return c&&(e+="#"+c),e},a.renderCalendarEvent=function(){b.$emit("renderCalendarEvent")},f()}]),calendarModule.controller("CalendarFullUpdatesCtrl",["$scope","$routeParams","$location","$mdToast","CalendarFullUpdatesApi","PaginationModel",function(a,b,c,d,e,f){function g(){if("uorder"in b&&["ASC","DESC"].indexOf(b.uorder)>=0&&(a.updateOptions.order=b.uorder),b.hasOwnProperty("udetail")&&"false"===b.udetail||(a.updateOptions.detail=!0),"utype"in b&&"published"==b.utype&&(a.updateOptions.type="published"),"ufrom"in b){var c=moment(b.ufrom);c.isValid()&&(a.updateOptions.fromDateTime=c.toDate())}if("uto"in b){var d=moment(b.uto);d.isValid()&&(a.updateOptions.toDateTime=d.toDate())}}a.updateResponse={},a.updateOptions={order:"DESC",type:"processed",detail:!0};var h=moment().startOf("minute"),i=moment(h).subtract(7,"days");a.updateOptions.toDateTime=h.toDate(),a.updateOptions.fromDateTime=i.toDate(),a.pagination=angular.extend({},f),a.getUpdates=function(b){b&&(a.pagination.currPage=1);var c=moment.parseZone(a.updateOptions.fromDateTime),d=moment.parseZone(a.updateOptions.toDateTime);c.isAfter(d)?(a.invalidRangeToast(),a.updateResponse={},a.pagination.setTotalItems(0)):c.isValid()&&d.isValid()&&(console.log("Getting updates from",a.toZonelessISOString(c),"to",a.toZonelessISOString(d)),a.loadingUpdates=!0,a.updateResponse=e.get({detail:a.updateOptions.detail,type:a.updateOptions.type,fromDateTime:a.toZonelessISOString(c),toDateTime:a.toZonelessISOString(d),limit:a.pagination.getLimit(),offset:a.pagination.getOffset(),order:a.updateOptions.order},function(){a.loadingUpdates=!1,a.updateResponse.success?a.pagination.setTotalItems(a.updateResponse.total):a.pagination.setTotalItems(0)},function(){a.loadingUpdates=!1}))},a.invalidRangeToast=function(){d.show({template:"<md-toast>from date cannot exceed to date!</md-toast>",parent:angular.element(".error-toast-parent")})},g(),a.$watchCollection("updateOptions",function(){a.getUpdates(!0);var b=a.updateOptions;a.setSearchParam("uorder",b.order,"ASC"===b.order);
//$scope.setSearchParam('udetail', opts.detail, opts.detail === false);
var c=moment(b.toDateTime).local(),d=moment(b.fromDateTime).local();a.setSearchParam("uto",a.toZonelessISOString(c),c.isValid()&&!c.isSame(h)),a.setSearchParam("ufrom",a.toZonelessISOString(d),d.isValid()&&!d.isSame(i))}),a.$watch("pagination.currPage",function(b,c){b!==c&&b>0&&a.getUpdates(!1)})}]);var agendaModule=angular.module("open.agenda",["open.core","open.api"]);agendaModule.controller("AgendaCtrl",["$scope","$rootScope","$routeParams","$location","$route",function(a,b,c,d,e){a.setHeaderVisible(!0),a.selectedView=(parseInt(c.view,10)||0)%3,a.viewMap={browse:0,search:1,updates:2},/** Watch for changes to the current view. */
a.$watch("selectedView",function(b,c){b!==c&&d.search().view!==b&&(d.search("view",a.selectedView).replace(),a.$broadcast("viewChange",a.selectedView))}),a.$on("$locationChangeSuccess",function(){a.selectedView=+d.search().view||0})}]);var agendaModule=angular.module("open.agenda");agendaModule.controller("AgendaBrowseCtrl",["$scope","$rootScope","$location","$routeParams","$timeout","AgendaMeetingApi",function(a,b,c,d,e,f){
// Hide events from different months
function g(a,b,c){a.start.getMonth()!==c.start.getMonth()&&(b[0].style.opacity="0.3")}a.calendarConfig={},a.meetingEventSources=[],a.meetings={},a.agendaSet={},a.yearsFetched={},a.loading=!1,a.curr={selectedDateTime:null,month:null,year:null},a.tabInit=function(){a.setHeaderText("Agenda Calendar")},a.$on("viewChange",function(){a.tabInit()}),a.init=function(){a.tabInit(),a.calendarConfig=a.getCalendarConfig(),
// Set the selected date time to either the route param or the current date.
// This datetime will set the month the calendar renders first, which will trigger the api call
// to get the meetings.
a.curr.selectedDateTime=d.bdate&&moment(d.bdate).isValid()?moment(d.bdate).toDate():new Date,a.curr.month=a.curr.selectedDateTime.getMonth(),a.curr.year=a.curr.selectedDateTime.getFullYear()},a.renderCalendar=function(a){e(function(){a&&angular.element("#agenda-date-picker").fullCalendar("gotoDate",a),angular.element("#agenda-date-picker").fullCalendar("render")})},
// Set the search param to match the currently viewed month
a.viewRenderHandler=function(b,c){var d=moment(b.start).month(),e=moment(b.start).year();a.yearsFetched.hasOwnProperty(e)||a.fetchMeetingEvents(e),a.curr.month=d,a.curr.year=e},a.updateSelectedDate=function(){a.curr.selectedDateTime=new Date(a.curr.year,a.curr.month)},a.$watch("curr.selectedDateTime",function(b){a.renderCalendar(b)}),a.agendaEventClickHandler=function(b){b.agendaId.year&&c.url(a.getAgendaUrlFromEvent(b))},a.agendaEventMouseOverHandler=function(a,b,c){a.notes&&a.notes.trim()&&$(b.target).append("<div class='cal-tooltip agenda-meeting'>"+a.notes+"</div>")},a.agendaEventMouseOutHandler=function(a,b,c){$(".cal-tooltip.agenda-meeting").remove()},a.getAgendaUrlFromEvent=function(a){var b=window.ctxPath+"/agendas/"+a.agendaId.year+"/"+a.agendaId.number+"?sview=browse"+(a.committeeId?"&comm="+a.committeeId.name:"");return b},a.fetchMeetingEvents=function(b){a.yearsFetched[b]=!0,a.loading=!0;var c=f.get({from:new Date(b,0,1).toISOString(),to:new Date(b+1,0,1).toISOString()},function(){var d=c.result.items,e=[],f={};angular.forEach(d,function(b){var c=moment(b.weekOf);f[c.month()]=!0,a.agendaSet[b.agendaId.year]||(a.agendaSet[b.agendaId.year]={}),a.agendaSet[b.agendaId.year][b.agendaId.number]||(e.push({title:"Agenda "+b.agendaId.number+" - "+b.agendaId.year+" (Week of "+c.format("ll")+")",start:b.weekOf,end:c.endOf("week").toISOString(),allDay:!0,agendaId:b.agendaId,color:"#43AC6A",textColor:"white"}),a.agendaSet[b.agendaId.year][b.agendaId.number]=!0),e.push({title:"\n"+b.committeeId.name+(b.addendum?"\nAddendum: "+b.addendum:""),start:b.meeting.meetingDateTime,allDay:!1,notes:b.meeting.notes,agendaId:b.agendaId,committeeId:b.committeeId})});
// Add an event on the first day of months that don't have any sessions
for(var g=0;g<12;g++)if(!f.hasOwnProperty(g)){var h=moment([b,g,1]);e.push({title:"No committee meetings exist for the month of "+h.format("MMMM")+".",start:h.day("Monday").add(7,"days").format("YYYY-MM-DD"),className:"no-agenda-month"})}a.meetingEventSources.push({events:e,editable:!1}),a.loading=!1},function(){a.loading=!1})},a.getCalendarConfig=function(){return{editable:!1,theme:!1,header:{left:window.innerWidth>550?"prevYear prev,next nextYear":"prev,next",center:"title",right:"today"},fixedWeekCount:!1,viewRender:a.viewRenderHandler,
//defaultView: 'basicWeek',
aspectRatio:1.5,hiddenDays:[0,6],timeFormat:"h:mm TT",eventRender:g,eventClick:a.agendaEventClickHandler,eventMouseover:a.agendaEventMouseOverHandler,eventMouseout:a.agendaEventMouseOutHandler,buttonText:{today:"View Current month"}}},a.init()}]);var agendaModule=angular.module("open.agenda");agendaModule.controller("AgendaSearchCtrl",["$scope","$location","$route","$routeParams","PaginationModel","AgendaListingApi","AgendaSearchApi","CommitteeListingApi","YearGenerator",function(a,b,c,d,e,f,g,h,i){a.tabInit=function(){a.setHeaderText("Search Agendas")},a.pagination=angular.extend({},e),a.pagination.itemsPerPage=6,a.searchParams={year:parseInt(d.year,10)||moment().year(),agendaNo:d.agendaNo||"",commName:d.commName||"",printNo:d.printNo||"",weekOf:d.weekOf||"",notes:d.notes||""},
// Mapping of search param names to search query field names.
a.searchParamFields={year:"agenda.id.year",agendaNo:"agenda.id.number",commName:"committee.committeeId.name",printNo:"committee.addenda.items.bills.items.billId.basePrintNo",weekOf:"agenda.weekOf",notes:"committee.addenda.items.meeting.notes"},a.searchSort="agenda.id.number:desc",a.getWeekOfListing=function(){var b=f.get({year:a.searchParams.year,limit:100},function(){a.weekOfListing=b.result.items.map(function(a){return a.weekOf})})},a.selectedYearChanged=function(){a.searchParams.weekOf="",a.getWeekOfListing()},a.resetSearchParams=function(){for(p in a.searchParams)a.searchParams.hasOwnProperty(p)&&"year"!==p&&(a.searchParams[p]="")},a.years=i.getSingleYearsInt(2009),
// Create list of numbers between 1 and 20.
a.agendaNoList=Array.apply(0,Array(25)).map(function(a,b){return b+1});var j=h.get({sessionYear:a.searchParams.year},function(){a.committeeListing=j.result.items});a.agendaSearch={searched:!1,searching:!1,term:d.search||"",response:{},results:[],error:!1},a.$on("viewChange",function(){a.tabInit()});var k=function(){var b=[];for(var c in a.searchParams)a.searchParams.hasOwnProperty(c)&&(a.searchParams[c]?(b.push("("+a.searchParamFields[c]+':"'+a.searchParams[c]+'")'),a.setSearchParam(c,a.searchParams[c])):a.setSearchParam(c,a.searchParams[c],!1));return b.join(" AND ")};a.init=function(){a.tabInit(),a.getWeekOfListing()},a.simpleSearch=function(b){var c=k();c&&(a.agendaSearch.searching=!0,a.agendaSearch.searched=!1,b&&a.pagination.reset(),a.agendaSearch.response=g.get({term:c,limit:a.pagination.getLimit(),offset:a.pagination.getOffset(),sort:a.searchSort},function(){a.agendaSearch.response&&a.agendaSearch.response.success&&(a.agendaSearch.error=!1,a.agendaSearch.results=a.agendaSearch.response.result.items||[],a.agendaSearch.searched=!0,a.agendaSearch.searching=!1,a.pagination.setTotalItems(a.agendaSearch.response.total))},function(b){a.agendaSearch.searched=!0,a.agendaSearch.searching=!1,a.agendaSearch.error=b.data,a.agendaSearch.results=[],a.pagination.setTotalItems(0),a.pagination.reset()}))},a.$watch("pagination.currPage",function(b,c){b!==c&&a.simpleSearch(!1)}),a.$watchCollection("searchParams",function(b,c){a.simpleSearch()}),a.init()}]);var agendaModule=angular.module("open.agenda");agendaModule.controller("AgendaUpdatesCtrl",["$scope","$rootScope","$location","$routeParams","PaginationModel","AgendaAggUpdatesApi",function(a,b,c,d,e,f){a.pagination=angular.extend({},e),a.pagination.itemsPerPage=20,a.curr={fromDate:moment().subtract(30,"days").startOf("minute").toDate(),toDate:moment().startOf("minute").toDate(),type:d.type||"published",sortOrder:d.sortOrder||"DESC",detail:d.detail||!0},a.agendaUpdates={response:{},fetching:!1,result:{},errMsg:""},a.tabInit=function(){a.setHeaderText("Agenda Updates")},a.$on("viewChange",function(){a.tabInit()}),a.init=function(){a.tabInit()},a.getUpdates=function(){a.agendaUpdates.fetching=!0,a.agendaUpdates.response=f.get({from:a.curr.fromDate.toISOString(),to:a.curr.toDate.toISOString(),type:a.curr.type,order:a.curr.sortOrder,detail:a.curr.detail,filter:a.curr.filter,limit:a.pagination.getLimit(),offset:a.pagination.getOffset()},function(){a.agendaUpdates.result=a.agendaUpdates.response.result,a.pagination.setTotalItems(a.agendaUpdates.response.total),a.agendaUpdates.fetching=!1},function(b){a.agendaUpdates.response.success=!1,a.pagination.setTotalItems(0),a.agendaUpdates.errMsg=b.data.message,a.agendaUpdates.fetching=!1})},a.$on("viewChange",function(b){a.getUpdates()}),a.$watchCollection("curr",function(b,c){2===a.selectedView&&(a.getUpdates(),a.pagination.reset())}),a.$watch("pagination.currPage",function(b,c){b!==c&&a.getUpdates()}),a.init()}]);var agendaModule=angular.module("open.agenda");/**
 * AgendaViewCtrl
 * --------------
 *
 * Handles the fetch/display for single week committee agendas.
 * Includes change log for the given agenda.
 */
agendaModule.controller("AgendaViewCtrl",["$scope","$location","$routeParams","PaginationModel","AgendaGetApi","AgendaUpdatesApi","$timeout",function(a,b,c,d,e,f,g){a.searchTabName=a.viewMap.hasOwnProperty(c.sview)?c.sview:"browse",a.searchTabIdx=a.viewMap[a.searchTabName],
// Stores the agenda object from the response
a.agenda=null,
// Identify the agenda
a.year=c.year,a.no=c.agendaNo,a.commName=c.comm,
// Indicates if a committee toggle panel should be open when the page loads.
a.selectedComm={},
// Lookup map for bill-id to votes
a.votes={},
// Updates pagination
a.updatesPagination=angular.extend({},d),a.updates=[],
// Current state
a.curr={updateOrder:"desc",fetchedInitialUpdates:!1,loading:!1},/**
         * Initialize the agenda view by fetching the agenda and scrolling down to a committee if necessary.
         */
a.init=function(){a.commName&&(a.selectedComm[a.commName.toLowerCase()]=!0),a.curr.loading=!0,a.response=e.get({year:a.year,agendaNo:a.no},function(){a.agenda=a.response.result,a.setHeaderText("Agenda "+a.agenda.id.number+" - "+a.agenda.id.year),
// A lookup map needs to created to render a single bill listing for both info and vote addenda.
a.generateVoteLookup(),
// Scroll down to a committee if specified in the params
a.commName&&g(function(){$("html, body").animate({scrollTop:$("md-card[data-committee='"+a.commName.toLowerCase()+"']").offset().top})},0),a.curr.loading=!1},function(b){a.setHeaderText(b.status),a.response.success=!1,a.curr.loading=!1})},a.getUpdates=function(b){b&&a.fetchedInitialUpdates||(a.updatesResponse=f.get({agendaNo:a.no,year:a.year,offset:a.updatesPagination.getOffset(),limit:a.updatesPagination.getLimit(),order:a.curr.updateOrder},function(){a.curr.fetchedInitialUpdates=!0,a.updatesPagination.setTotalItems(a.updatesResponse.total)},function(){a.updatesPagination.setTotalItems(0)}))},a.$watch("updatesPagination.currPage",function(b,c){b!==c&&a.getUpdates()}),/**
         * A vote-lookup map is generated to make it easier to display vote information in the template.
         * This is because bills are listed in both 'info' and 'vote' addendum, but we want to render them
         * in a single list to make things less complicated.
         */
a.generateVoteLookup=function(){angular.forEach(a.agenda.committeeAgendas.items,function(b){angular.forEach(b.addenda.items,function(c){c.hasVotes===!0&&angular.forEach(c.voteInfo.votesList.items,function(c){a.votes[c.bill.basePrintNo]||(a.votes[c.bill.basePrintNo]={}),a.votes[c.bill.basePrintNo][b.committeeId.name]=c})})})},/**
         * Go back to where ye came.
         */
a.backToSearch=function(){var c=moment(a.agenda.weekOf).format("YYYY-MM-DD");b.url(window.ctxPath+"/agendas/?view="+a.searchTabIdx+"&bdate="+c)},/** Initialize */
a.init()}]);var agendaModule=angular.module("open.agenda");agendaModule.filter("agendaActionFilter",["$filter",function(a){return function(a){switch(a){case"FIRST_READING":return"Sent to First Reading";case"THIRD_READING":return"Sent to Third Reading";case"REFERRED_TO_COMMITTEE":return"Referred to Committee";case"DEFEATED":return"Defeated";case"RESTORED_TO_THIRD":return"Restored to Third Reading";case"SPECIAL":return"Special Action"}return"Unknown"}}]);var agendaModule=angular.module("open.agenda");agendaModule.directive("agendaBillListing",["BillUtils",function(a){return{restrict:"E",scope:{agendaBills:"=",votes:"=",committee:"=",showTitle:"=",showImg:"="},templateUrl:ctxPath+"/partial/content/agenda/agenda-bill-listing-view",controller:function(b,c){b.billUtils=a,console.log(b.agendaBills)}}}]);var lawModule=angular.module("open.law",["open.core","open.api","infinite-scroll"]);/**
 * LawCtrl
 */
lawModule.controller("LawCtrl",["$scope","$location","$routeParams",function(a,b,c){a.selectedView=parseInt(c.view,10)||0,a.setHeaderText("NYS Laws"),/** Watch for changes to the current view. */
a.$watch("selectedView",function(c,d){c!==d&&b.search().view!==c&&(b.search("view",a.selectedView),a.$broadcast("viewChange",a.selectedView))}),a.$on("$locationChangeSuccess",function(){a.selectedView=+b.search().view||0})}]);var lawModule=angular.module("open.law");/**
 * Law Search Ctrl
 */
lawModule.controller("LawSearchCtrl",["$scope","$location","$routeParams","LawListingApi","LawFullSearchApi","PaginationModel","safeHighlights",function(a,b,c,d,e,f,g){function h(){a.setHeaderVisible(!0)}a.lawListingResponse=null,a.lawListing=null,a.pagination=angular.extend({},f),a.listingLimit=20,a.lawSearch={term:c.search||"",searching:!1,searched:!1,response:null,error:null,results:[]},a.$on("viewChange",function(){h()}),a.init=function(){h(),a.pagination.currPage=Math.max(parseInt(c.searchPage)||1,1),a.simpleSearch(),a.getListings()},a.getListings=function(){a.lawListingResponse&&a.lawListingResponse.success||(a.lawListingResponse=d.get({},function(){a.lawListing=a.lawListingResponse.result.items}))},a.keepScrolling=function(){a.listingLimit+=10},a.simpleSearch=function(b){var c=a.lawSearch.term;a.setSearchParam("search",c),c?(b&&a.pagination.reset(),a.lawSearch.searched=!1,a.lawSearch.searching=!0,a.lawSearch.response=e.get({term:c,limit:a.pagination.getLimit(),offset:a.pagination.getOffset()},function(){a.lawSearch.response.result&&(a.lawSearch.results=a.lawSearch.response.result.items,g(a.lawSearch.results)),a.pagination.setTotalItems(a.lawSearch.response.total),a.lawSearch.searched=!0,a.lawSearch.searching=!1,a.lawSearch.error=!1},function(b){a.pagination.setTotalItems(0),a.lawSearch.error=b.data,a.lawSearch.searched=!0,a.lawSearch.searching=!1})):(a.pagination.setTotalItems(0),a.lawSearch.searched=!0)},/** Watch for changes to the current search page. */
a.$watch("pagination.currPage",function(b,c){b!==c&&(a.setSearchParam("searchPage",b),a.simpleSearch())}),a.init()}]);var lawModule=angular.module("open.law");/**
 * Law Updates Ctrl
 */
lawModule.controller("LawUpdatesCtrl",["$scope","$location","$routeParams","PaginationModel","LawFullUpdatesApi",function(a,b,c,d,e){function f(){a.setHeaderVisible(!0)}a.curr={fromDate:moment().subtract(30,"days").startOf("minute").toDate(),toDate:moment().startOf("minute").toDate(),type:c.type||"published",sortOrder:c.sortOrder||"desc",detail:c.detail||!0},a.lawUpdates={response:{},fetching:!1,result:{},errMsg:""},a.$on("viewChange",function(){f()}),a.pagination=angular.extend({},d),a.init=function(){f(),a.getUpdates()},a.getUpdates=function(){a.lawUpdates.fetching=!0,a.lawUpdates.response=e.get({from:a.curr.fromDate.toISOString(),to:a.curr.toDate.toISOString(),type:a.curr.type,order:a.curr.sortOrder,detail:a.curr.detail,filter:a.curr.filter,limit:a.pagination.getLimit(),offset:a.pagination.getOffset()},function(){a.lawUpdates.result=a.lawUpdates.response.result,a.pagination.setTotalItems(a.lawUpdates.response.total),a.lawUpdates.fetching=!1},function(b){a.lawUpdates.response.success=!1,a.pagination.setTotalItems(0),a.lawUpdates.errMsg=b.data.message,a.lawUpdates.fetching=!1})},a.onParamChange=function(){a.pagination.reset(),a.getUpdates()},a.$watch("pagination.currPage",function(b,c){b!==c&&a.getUpdates()}),a.init()}]);var lawModule=angular.module("open.law");/**
 * LawViewCtrl
 */
lawModule.controller("LawViewCtrl",["$scope","$q","$routeParams","$location","$route","$timeout","$anchorScroll","PaginationModel","$sce","$mdToast","LawTreeApi","LawDocApi","LawVolumeSearchApi","LawVolumeUpdatesApi",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){a.setHeaderVisible(!0),a.curr={lawId:c.lawId,lawRoot:null,lawTree:null,lawDocs:{},expanded:{},showDoc:{},showNested:{},lawText:{},updateOrder:"desc",fetchedInitialUpdates:!1},
// Updates
a.updatesPagination=angular.extend({},h),a.updates=[],a.loading=!1,a.listingLimit=10,
// Initialize
a.init=function(){a.selectedView=1,a.loading=!0,a.lawTreeResponse=k.get({lawId:a.curr.lawId},function(){a.curr.lawRoot=a.lawTreeResponse.result,a.curr.lawTree=a.curr.lawRoot.documents.documents.items,a.curr.lawTree.length||(a.curr.showDoc[a.curr.lawRoot.documents.locationId]=!0),a.fetchLawDoc(a.curr.lawRoot.documents),a.setHeaderText(a.curr.lawRoot.info.name+" Law"),c.location||(a.loading=!1),f(function(){c.location&&a.navigateToLawDoc({locationId:c.location})})})},a.fetchLawDoc=function(c){var d=b.defer();if(a.curr.lawDocs[c.locationId])d.resolve(a.curr.lawDocs[c.locationId]);else var e=l.get({lawId:a.curr.lawId,docId:c.locationId},function(){var b=e.result.text.replace(/\\n\s{2}/g,"<br/><br/>&nbsp;&nbsp;").replace(c.title+".","<strong>$&</strong><br/>&nbsp;&nbsp;").replace(/\\n/g," ");a.curr.lawDocs[c.locationId]=e.result,a.curr.lawText[c.locationId]=i.trustAsHtml(b),d.resolve(e.result)});return d.promise},a.getUpdates=function(b){b&&a.fetchedInitialUpdates||(a.updatesResponse=n.get({lawId:a.curr.lawId,offset:a.updatesPagination.getOffset(),limit:a.updatesPagination.getLimit(),order:a.curr.updateOrder},function(){a.curr.fetchedInitialUpdates=!0,a.updatesPagination.setTotalItems(a.updatesResponse.total)},function(){a.updatesPagination.setTotalItems(0)}))},a.$watch("updatesPagination.currPage",function(b,c){b!==c&&a.getUpdates()}),a.navigateToLawDoc=function(b,c){a.loading=!0;var e=a.fetchLawDoc(b);e.then(function(e){var h=e.parentLocationIds.slice(0);h.shift(),h.push(b.locationId);for(var i=0;i<a.curr.lawTree.length;i++)if(a.curr.lawTree[i].locationId===h[0]){h.shift(),a.expandNodesBelow(a.curr.lawTree[i],h);break}a.listingLimit=1e3,f(function(){a.setSearchParam("location",b.locationId),d.hash(b.locationId),a.loading=!1,g(),c&&c()})})},a.toggleLawNode=function(b){var c=!a.curr.showNested[b.locationId];a.curr.showNested[b.locationId]=c,"SECTION"===b.docType&&c&&!a.curr.lawText[b.locationId]&&a.fetchLawDoc(b)},a.setLink=function(a){d.search("location",a).replace()},a.toggleNodeText=function(b){var c=!a.curr.showDoc[b.locationId];a.curr.showDoc[b.locationId]=c,c&&!a.curr.lawText[b.locationId]&&a.fetchLawDoc(b)},a.getFilterResults=function(c){var d=b.defer(),e="docLevelId:"+c+"* OR docLevelId:"+c,f=m.get({lawId:a.curr.lawId,term:e,limit:20,sort:"_score:desc,docLevelId:asc"},function(){d.resolve(f.result.items)},function(){d.resolve([])});return d.promise},a.expandNodesBelow=function(b,c){a.curr.expanded[b.locationId]=!0,a.curr.showNested[b.locationId]=!0,"SECTION"!==b.docType||c&&c[0]!==b.locationId||a.curr.lawText[b.locationId]||a.fetchLawDoc(b),angular.forEach(b.documents.items,function(b){c&&b.locationId!==c[0]||(c&&c.shift(),a.expandNodesBelow(b,c))})},a.collapseNodesBelow=function(b){return a.curr.expanded[b.locationId]=!1,a.curr.showNested[b.locationId]=!1,"SECTION"!==b.docType&&void angular.forEach(b.documents.items,function(b){a.collapseNodesBelow(b)})},a.setNode=function(b,c){a.curr.nodes[c]=b,f(function(){g()},200)},a.keepScrolling=function(){a.listingLimit+=15},a.backToListings=function(){d.path(ctxPath+"/laws")},/* Initialize */
a.init()}]);var transcriptModule=angular.module("open.transcript",["open.core","open.api"]);transcriptModule.controller("TranscriptCtrl",["$scope","$routeParams",function(a,b){a.view=0,a.init=function(){a.setHeaderVisible(!0),a.setHeaderText("Transcripts")},a.init()}]);var transcriptModule=angular.module("open.transcript");transcriptModule.controller("TranscriptSearchCtrl",["$scope","$sce","$routeParams","$location","PaginationModel","TranscriptSearchApi","PublicHearingSearchApi","YearGenerator",function(a,b,c,d,e,f,g,h){a.years=h.getSingleYearsStr(1993,moment().year()).reverse(),a.transcriptSearch={term:c.term||"",state:"initial",year:c.year||"",type:c.txtype||"session",response:{},matches:[],error:!1,paginate:angular.extend({},e)};var i=function(){return"session"==a.transcriptSearch.type};a.init=function(){a.transcriptSearch.paginate.itemsPerPage=25,a.transcriptSearch.paginate.currPage=c.page||1;var b=!a.transcriptSearch.paginate.currPage>1;a.search(b)},a.search=function(c){c&&a.transcriptSearch.paginate.reset(),a.setParams();var d=a.transcriptSearch.term||"*";a.transcriptSearch.state="searching";var e=i()?f:g;a.transcriptSearch.response=e.get({term:d,year:a.transcriptSearch.year,limit:a.transcriptSearch.paginate.getLimit(),offset:a.transcriptSearch.paginate.getOffset()},function(){a.transcriptSearch.response&&a.transcriptSearch.response.success?(a.transcriptSearch.error=!1,a.transcriptSearch.matches=a.transcriptSearch.response.result.items||[],a.transcriptSearch.paginate.setTotalItems(a.transcriptSearch.response.total),angular.forEach(a.transcriptSearch.matches,function(a){for(var c in a.highlights)for(var d in a.highlights[c])a.highlights[c][d]&&(a.highlights.hasFields=!0,a.highlights[c][d]=b.trustAsHtml(a.highlights[c][d]))}),a.transcriptSearch.state="searched"):(a.transcriptSearch.error=!0,a.transcriptSearch.matches=[],a.transcriptSearch.paginate.setTotalItems(a.transcriptSearch.response.total),a.transcriptSearch.state="searched")})},a.changePage=function(b){a.search(!1)},a.setParams=function(){a.setSearchParam("term",a.transcriptSearch.term),a.setSearchParam("txtype",a.transcriptSearch.type),a.setSearchParam("year",a.transcriptSearch.year),a.setSearchParam("page",a.transcriptSearch.paginate.currPage)},a.init()}]);var transcriptModule=angular.module("open.transcript");transcriptModule.controller("HearingTranscriptViewCtrl",["$scope","$routeParams","$location","$filter","PublicHearingDetailsApi",function(a,b,c,d,e){a.setHeaderVisible(!0),a.init=function(){a.hearingDetailViewResponse&&a.hearingDetailViewResponse.success||(a.hearingDetailViewResponse=e.get({filename:b.filename},function(){a.hearingDetails=a.hearingDetailViewResponse.result,a.setHeaderText("Public Hearing Transcript: "+d("date")(a.hearingDetails.date,"mediumDate"))}))},a.init(),a.back=function(){c.path(ctxPath+"/transcripts")}}]);var transcriptModule=angular.module("open.transcript");transcriptModule.controller("SessionTranscriptViewCtrl",["$scope","$routeParams","$location","$filter","SessionTranscriptDetailsApi",function(a,b,c,d,e){a.setHeaderVisible(!0),a.init=function(){a.transcriptDetailViewResponse&&a.transcriptDetailViewResponse.success||(a.transcriptDetailViewResponse=e.get({filename:b.filename},function(){a.sessionTranscriptDetails=a.transcriptDetailViewResponse.result,a.setHeaderText("Session Transcript: "+d("date")(a.sessionTranscriptDetails.dateTime,"mediumDate"))}))},a.init(),a.back=function(){c.path(ctxPath+"/transcripts")}}]);var spotcheckModule=angular.module("open.spotcheck",["open.core","smart-table","diff-match-patch"]);/** --- REST resources for retrieving daybreak summaries and reports --- */
// Gets summaries for reports that were generated within the specified range
spotcheckModule.factory("SpotcheckSummaryAPI",["$resource",function(a){return a(adminApiPath+"/spotcheck/summaries/:startDate/:endDate",{startDate:"@startDate",endDate:"@endDate"})}]),
// Gets a full detailed report corresponding to the given date time
spotcheckModule.factory("SpotcheckDetailAPI",["$resource",function(a){return a(adminApiPath+"/spotcheck/:reportType/:reportDateTime",{reportType:"@reportType",reportDateTime:"@reportDateTime"})}]),spotcheckModule.factory("SpotcheckOpenMismatchAPI",["$resource",function(a){return a(adminApiPath+"/spotcheck/open-mismatches")}]),spotcheckModule.factory("SpotcheckOpenMismatchSummaryAPI",["$resource",function(a){return a(adminApiPath+"/spotcheck/open-mismatches/summary")}]),spotcheckModule.factory("SpotcheckMismatchIgnoreAPI",["$resource",function(a){return a(adminApiPath+"/spotcheck/mismatch/:mismatchId/ignore",{mismatchId:"@mismatchId",ignoreLevel:"@ignoreLevel"})}]),spotcheckModule.factory("SpotcheckMismatchTrackingAPI",["$resource",function(a){return a(adminApiPath+"/spotcheck/mismatch/:mismatchId/issue/:issueId",{mismatchId:"@mismatchId",issueId:"@issueId"})}]);var reportTypeMap={},reportTypeDispMap={},mismatchTypeMap={};
// Returns a formatted label for the given mismatch status
spotcheckModule.filter("mismatchStatusLabel",["$filter",function(a){var b={all:"All",RESOLVED:"Closed",NEW:"New",EXISTING:"Existing",REGRESSION:"Reopened",IGNORE:"Ignored"};return function(c){return a("label")(c,b)}}]),
// Returns a formatted label for the given mismatch type
spotcheckModule.filter("mismatchTypeLabel",["$filter",function(a){return function(b){return"all"===b?"All":a("label")(b,mismatchTypeMap)}}]),spotcheckModule.filter("reportTypeRefName",["$filter",function(a){return function(b){return a("label")(b,reportTypeMap)}}]),spotcheckModule.filter("reportTypeLabel",["$filter",function(a){return function(b){return a("label")(b,reportTypeDispMap)}}]),
// Returns a report type enum value for the given shorthand or enum report type value
spotcheckModule.filter("reportType",function(){return function(a){for(var b in reportTypeMap)if(reportTypeMap.hasOwnProperty(b)&&(a===b||a===reportTypeMap[b]))return b;return null}}),spotcheckModule.filter("contentType",function(){var a={LBDC_AGENDA_ALERT:"Agenda",LBDC_DAYBREAK:"Bill",LBDC_CALENDAR_ALERT:"Floor Cal",LBDC_SCRAPED_BILL:"Bill",SENATE_SITE_BILLS:"Bill",SENATE_SITE_CALENDAR:"Calendar"};return function(b){return a.hasOwnProperty(b)?a[b]:"Content"}}),spotcheckModule.filter("reportDataProvider",function(){var a="Openleg";return function(b){return a}}),spotcheckModule.filter("reportReferenceProvider",function(){var a={LBDC_DAYBREAK:"LBDC",LBDC_SCRAPED_BILL:"LBDC",SENATE_SITE_BILLS:"Nysenate.gov",SENATE_SITE_CALENDAR:"NYsenate.gov",LBDC_AGENDA_ALERT:"LBDC",LBDC_CALENDAR_ALERT:"LBDC"};return function(b){return a.hasOwnProperty(b)?a[b]:"unknown provider of ["+b+"]"}}),spotcheckModule.filter("refTypeLabel",function(){var a={LBDC_DAYBREAK:"Daybreak report",LBDC_SCRAPED_BILL:"scraped bill",SENATE_SITE_BILLS:"node dump",LBDC_AGENDA_ALERT:"alert",LBDC_CALENDAR_ALERT:"alert",SENATE_SITE_CALENDAR:"node dump"};return function(b){return a.hasOwnProperty(b)?a[b]:"'"+b+"'?!"}}),spotcheckModule.filter("contentUrl",function(){function a(a){return ctxPath+"/bills/"+a.session.year+"/"+a.basePrintNo}function b(b){return a(b)+"?version="+b.version}function c(a){return a.agendaId.year>0?ctxPath+"/agendas/"+a.agendaId.year+"/"+a.agendaId.number+"?comm="+a.committeeId.name:a.agendaId.year==-1?"http://open.nysenate.gov/legislation/meeting/"+a.committeeId.name.replace(/[ ,]+/g,"-")+"-"+moment(a.agendaId.number).format("MM-DD-YYYY"):""}function d(a){return ctxPath+"/calendars/"+a.year+"/"+a.calNo}function e(a){return d(a)+("ALL"===a.type?"?view="+("ACTIVE_LIST"===a.type?"active-list":"floor"):"")}var f={LBDC_DAYBREAK:a,LBDC_SCRAPED_BILL:a,SENATE_SITE_BILLS:b,LBDC_AGENDA_ALERT:c,LBDC_CALENDAR_ALERT:d,SENATE_SITE_CALENDAR:e};return function(a,b){return f.hasOwnProperty(b)?f[b](a):""}}),spotcheckModule.filter("contentId",function(){function a(a){return a.basePrintNo}function b(a){return a.printNo}function c(a){var b=" "+a.committeeId.name+("DEFAULT"!==a.addendum?"-"+a.addendum:"");if(a.agendaId.year>0)return a.agendaId.year+"-"+a.agendaId.number+b;var c=moment(a.agendaId.number).format("l");return c+b}function d(a){return a.calNo+", "+a.year}function e(a){return d(a)+("ALL"===a.type?"ACTIVE_LIST"===a.type?a.sequenceNo:a.version:"")}var f={LBDC_DAYBREAK:a,LBDC_SCRAPED_BILL:a,SENATE_SITE_BILLS:b,LBDC_AGENDA_ALERT:c,LBDC_CALENDAR_ALERT:d,SENATE_SITE_CALENDAR:e};return function(a,b){return f.hasOwnProperty(b)?f[b](a):b+"?!"}}),spotcheckModule.factory("SpotcheckDefaultFilter",function(){function a(a,b,c,d){return"object"==typeof a?this.filterFunction(a.status,a.mismatch.mismatchType,a.mismatch.ignoreStatus,a.mismatch.issueIds.size>0):this.filterFunction(a,b,c,d)}function b(a){return a===!0||"all"===a}function c(a,c,d,e){var f=d===!0||d&&"NOT_IGNORED"!==d,g=e===!0||"TRACKED"===e;return(b(a)||this.statuses[a]===!0)&&(b(c)||this.types[c]===!0)&&(this.ignoredShown||!f)&&(!this.ignoredOnly||f)&&(this.trackedShown||!g)&&(this.untrackedShown||g)}return{passes:a,filterFunction:c,orderBy:"OBSERVED_DATE",sortOrder:"DESC",limit:10,offset:1,statuses:{},types:{},ignoredShown:!1,ignoredOnly:!1,trackedShown:!0,untrackedShown:!0}}),spotcheckModule.factory("IgnoreStatuses",function(){return{NOT_IGNORED:"Not Ignored",IGNORE_PERMANENTLY:"Ignore Permanently",IGNORE_UNTIL_RESOLVED:"Ignore Until Resolved",IGNORE_ONCE:"Ignore Once"}}),spotcheckModule.filter("ignoreLabel",["IgnoreStatuses",function(a){return function(b){return a[b]}}]),spotcheckModule.filter("mismatchCount",function(){return function(a,b,c){if(!a||!a.mismatchCounts)return console.log("attempt to extract count from invalid summary",a),"!?";if(b&&b.hasOwnProperty("passes")){"object"!=typeof c&&(c=[c]);for(var d in c)if("status"===d);else if("type"===d);else if("ignored"===d);else if("tracked"===d);}else{var e=!0;angular.forEach(b,function(a,c){"all"===a&&delete b[c]})}var f=0;return angular.forEach(a.mismatchCounts,function(a,c){angular.forEach(a,function(a,d){angular.forEach(a,function(a,g){angular.forEach(a,function(a,h){if(e){if("type"in b&&b.type!==c||"status"in b&&b.status!==d||"ignored"in b&&b.ignored!==("NOT_IGNORED"!==g)||"tracked"in b&&b.tracked!==("TRACKED"===h))return}else if(!b.passes(d,c,g,h))return;f+=a})})})}),f}}),spotcheckModule.filter("hasIgnoredMismatches",["$filter",function(a){return function(b,c){return c=angular.copy(c),c.ignored=!0,a("mismatchCount")(b,c)>0}}]),/** --- Parent Spotcheck Controller --- */
spotcheckModule.controller("SpotcheckCtrl",["$scope","$routeParams","$location","$timeout","$filter","$mdDialog",function(a,b,c,d,e,f){a.rtmap={},a.rtDispMap={},a.mtmap={},a.init=function(b,c,d){a.rtmap=reportTypeMap=b,a.rtDispMap=reportTypeDispMap=c,a.mtmap=mismatchTypeMap=d,a.setHeaderVisible(!0),a.setHeaderText("View Spotcheck Reports")},a.getReportURL=function(a,b){return ctxPath+"/admin/report/spotcheck/"+e("reportTypeRefName")(a)+"/"+e("moment")(b,"YYYY-MM-DD[T]HH:mm:ss.SSS")},/**
     * Generates a human readable string representing the given content key
     * @param reportType - The type of report the key is present in
     * @param key - A content key that references a piece of legislative content
     */
a.getContentId=function(a,b){return e("contentId")(b,a)},/**
     * Generates an appropriate URL to view the data referenced by the given content key
     * @param reportType - the type of report that the key is present in
     * @param key - A content key that references a piece of legislative content
     */
a.getContentUrl=function(a,b){return e("contentUrl")(b,a)},
// Searches through the prior mismatches of a mismatch to find the date that it was first opened
a.findFirstOpenedDates=function(a,b){if("NEW"==a.status)return{reportDateTime:b.reportDateTime,referenceDateTime:b.refDateTime};for(var c in a.prior.items)if("NEW"==a.prior.items[c].status)return{reportDateTime:a.prior.items[c].reportId.reportDateTime,referenceDateTime:a.prior.items[c].reportId.referenceDateTime};return{reportDateTime:"Unknown",referenceDateTime:"Unknown"}},
// Generates a mismatch id
a.getMismatchId=function(a,b){return JSON.stringify(a.key)+"-"+b.mismatchType},a.extractMismatchRows=function(b,c){var d=[];return angular.forEach(b,function(b){angular.forEach(b.mismatches.items,function(e){var f=[];e.ignoreStatus&&"NOT_IGNORED"!==e.ignoreStatus&&f.push(e.ignoreStatus),angular.forEach(e.issueIds.items,function(a){f.push(a)}),d.push({key:b.key,keyString:a.getContentId(c,b.key),observation:b,mismatch:e,type:e.mismatchType,status:e.status,observed:b.observedDateTime,reportDateTime:b.reportDateTime,firstOpened:a.findFirstOpenedDates(e,b).reportDateTime,refData:e.referenceData,obsData:e.observedData,mismatchId:a.getMismatchId(b,e),refType:c,chips:f})})}),d},a.showSummaryDetails=function(b){a.notImplementedDialog()}}]),spotcheckModule.directive("mismatchDiff",["$timeout",function(a){return{restrict:"E",scope:{left:"=",right:"="},template:"<span ng-class='{preformatted: pre, \"word-wrap\": !pre}' style='line-height: {{lineHeight}}px'><line-numbers ng-if='pre && showLines' line-end='lines'></line-numbers><semantic-diff left-obj='left' right-obj='right'></semantic-diff></span></span>",link:function(b,c,d){b.pre=!d.hasOwnProperty("noPre"),b.wrap=!d.hasOwnProperty("noWrap"),b.showLines="false"!==d.showLines,b.lines=1,b.lineHeight=20,b.adjustLineCount=function(){b.pre||d.hasOwnProperty("noPre")||(b.pre=b.left.split(/\n/).length>1||b.right.split(/\n/).length>1),b.pre&&b.showLines&&a(function(){var a=c.children()[0],d=a.offsetHeight;b.lines=Math.ceil(d/b.lineHeight),b.pre=b.lines>1},100)},b.$watchGroup(["left","right"],b.adjustLineCount)}}}]),spotcheckModule.directive("diffSummary",function(){return{restrict:"E",scope:{fullDiff:"="},template:"<div ng-repeat='diff in selectedDiffs'><span class='diff-summary-header'>Lines {{diff.startLineNum}} to {{diff.endLineNum}}:<br></span><div class='preformatted'><line-numbers line-start='diff.startLineNum' line-end='diff.endLineNum'></line-numbers><span ng-bind='diff.startText'></span><span ng-repeat='seg in diff.segments'><span ng-if='seg.operation === \"EQUAL\"' ng-bind='seg.text'></span><ins ng-if='seg.operation === \"INSERT\"' ng-bind='seg.text'></ins><del ng-if='seg.operation === \"DELETE\"' ng-bind='seg.text'></del></span><span ng-bind='diff.endText'></span></div><br ng-if='!$last'><br ng-if='!$last'><md-divider ng-if='!$last'></md-divider></div>",link:function(a,b,c){a.selectedDiffs=[],a.$watch("selectedDiffs",function(){console.log(a.selectedDiffs)},!0);var d=1,e="",f=null;
// Isolate differences from full text
for(var g in a.fullDiff){var h=a.fullDiff[g],i=h.text.split(/\n/);["DELETE","INSERT"].indexOf(h.operation)>=0?(null==f&&(f={startText:e,startLineNum:d,segments:[]}),f.segments.push(h)):(null!=f&&(i.length>2?(f.endText=i[0],f.endLineNum=d,a.selectedDiffs.push(f),f=null):f.segments.push(h)),e=i.length>1?i[i.length-1]:e+i[0]),d+=i.length-1}null!=f&&(f.endText="",f.endLineNum=d,a.selectedDiffs.push(f)),a.singleLine=function(a){return a.startLineNum==a.endLineNum}}}}),angular.module("open.spotcheck").controller("detailDialogCtrl",["$scope","$mdDialog","mismatchRow",function(a,b,c){function d(b){var c=["BILL_TEXT_LINE_OFFSET","BILL_TEXT_CONTENT"],d=["BILL_TEXT_CONTENT"];c.indexOf(b)>-1&&(a.textControls.whitespace="stripNonAlpha"),d.indexOf(b)>-1&&(a.textControls.removeLinePageNums=!0)}function e(a){return a.replace(l,"").replace(/\n+/,"\n")}function f(){a.newDetails(c)}a.iDiffTab=0,a.reportType=c.refType,a.newDetails=function(b){a.mismatchRow=b,console.log("loading detail dialog for",b),a.observation=b.observation,a.currentMismatch=b.mismatch,a.allMismatches=b.observation.mismatches.items,d(b.type),a.formatDisplayData()},a.$watchGroup(["referenceData","displayData"],function(){a.obsMultiLine=a.observedData&&a.observedData.indexOf("\n")>-1,a.refMultiLine=a.referenceData&&a.referenceData.indexOf("\n")>-1,a.multiLine=a.obsMultiLine||a.refMultiLine}),a.cancel=function(){b.hide()},a.whitespaceOptions={initial:"No Formatting",normalize:"Normalize Whitespace",stripNonAlpha:"Strip Non-Alphanumeric"},a.textControls={whitespace:"initial",capitalize:!1,removeLinePageNums:!1};var g=/^( {4}\d| {3}\d\d)/,h=/^ {7}[A|S]\. \d+(--[A-Z])?[ ]+\d+([ ]+[A|S]\. \d+(--[A-Z])?)?$/,i=/^[ ]{42,43}\d+[ ]+\d+-\d+-\d+$/,j=/^[ ]+EXPLANATION--Matter in ITALICS \(underscored\) is new; matter in brackets\n/,k=/^[ ]+\[ ] is old law to be omitted.\n[ ]+LBD\d+-\d+-\d+$/,l=new RegExp("(?:"+[g.source,h.source,i.source,j.source,k.source].join(")|(?:")+")","gm");a.formatDisplayData=function(){var b=[a.currentMismatch.referenceData,a.currentMismatch.observedData];switch(a.textControls.removeLinePageNums&&(b=b.map(e)),a.textControls.whitespace){case"stripNonAlpha":b=b.map(function(a){return a.replace(/(?:[^\w]|_)+/g,"")});break;case"normalize":b=b.map(function(a){return a.replace(/[ ]+/g," ")}),b=b.map(function(a){return a.replace(/^[ ]+|[ ]+$/gm,"")})}a.textControls.capitalize&&(b=b.map(function(a){return a.toUpperCase()})),a.referenceData=b[0],a.observedData=b[1]},f()}]),/** --- Report Summary Controller --- */
angular.module("open.spotcheck").controller("SpotcheckSummaryCtrl",["$scope","$filter","$routeParams","$location","SpotcheckSummaryAPI",function(a,b,c,d,e){a.reportSummaries=[],a.filteredReportSummaries=[],a.dataProvider=[],a.response=null,a.loadingSummaries=!1,a.summariesNotFound=!1,a.showErrorlessReports=!1,a.resultsPerPage=20,a.params={summaryType:"LBDC_DAYBREAK",inputStartDate:null,inputEndDate:null},a.pagination={currPage:1,itemsPerPage:10},a.init=function(){"type"in c&&(a.params.summaryType=b("reportType")(c.type)||"all"),c.hasOwnProperty("endDate")&&moment(c.endDate).isValid()?a.endDate=moment(c.endDate):a.endDate=moment(),c.hasOwnProperty("startDate")&&moment(c.startDate).isValid()?a.startDate=moment(c.startDate):a.startDate=moment(a.endDate).subtract(3,"months"),a.params.inputStartDate=moment(a.startDate).toDate(),a.params.inputEndDate=moment(a.endDate).toDate()},a.getSummaries=function(){console.log("getting new summaries");var c="all"!==a.params.summaryType?b("reportTypeRefName")(a.params.summaryType):[];a.loadingSummaries=!0,a.response=e.get({startDate:a.startDate.format(),endDate:a.endDate.endOf("day").format(),reportType:c},function(){a.response.success&&(a.reportSummaries=a.response.reports.items,console.log("summaries received"),a.setSummarySearchParams(),a.loadingSummaries=!1,a.summariesNotFound=!1,a.filterSummaries())},function(b){console.log(b),a.loadingSummaries=!1,a.summariesNotFound=!0})},
// Watch the params for changes and make a request for report summaries if there were changes
a.$watchCollection("params",function(){a.endDate=moment(a.params.inputEndDate),a.startDate=moment(a.params.inputStartDate),a.getSummaries()}),a.setSummarySearchParams=function(){a.clearSearchParams(),a.setSearchParam("type",b("reportTypeRefName")(a.params.summaryType),"all"!==a.params.summaryType)},
// Compute the total number of mismatches for a given type.
a.computeMismatchCount=function(a,c){var d=b("default"),e=a.mismatchTypes[c];return e?d(e.NEW,0)+d(e.EXISTING,0)+d(e.REGRESSION,0):0},
// Compute the difference between open issues and resolved issues. Set 'abs' to true to
// return the absolute value of the result.
a.computeMismatchDiff=function(a,c,d){var e=b("default"),f=a.mismatchTypes[c];if(!f)return 0;var g=e(f.NEW,0)+e(f.REGRESSION,0)-e(f.RESOLVED,0);return d?Math.abs(g):g},
// Return a css class based on whether the mismatch count is positive or negative
a.mismatchDiffClass=function(b,c){var d=a.computeMismatchDiff(b,c,!1);return d>0?"postfix-icon icon-arrow-up4 new-error":d<0?"postfix-icon icon-arrow-down5 closed-error":"postfix-icon icon-minus3 existing-error"},a.noErrorFilter=function(b){return a.showErrorlessReports||b.openMismatches>0},a.filterSummaries=function(){a.filteredReportSummaries=a.reportSummaries.filter(a.noErrorFilter)},a.$watch("showErrorlessReports",a.filterSummaries),a.init()}]),/** --- Report Detail Controller --- */
angular.module("open.spotcheck").controller("SpotcheckReportCtrl",["$scope","$element","$filter","$location","$timeout","$routeParams","$rootScope","SpotcheckDetailAPI","SpotcheckDefaultFilter",function(a,b,c,d,e,f,g,h,i){function j(){var b=c("filter")(a.state.mismatches,function(b){return a.state.filter.passes(b)}),d=c("orderBy")(b,k(),"DESC"===a.state.filter.sortOrder);a.state.filteredMismatches=c("limitTo")(d,a.state.filter.limit,a.state.filter.offset-1),console.log("limited",a.state.filter.limit,a.state.filter.offset,a.state.filteredMismatches)}function k(){return l.hasOwnProperty(a.state.filter.orderBy)?l[a.state.filter.orderBy]:"!?"}a.state={loadingReport:!1,mismatches:[],filteredMismatches:[],filter:angular.copy(i),summary:null,report:null,dataDetails:null},
// Initialization function
a.init=function(){f.hasOwnProperty("runTime")&&f.hasOwnProperty("type")&&(a.state.reportType=f.type,a.state.reportDateTime=f.runTime,a.getReportDetails())},
// Fetch the report via the report detail API
a.getReportDetails=function(){h.get({reportType:a.state.reportType,reportDateTime:a.state.reportDateTime},function(b){a.state.report=b.details,a.state.referenceDateTime=a.state.report.referenceDateTime,a.state.reportType=a.state.report.referenceType,a.extractTableData(),a.state.summary={mismatchStatuses:a.state.report.mismatchStatuses,mismatchCounts:a.state.report.mismatchCounts},e(j),a.state.loadingReport=!1,console.log("report detail received:",a.state.report.referenceType,a.state.report.referenceDateTime)}),a.state.loadingReport=!0,console.log("new report detail requested: ",a.state.reportType,a.state.reportDateTime)},
// Extracts an array of table rows from the report data
a.extractTableData=function(){a.state.mismatches=a.extractMismatchRows(a.state.report.observations,a.state.reportType),angular.forEach(a.tableData,function(b){a.state.dataDetails[b.mismatchId]=b})},a.getMismatchDetails=function(b){return a.state.dataDetails[b]},a.openDetailWindow=function(b){a.showMismatchDetails(b,a.getMismatchDetails)},g.$on("mismatchFilterChange",j);var l={OBSERVED_DATE:"observation.observedDateTime",CONTENT_KEY:"keyString",REFERENCE_DATE:"observation.refDateTime",MISMATCH_TYPE:"mismatch.mismatchType",STATUS:"mismatch.status"}}]),/** --- Open Mismatches Controller --- */
angular.module("open.spotcheck").controller("SpotcheckMismatchCtrl",["$scope","$filter","$routeParams","$rootScope","SpotcheckOpenMismatchAPI","SpotcheckOpenMismatchSummaryAPI","SpotcheckDefaultFilter",function(a,b,c,d,e,f,g){function h(){var b=angular.merge({},a.filter);return b.reportType=a.reportType,b.mismatchType=[],angular.forEach(b.types,function(a,c){a&&b.mismatchType.push(c)}),delete b.statuses,delete b.types,delete b.passes,delete b.filterFunction,b}a.unselectedReportType="unselected",a.mismatchRows=[],a.summary=null,a.filter=angular.copy(g),a.requestCount=0,a.lastReceived=0,a.init=function(){a.reportType=c.reportType||a.unselectedReportType,a.getOpenMismatches()},d.$on("mismatchFilterChange",function(){console.log("mismatch filter change detected",a.filter),a.getOpenMismatches()}),a.getOpenMismatches=function(){if(a.parameterError=a.requestError=!1,"unselected"!==a.reportType){var b=h(),c=++a.requestCount;console.log("getting open mismatches",b),e.get(b,function(b){
// Do not extract data if the received request was made before the latest received
if(c>a.lastReceived){var d=b.summary.summaryMap;a.reportType in d&&(a.summary=d[a.reportType]),a.mismatchRows=a.extractMismatchRows(b.observations,b.query.refTypes[0]),a.lastReceived=c,console.log("got it")}},function(b){c>a.lastReceived&&(console.log("uh oh:",b),a.tableData=[],a.lastReceived=c,400===b.status&&1===b.data.errorCode?(a.parameterError=!0,a.parameterErrorVal=b.data.errorData.parameterConstraint.name,a.invalidParamDialog(b)):a.requestError=!0)})}}}]),angular.module("open.spotcheck").directive("mismatchView",["$rootScope","$mdDialog","SpotcheckDefaultFilter","SpotcheckMismatchIgnoreAPI","SpotcheckMismatchTrackingAPI","IgnoreStatuses",mismatchViewDirective]).filter("orderByLabel",orderByLabelFilter).filter("statusSelectLabel",["$filter",statusSelectLabelFilter]).filter("typeSelectLabel",["$filter",typeSelectLabelFilter]);var orderByLabels={OBSERVED_DATE:"Observed Date",CONTENT_KEY:"Content Key",REFERENCE_DATE:"Reference Date",MISMATCH_TYPE:"Mismatch Type",STATUS:"Mismatch Status"};angular.module("open.spotcheck").controller("SpotcheckOpenSummaryCtrl",["$scope","$filter","SpotcheckOpenMismatchSummaryAPI",openSummaryCtrl]);var adminModule=angular.module("open.admin",["open.core"]);angular.module("open.admin").controller("DashboardCtrl",["$scope","$routeParams",function(a,b){a.activeIndex=parseInt(b.view,10)||0,a.init=function(){a.setHeaderVisible(!0),a.setHeaderText("Manage configuration")},a.$watch("activeIndex",function(c,d){c!==d&&b.view!==c&&a.setSearchParam("view",a.activeIndex)}),a.viewMap={environment:0,cache:1,index:2},a.init()}]);var adminModule=angular.module("open.admin");adminModule.factory("LogSearchAPI",["$resource",function(a){return a(adminApiPath+"/apiLogs/")}]),adminModule.factory("DataProcessRunsAPI",["$resource",function(a){return a(adminApiPath+"/process/runs/:from/:to")}]),adminModule.factory("DataProcessRunsDetailsAPI",["$resource",function(a){return a(adminApiPath+"/process/runs/id/:id")}]),adminModule.controller("LogsCtrl",["$scope","$routeParams","$timeout","PaginationModel","LogSearchAPI","DataProcessRunsAPI","DataProcessRunsDetailsAPI",function(a,b,c,d,e,f,g){a.view=parseInt(b.view,10)||0,/** Watch for changes to the current view. */
a.$watch("view",function(c,d){c!==d&&b.view!==c&&a.setSearchParam("view",a.view)}),
// Api log monitor
a.stompClient=null,a.now=moment(),a.newApiRequestsCount=0,a.newApiRequests=[],a.connectToSocket=function(){var b=new SockJS(window.ctxPath+"/sock");a.stompClient=Stomp.over(b),a.stompClient.connect({},function(b){console.log("Connected: "+b),a.now=moment(),a.stompClient.subscribe("/event/apiLogs",function(b){a.$apply(function(){a.newApiRequests.unshift(JSON.parse(b.body)),a.newApiRequests.length>2e3&&(a.newApiRequests=[]),a.newApiRequestsCount++})})})},a.resetRunningLog=function(){a.now=moment(),a.newApiRequests=[],a.newApiRequestsCount=0},a.disconnect=function(){null!=a.stompClient&&a.stompClient.disconnect()},
// Api log search
a.apiLogTerm=b.apiLogTerm||"",a.apiLogSort=b.apiLogSort||"requestTime:desc",a.apiLogFromDate=b.apiLogStart?moment(b.apiLogStart).toDate():moment().subtract("days",1).toDate(),a.apiLogToDate=b.apiLogEnd?moment(b.apiLogEnd).toDate():moment().add("days",1).toDate(),a.apiLogSearchPagination=angular.extend({},d),a.apiLogSearchPagination.currPage=b.page||1,a.apiLogSearchPagination.itemsPerPage=20,a.searchLogs=function(){var b=a.toZonelessISOString(moment(a.apiLogFromDate)),c=a.toZonelessISOString(moment(a.apiLogToDate));a.setSearchParam("apiLogStart",b),a.setSearchParam("apiLogEnd",c),a.setSearchParam("apiLogTerm",a.apiLogTerm),a.setSearchParam("apiLogSort",a.apiLogSort);var d="("+(a.apiLogTerm||"*")+") AND requestTime:["+b+" TO "+c+"]";e.get({term:d,sort:a.apiLogSort,limit:a.apiLogSearchPagination.getLimit(),offset:a.apiLogSearchPagination.getOffset()},function(b){b&&b.success&&(a.logSearchResp=b,a.logSearchResults=b.result.items)})},a.apiLogSearchPageChange=function(b){a.setSearchParam("page",b),a.searchLogs()},
// Data Process Runs
a.runsResults=[],a.pollPromise=null,a.hideEmptyRuns="false"!==b.hideEmptyRuns,a.runsFromDate=b.runsStart?moment(b.runsStart).toDate():moment().subtract("days",1).toDate(),a.runsToDate=b.runsEnd?moment(b.runsEnd).toDate():moment().add("days",1).toDate(),a.runsPagination=angular.extend({},d),a.runsPagination.currPage=b.runLogPage||1,a.runsPagination.itemsPerPage=20,a.getRuns=function(){var b=a.toZonelessISOString(moment(a.runsFromDate)),c=a.toZonelessISOString(moment(a.runsToDate));a.setSearchParam("hideEmptyRuns",a.hideEmptyRuns),a.setSearchParam("runsStart",b),a.setSearchParam("runsEnd",c),f.get({from:b,to:c,full:!a.hideEmptyRuns,detail:!0,limit:a.runsPagination.getLimit(),offset:a.runsPagination.getOffset()},function(b){a.runsResp=b,b.success&&(a.runsResults=b.result.items)})},a.getRunsPolling=function(){a.getRuns(),console.log("In runs polling"),a.pollPromise=c(function(){a.getRunsPolling()},15e3)},a.dataProcessLogPageChange=function(b){a.pollPromise&&c.cancel(a.pollPromise),a.getRunsPolling(),a.setSearchParam("runLogPage",b)},/** --- Initialize --- */
a.init=function(){a.setHeaderText("View Logs"),a.setHeaderVisible(!0),a.connectToSocket(),a.searchLogs(),a.getRuns()},a.init()}]);var adminModule=angular.module("open.admin");adminModule.factory("CacheAPI",["$resource",function(a){return a(adminApiPath+"/cache/:cacheType",{cacheType:"@cacheType"},{update:{method:"PUT"}})}]),adminModule.controller("CacheCtrl",["$scope","$timeout","CacheAPI",function(a,b,c){a.caches=[],a.loading={},a.fetchCaches=function(){a.cacheResp=c.get({},function(){a.cacheResp.success===!0&&(a.caches=a.cacheResp.result.items)})},a.evictCache=function(b){c["delete"]({cacheType:b},function(b){console.log(b),a.fetchCaches()})},a.warmCache=function(d){a.loading[d]=!0,c.update({cacheType:d},function(b){a.loading[d]=!1,a.fetchCaches()});var e=function(){a.loading[d]===!0&&(a.fetchCaches(),b(e,5e3))};e()},a.init=function(){a.fetchCaches()}}]);var adminModule=angular.module("open.admin");/** --- REST resources for getting and setting admin account data --- */
// Allows for retrieval, creation, and deletion of admin accounts
adminModule.factory("AccountsAPI",["$resource",function(a){return a(adminApiPath+"/accounts/:username",{username:"@username",master:"@master"})}]),
// Changes the password of the currently authenticated user
adminModule.factory("PassChangeAPI",["$resource",function(a){return a(adminApiPath+"/accounts/passchange",{password:"@password"})}]),/** --- Account Settings Ctrl --- */
adminModule.controller("AccountSettingsCtrl",["$scope","$routeParams","$location",function(a,b,c){var d=["passchange","notification_subscriptions","manage_users"];a.init=function(){if(b.hasOwnProperty("view")){var c=b.view;if(Number(c))a.selectedIndex=Number(c);else{var e=d.indexOf(c);e>=0&&(a.selectedIndex=e)}}},a.$watch("selectedIndex",function(){a.selectedIndex>=0&&a.selectedIndex<d.length&&c.search("view",d[a.selectedIndex]).replace()}),a.init()}]),/** --- Password change controller --- */
adminModule.controller("PassChangeCtrl",["$scope","$element","$mdToast","PassChangeAPI",function(a,b,c,d){a.minPassLength=5,a.newPass="",a.newPassRepeat="",a.response=null,a.submitNewPass=function(){a.newPass.length>=a.minPassLength?a.response=d.save({password:a.newPass},function(){a.showToast("Password Changed"),a.newPass="",a.newPassRepeat=""},function(b){1===b.data.errorCode?a.showToast(b.data.errorData.parameterConstraint):a.showToast(b.data.message)}):a.newPass===a.newPassRepeat?a.showToast("Password too short!"):a.showToast("Passwords must match!")},a.showToast=function(a){return c.show(c.simple().position("right").content(a))}}]),/** -- Manage Admin Users controller -- */
adminModule.controller("ManageAdminUsersCtrl",["$scope","$mdToast","$mdDialog","AccountsAPI",function(a,b,c,d){a.accounts=[];var e={username:"",master:!1};a.newAccount=e,a.newAccountShown=!1,a.init=function(){a.getAccounts()},a.getAccounts=function(){a.loadingAccounts=!0,d.get({username:""},function(b){a.accounts=b.result.items,a.loadingAccounts=!1})},a.createAccount=function(){a.creatingAccount=!0,d.save(a.newAccount,function(){a.creatingAccount=!1,a.getAccounts(),a.newAccount=e,a.newAccountShown=!1},function(b){a.creatingAccount=!1,1!==b.data.errorCode&&b.data.errorCode?a.errorToast(b.data.message):a.errorToast("Invalid username: must be @nysenate.gov email address")})},a.removeAccount=function(b){a.removingAccount=!0,d["delete"]({username:b},function(b){a.removingAccount=!1,a.getAccounts()},function(c){a.removingAccount=!1,console.log("err0r removing",b),a.errorToast(c.data.message)})},a.errorToast=function(a){b.show({template:"<md-toast>"+a+"</md-toast>",parent:angular.element("#admin-management"),position:"fit left"})},a.deletePrompt=function(b){c.show(c.confirm().title("Confirm Admin Removal").content("Delete admin account "+b+"?").ok("Yes!").cancel("Never Mind")).then(function(){a.removeAccount(b)})}}]);var adminModule=angular.module("open.admin");adminModule.factory("GetNotifSubsApi",["$resource",function(a){return a(adminApiPath+"/notifications/subscriptions")}]),adminModule.factory("SubscribeToNotifApi",["$resource",function(a){return a(adminApiPath+"/notifications/subscribe",{type:"@type",target:"@target",address:"@address"})}]),adminModule.factory("UnsubscribeToNotifApi",["$resource",function(a){return a(adminApiPath+"/notifications/unsubscribe",{type:"@type",target:"@target",address:"@address"})}]),/** --- Notification Subscription Controller --- */
adminModule.controller("NotificationSubCtrl",["$scope","$timeout","$q","GetNotifSubsApi","SubscribeToNotifApi","UnsubscribeToNotifApi",function(a,b,c,d,e,f){function g(a,b){for(var c=[],d="",e=0;e<b;e++)d+="  ";for(var f in a)a.hasOwnProperty(f)&&(c.push(d+f),c=c.concat(g(a[f],b+1)));return c}function h(b){angular.forEach(a.subscriptions,function(a){a.selected=b})}function i(a){if(a)var b=a.toUpperCase();else var b="";return function(c){return c.slice(0,a.length)==b}}
// a list of active notification subscriptions
a.subscriptions=[];
// a blank subscription
var j={type:"",target:"",address:""};
// model for the entry form to enter a new subscription
a.newSubscription=Object.create(j),a.newSubscriptionShown=!1,a.selectAll=!1,a.selectedSubs=0,a.init=function(b,c){a.notificationTypes=g(b,0),console.log(a.notificationTypes),a.notificationTargets=c,a.getSubscriptions()},
// Retrieves current subscriptions for the authenticated user
a.getSubscriptions=function(){var b=null;b=d.get({},function(){b.success&&(a.subscriptions=b.result.items,a.selectAll=!1,a.selectedSubs=0)})},
// Submits the new subscription in the form and refreshes the active subscription list
a.registerNewSubscription=function(){var b=null;b=e.get(a.newSubscription,function(){b.success&&(a.newSubscription=Object.create(j),a.getSubscriptions(),a.hideNewSubscription())})},a.unsubscribeSelected=function(){c.all(k().map(function(a){return f.get(a).$promise})).then(a.getSubscriptions)};var k=function(){return a.subscriptions.filter(function(a){return a.selected})};
// Counts up the number of selected subscriptions
a.tallySelectedSubs=function(){b(function(){a.selectedSubs=k().length,a.selectedSubs<a.subscriptions.length&&(a.selectAll=!1)},0)},a.applySelectAll=function(){b(function(){h(a.selectAll),a.tallySelectedSubs()},0)},a.searchForNotificationType=function(b){return a.notificationTypes.filter(i(b))},a.searchForNotificationTarget=function(b){return b?a.notificationTargets.filter(i(b)):[]}}]);var adminModule=angular.module("open.admin");/** --- REST resources for getting and setting environment variables --- */
adminModule.factory("EnvironmentAPI",["$resource",function(a){return a(adminApiPath+"/environment")}]),adminModule.factory("SetEnvironmentAPI",["$resource",function(a){return a(adminApiPath+"/environment/set")}]),adminModule.controller("EnvironmentCtrl",["$scope","EnvironmentAPI","SetEnvironmentAPI",function(a,b,c){a.vars=[],a.requestedVars=[],a.init=function(){a.getVariables()},a.getVariables=function(){a.loading=!0,b.get({varName:a.requestedVars},function(b){a.error=a.loading=!1,a.vars=b.result.items},function(){a.loading=!1,a.error=!0})},a.setVariable=function(b){var d=a.getVar(b);null!=d&&(console.log("setting",b,"to",d.newValue),d.setting=!0,c.get({varName:d.name,value:d.newValue},function(){d.setting=d.error=!1,d.value=d.newValue},function(){d.newValue=d.value,d.setting=!1,d.error=!0}))},a.getVar=function(b){for(var c in a.vars)if(a.vars[c].name===b)return a.vars[c];return null}}]);