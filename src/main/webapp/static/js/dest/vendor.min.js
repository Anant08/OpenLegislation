/*! openleg - v - 2015-02-06 *//*!
 * Modernizr v2.8.3
 * www.modernizr.com
 *
 * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton
 * Available under the BSD and MIT licenses: www.modernizr.com/license/
 */
function mdMediaFactory($mdConstant, $mdUtil, $rootScope, $window) {
    function $mdMedia(query) {
        var validated = queriesCache.get(query);
        angular.isUndefined(validated) && (validated = queriesCache.put(query, validate(query)));
        var result = resultsCache.get(validated);
        return angular.isUndefined(result) && (result = add(validated)), result;
    }
    function validate(query) {
        return $mdConstant.MEDIA[query] || ("(" !== query.charAt(0) ? "(" + query + ")" : query);
    }
    function add(query) {
        return resultsCache.put(query, !!$window.matchMedia(query).matches);
    }
    function updateAll() {
        var keys = resultsCache.keys(), len = keys.length;
        if (len) {
            for (var i = 0; len > i; i++) add(keys[i]);
            $rootScope.$evalAsync();
        }
    }
    var queriesCache = $mdUtil.cacheFactory("$mdMedia:queries", {
        capacity: 15
    }), resultsCache = $mdUtil.cacheFactory("$mdMedia:results", {
        capacity: 15
    });
    return angular.element($window).on("resize", updateAll), $mdMedia;
}

if (window.Modernizr = function(window, document, undefined) {
    function setCss(str) {
        mStyle.cssText = str;
    }
    function setCssAll(str1, str2) {
        return setCss(prefixes.join(str1 + ";") + (str2 || ""));
    }
    function is(obj, type) {
        return typeof obj === type;
    }
    function contains(str, substr) {
        return !!~("" + str).indexOf(substr);
    }
    function testProps(props, prefixed) {
        for (var i in props) {
            var prop = props[i];
            if (!contains(prop, "-") && mStyle[prop] !== undefined) return "pfx" == prefixed ? prop : !0;
        }
        return !1;
    }
    function testDOMProps(props, obj, elem) {
        for (var i in props) {
            var item = obj[props[i]];
            if (item !== undefined) return elem === !1 ? props[i] : is(item, "function") ? item.bind(elem || obj) : item;
        }
        return !1;
    }
    function testPropsAll(prop, prefixed, elem) {
        var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1), props = (prop + " " + cssomPrefixes.join(ucProp + " ") + ucProp).split(" ");
        return is(prefixed, "string") || is(prefixed, "undefined") ? testProps(props, prefixed) : (props = (prop + " " + domPrefixes.join(ucProp + " ") + ucProp).split(" "), 
        testDOMProps(props, prefixed, elem));
    }
    function webforms() {
        Modernizr.input = function(props) {
            for (var i = 0, len = props.length; len > i; i++) attrs[props[i]] = !!(props[i] in inputElem);
            return attrs.list && (attrs.list = !(!document.createElement("datalist") || !window.HTMLDataListElement)), 
            attrs;
        }("autocomplete autofocus list placeholder max min multiple pattern required step".split(" ")), 
        Modernizr.inputtypes = function(props) {
            for (var bool, inputElemType, defaultView, i = 0, len = props.length; len > i; i++) inputElem.setAttribute("type", inputElemType = props[i]), 
            bool = "text" !== inputElem.type, bool && (inputElem.value = smile, inputElem.style.cssText = "position:absolute;visibility:hidden;", 
            /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ? (docElement.appendChild(inputElem), 
            defaultView = document.defaultView, bool = defaultView.getComputedStyle && "textfield" !== defaultView.getComputedStyle(inputElem, null).WebkitAppearance && 0 !== inputElem.offsetHeight, 
            docElement.removeChild(inputElem)) : /^(search|tel)$/.test(inputElemType) || (bool = /^(url|email)$/.test(inputElemType) ? inputElem.checkValidity && inputElem.checkValidity() === !1 : inputElem.value != smile)), 
            inputs[props[i]] = !!bool;
            return inputs;
        }("search tel url email datetime date month week time datetime-local number range color".split(" "));
    }
    var featureName, hasOwnProp, version = "2.8.3", Modernizr = {}, enableClasses = !0, docElement = document.documentElement, mod = "modernizr", modElem = document.createElement(mod), mStyle = modElem.style, inputElem = document.createElement("input"), smile = ":)", toString = {}.toString, prefixes = " -webkit- -moz- -o- -ms- ".split(" "), omPrefixes = "Webkit Moz O ms", cssomPrefixes = omPrefixes.split(" "), domPrefixes = omPrefixes.toLowerCase().split(" "), ns = {
        svg: "http://www.w3.org/2000/svg"
    }, tests = {}, inputs = {}, attrs = {}, classes = [], slice = classes.slice, injectElementWithStyles = function(rule, callback, nodes, testnames) {
        var style, ret, node, docOverflow, div = document.createElement("div"), body = document.body, fakeBody = body || document.createElement("body");
        if (parseInt(nodes, 10)) for (;nodes--; ) node = document.createElement("div"), 
        node.id = testnames ? testnames[nodes] : mod + (nodes + 1), div.appendChild(node);
        return style = [ "&#173;", '<style id="s', mod, '">', rule, "</style>" ].join(""), 
        div.id = mod, (body ? div : fakeBody).innerHTML += style, fakeBody.appendChild(div), 
        body || (fakeBody.style.background = "", fakeBody.style.overflow = "hidden", docOverflow = docElement.style.overflow, 
        docElement.style.overflow = "hidden", docElement.appendChild(fakeBody)), ret = callback(div, rule), 
        body ? div.parentNode.removeChild(div) : (fakeBody.parentNode.removeChild(fakeBody), 
        docElement.style.overflow = docOverflow), !!ret;
    }, testMediaQuery = function(mq) {
        var matchMedia = window.matchMedia || window.msMatchMedia;
        if (matchMedia) return matchMedia(mq) && matchMedia(mq).matches || !1;
        var bool;
        return injectElementWithStyles("@media " + mq + " { #" + mod + " { position: absolute; } }", function(node) {
            bool = "absolute" == (window.getComputedStyle ? getComputedStyle(node, null) : node.currentStyle).position;
        }), bool;
    }, isEventSupported = function() {
        function isEventSupported(eventName, element) {
            element = element || document.createElement(TAGNAMES[eventName] || "div"), eventName = "on" + eventName;
            var isSupported = eventName in element;
            return isSupported || (element.setAttribute || (element = document.createElement("div")), 
            element.setAttribute && element.removeAttribute && (element.setAttribute(eventName, ""), 
            isSupported = is(element[eventName], "function"), is(element[eventName], "undefined") || (element[eventName] = undefined), 
            element.removeAttribute(eventName))), element = null, isSupported;
        }
        var TAGNAMES = {
            select: "input",
            change: "input",
            submit: "form",
            reset: "form",
            error: "img",
            load: "img",
            abort: "img"
        };
        return isEventSupported;
    }(), _hasOwnProperty = {}.hasOwnProperty;
    hasOwnProp = is(_hasOwnProperty, "undefined") || is(_hasOwnProperty.call, "undefined") ? function(object, property) {
        return property in object && is(object.constructor.prototype[property], "undefined");
    } : function(object, property) {
        return _hasOwnProperty.call(object, property);
    }, Function.prototype.bind || (Function.prototype.bind = function(that) {
        var target = this;
        if ("function" != typeof target) throw new TypeError();
        var args = slice.call(arguments, 1), bound = function() {
            if (this instanceof bound) {
                var F = function() {};
                F.prototype = target.prototype;
                var self = new F(), result = target.apply(self, args.concat(slice.call(arguments)));
                return Object(result) === result ? result : self;
            }
            return target.apply(that, args.concat(slice.call(arguments)));
        };
        return bound;
    }), tests.flexbox = function() {
        return testPropsAll("flexWrap");
    }, tests.flexboxlegacy = function() {
        return testPropsAll("boxDirection");
    }, tests.canvas = function() {
        var elem = document.createElement("canvas");
        return !(!elem.getContext || !elem.getContext("2d"));
    }, tests.canvastext = function() {
        return !(!Modernizr.canvas || !is(document.createElement("canvas").getContext("2d").fillText, "function"));
    }, tests.webgl = function() {
        return !!window.WebGLRenderingContext;
    }, tests.touch = function() {
        var bool;
        return "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch ? bool = !0 : injectElementWithStyles([ "@media (", prefixes.join("touch-enabled),("), mod, ")", "{#modernizr{top:9px;position:absolute}}" ].join(""), function(node) {
            bool = 9 === node.offsetTop;
        }), bool;
    }, tests.geolocation = function() {
        return "geolocation" in navigator;
    }, tests.postmessage = function() {
        return !!window.postMessage;
    }, tests.websqldatabase = function() {
        return !!window.openDatabase;
    }, tests.indexedDB = function() {
        return !!testPropsAll("indexedDB", window);
    }, tests.hashchange = function() {
        return isEventSupported("hashchange", window) && (document.documentMode === undefined || document.documentMode > 7);
    }, tests.history = function() {
        return !(!window.history || !history.pushState);
    }, tests.draganddrop = function() {
        var div = document.createElement("div");
        return "draggable" in div || "ondragstart" in div && "ondrop" in div;
    }, tests.websockets = function() {
        return "WebSocket" in window || "MozWebSocket" in window;
    }, tests.rgba = function() {
        return setCss("background-color:rgba(150,255,150,.5)"), contains(mStyle.backgroundColor, "rgba");
    }, tests.hsla = function() {
        return setCss("background-color:hsla(120,40%,100%,.5)"), contains(mStyle.backgroundColor, "rgba") || contains(mStyle.backgroundColor, "hsla");
    }, tests.multiplebgs = function() {
        return setCss("background:url(https://),url(https://),red url(https://)"), /(url\s*\(.*?){3}/.test(mStyle.background);
    }, tests.backgroundsize = function() {
        return testPropsAll("backgroundSize");
    }, tests.borderimage = function() {
        return testPropsAll("borderImage");
    }, tests.borderradius = function() {
        return testPropsAll("borderRadius");
    }, tests.boxshadow = function() {
        return testPropsAll("boxShadow");
    }, tests.textshadow = function() {
        return "" === document.createElement("div").style.textShadow;
    }, tests.opacity = function() {
        return setCssAll("opacity:.55"), /^0.55$/.test(mStyle.opacity);
    }, tests.cssanimations = function() {
        return testPropsAll("animationName");
    }, tests.csscolumns = function() {
        return testPropsAll("columnCount");
    }, tests.cssgradients = function() {
        var str1 = "background-image:", str2 = "gradient(linear,left top,right bottom,from(#9f9),to(white));", str3 = "linear-gradient(left top,#9f9, white);";
        return setCss((str1 + "-webkit- ".split(" ").join(str2 + str1) + prefixes.join(str3 + str1)).slice(0, -str1.length)), 
        contains(mStyle.backgroundImage, "gradient");
    }, tests.cssreflections = function() {
        return testPropsAll("boxReflect");
    }, tests.csstransforms = function() {
        return !!testPropsAll("transform");
    }, tests.csstransforms3d = function() {
        var ret = !!testPropsAll("perspective");
        return ret && "webkitPerspective" in docElement.style && injectElementWithStyles("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}", function(node) {
            ret = 9 === node.offsetLeft && 3 === node.offsetHeight;
        }), ret;
    }, tests.csstransitions = function() {
        return testPropsAll("transition");
    }, tests.fontface = function() {
        var bool;
        return injectElementWithStyles('@font-face {font-family:"font";src:url("https://")}', function(node, rule) {
            var style = document.getElementById("smodernizr"), sheet = style.sheet || style.styleSheet, cssText = sheet ? sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || "" : "";
            bool = /src/i.test(cssText) && 0 === cssText.indexOf(rule.split(" ")[0]);
        }), bool;
    }, tests.generatedcontent = function() {
        var bool;
        return injectElementWithStyles([ "#", mod, "{font:0/0 a}#", mod, ':after{content:"', smile, '";visibility:hidden;font:3px/1 a}' ].join(""), function(node) {
            bool = node.offsetHeight >= 3;
        }), bool;
    }, tests.video = function() {
        var elem = document.createElement("video"), bool = !1;
        try {
            (bool = !!elem.canPlayType) && (bool = new Boolean(bool), bool.ogg = elem.canPlayType('video/ogg; codecs="theora"').replace(/^no$/, ""), 
            bool.h264 = elem.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, ""), 
            bool.webm = elem.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, ""));
        } catch (e) {}
        return bool;
    }, tests.audio = function() {
        var elem = document.createElement("audio"), bool = !1;
        try {
            (bool = !!elem.canPlayType) && (bool = new Boolean(bool), bool.ogg = elem.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""), 
            bool.mp3 = elem.canPlayType("audio/mpeg;").replace(/^no$/, ""), bool.wav = elem.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""), 
            bool.m4a = (elem.canPlayType("audio/x-m4a;") || elem.canPlayType("audio/aac;")).replace(/^no$/, ""));
        } catch (e) {}
        return bool;
    }, tests.localstorage = function() {
        try {
            return localStorage.setItem(mod, mod), localStorage.removeItem(mod), !0;
        } catch (e) {
            return !1;
        }
    }, tests.sessionstorage = function() {
        try {
            return sessionStorage.setItem(mod, mod), sessionStorage.removeItem(mod), !0;
        } catch (e) {
            return !1;
        }
    }, tests.webworkers = function() {
        return !!window.Worker;
    }, tests.applicationcache = function() {
        return !!window.applicationCache;
    }, tests.svg = function() {
        return !!document.createElementNS && !!document.createElementNS(ns.svg, "svg").createSVGRect;
    }, tests.inlinesvg = function() {
        var div = document.createElement("div");
        return div.innerHTML = "<svg/>", (div.firstChild && div.firstChild.namespaceURI) == ns.svg;
    }, tests.smil = function() {
        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, "animate")));
    }, tests.svgclippaths = function() {
        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, "clipPath")));
    };
    for (var feature in tests) hasOwnProp(tests, feature) && (featureName = feature.toLowerCase(), 
    Modernizr[featureName] = tests[feature](), classes.push((Modernizr[featureName] ? "" : "no-") + featureName));
    return Modernizr.input || webforms(), Modernizr.addTest = function(feature, test) {
        if ("object" == typeof feature) for (var key in feature) hasOwnProp(feature, key) && Modernizr.addTest(key, feature[key]); else {
            if (feature = feature.toLowerCase(), Modernizr[feature] !== undefined) return Modernizr;
            test = "function" == typeof test ? test() : test, "undefined" != typeof enableClasses && enableClasses && (docElement.className += " " + (test ? "" : "no-") + feature), 
            Modernizr[feature] = test;
        }
        return Modernizr;
    }, setCss(""), modElem = inputElem = null, function(window, document) {
        function addStyleSheet(ownerDocument, cssText) {
            var p = ownerDocument.createElement("p"), parent = ownerDocument.getElementsByTagName("head")[0] || ownerDocument.documentElement;
            return p.innerHTML = "x<style>" + cssText + "</style>", parent.insertBefore(p.lastChild, parent.firstChild);
        }
        function getElements() {
            var elements = html5.elements;
            return "string" == typeof elements ? elements.split(" ") : elements;
        }
        function getExpandoData(ownerDocument) {
            var data = expandoData[ownerDocument[expando]];
            return data || (data = {}, expanID++, ownerDocument[expando] = expanID, expandoData[expanID] = data), 
            data;
        }
        function createElement(nodeName, ownerDocument, data) {
            if (ownerDocument || (ownerDocument = document), supportsUnknownElements) return ownerDocument.createElement(nodeName);
            data || (data = getExpandoData(ownerDocument));
            var node;
            return node = data.cache[nodeName] ? data.cache[nodeName].cloneNode() : saveClones.test(nodeName) ? (data.cache[nodeName] = data.createElem(nodeName)).cloneNode() : data.createElem(nodeName), 
            !node.canHaveChildren || reSkip.test(nodeName) || node.tagUrn ? node : data.frag.appendChild(node);
        }
        function createDocumentFragment(ownerDocument, data) {
            if (ownerDocument || (ownerDocument = document), supportsUnknownElements) return ownerDocument.createDocumentFragment();
            data = data || getExpandoData(ownerDocument);
            for (var clone = data.frag.cloneNode(), i = 0, elems = getElements(), l = elems.length; l > i; i++) clone.createElement(elems[i]);
            return clone;
        }
        function shivMethods(ownerDocument, data) {
            data.cache || (data.cache = {}, data.createElem = ownerDocument.createElement, data.createFrag = ownerDocument.createDocumentFragment, 
            data.frag = data.createFrag()), ownerDocument.createElement = function(nodeName) {
                return html5.shivMethods ? createElement(nodeName, ownerDocument, data) : data.createElem(nodeName);
            }, ownerDocument.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + getElements().join().replace(/[\w\-]+/g, function(nodeName) {
                return data.createElem(nodeName), data.frag.createElement(nodeName), 'c("' + nodeName + '")';
            }) + ");return n}")(html5, data.frag);
        }
        function shivDocument(ownerDocument) {
            ownerDocument || (ownerDocument = document);
            var data = getExpandoData(ownerDocument);
            return !html5.shivCSS || supportsHtml5Styles || data.hasCSS || (data.hasCSS = !!addStyleSheet(ownerDocument, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")), 
            supportsUnknownElements || shivMethods(ownerDocument, data), ownerDocument;
        }
        var supportsHtml5Styles, supportsUnknownElements, version = "3.7.0", options = window.html5 || {}, reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, expando = "_html5shiv", expanID = 0, expandoData = {};
        !function() {
            try {
                var a = document.createElement("a");
                a.innerHTML = "<xyz></xyz>", supportsHtml5Styles = "hidden" in a, supportsUnknownElements = 1 == a.childNodes.length || function() {
                    document.createElement("a");
                    var frag = document.createDocumentFragment();
                    return "undefined" == typeof frag.cloneNode || "undefined" == typeof frag.createDocumentFragment || "undefined" == typeof frag.createElement;
                }();
            } catch (e) {
                supportsHtml5Styles = !0, supportsUnknownElements = !0;
            }
        }();
        var html5 = {
            elements: options.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video",
            version: version,
            shivCSS: options.shivCSS !== !1,
            supportsUnknownElements: supportsUnknownElements,
            shivMethods: options.shivMethods !== !1,
            type: "default",
            shivDocument: shivDocument,
            createElement: createElement,
            createDocumentFragment: createDocumentFragment
        };
        window.html5 = html5, shivDocument(document);
    }(this, document), Modernizr._version = version, Modernizr._prefixes = prefixes, 
    Modernizr._domPrefixes = domPrefixes, Modernizr._cssomPrefixes = cssomPrefixes, 
    Modernizr.mq = testMediaQuery, Modernizr.hasEvent = isEventSupported, Modernizr.testProp = function(prop) {
        return testProps([ prop ]);
    }, Modernizr.testAllProps = testPropsAll, Modernizr.testStyles = injectElementWithStyles, 
    Modernizr.prefixed = function(prop, obj, elem) {
        return obj ? testPropsAll(prop, obj, elem) : testPropsAll(prop, "pfx");
    }, docElement.className = docElement.className.replace(/(^|\s)no-js(\s|$)/, "$1$2") + (enableClasses ? " js " + classes.join(" ") : ""), 
    Modernizr;
}(this, this.document), /*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a, b) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {
        if (!a.document) throw new Error("jQuery requires a window with a document");
        return b(a);
    } : b(a);
}("undefined" != typeof window ? window : this, function(a, b) {
    function s(a) {
        var b = a.length, c = n.type(a);
        return "function" === c || n.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a;
    }
    function x(a, b, c) {
        if (n.isFunction(b)) return n.grep(a, function(a, d) {
            return !!b.call(a, d, a) !== c;
        });
        if (b.nodeType) return n.grep(a, function(a) {
            return a === b !== c;
        });
        if ("string" == typeof b) {
            if (w.test(b)) return n.filter(b, a, c);
            b = n.filter(b, a);
        }
        return n.grep(a, function(a) {
            return g.call(b, a) >= 0 !== c;
        });
    }
    function D(a, b) {
        for (;(a = a[b]) && 1 !== a.nodeType; ) ;
        return a;
    }
    function G(a) {
        var b = F[a] = {};
        return n.each(a.match(E) || [], function(a, c) {
            b[c] = !0;
        }), b;
    }
    function I() {
        l.removeEventListener("DOMContentLoaded", I, !1), a.removeEventListener("load", I, !1), 
        n.ready();
    }
    function K() {
        Object.defineProperty(this.cache = {}, 0, {
            get: function() {
                return {};
            }
        }), this.expando = n.expando + K.uid++;
    }
    function P(a, b, c) {
        var d;
        if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(O, "-$1").toLowerCase(), 
        c = a.getAttribute(d), "string" == typeof c) {
            try {
                c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : N.test(c) ? n.parseJSON(c) : c;
            } catch (e) {}
            M.set(a, b, c);
        } else c = void 0;
        return c;
    }
    function Z() {
        return !0;
    }
    function $() {
        return !1;
    }
    function _() {
        try {
            return l.activeElement;
        } catch (a) {}
    }
    function jb(a, b) {
        return n.nodeName(a, "table") && n.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a;
    }
    function kb(a) {
        return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a;
    }
    function lb(a) {
        var b = gb.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a;
    }
    function mb(a, b) {
        for (var c = 0, d = a.length; d > c; c++) L.set(a[c], "globalEval", !b || L.get(b[c], "globalEval"));
    }
    function nb(a, b) {
        var c, d, e, f, g, h, i, j;
        if (1 === b.nodeType) {
            if (L.hasData(a) && (f = L.access(a), g = L.set(b, f), j = f.events)) {
                delete g.handle, g.events = {};
                for (e in j) for (c = 0, d = j[e].length; d > c; c++) n.event.add(b, e, j[e][c]);
            }
            M.hasData(a) && (h = M.access(a), i = n.extend({}, h), M.set(b, i));
        }
    }
    function ob(a, b) {
        var c = a.getElementsByTagName ? a.getElementsByTagName(b || "*") : a.querySelectorAll ? a.querySelectorAll(b || "*") : [];
        return void 0 === b || b && n.nodeName(a, b) ? n.merge([ a ], c) : c;
    }
    function pb(a, b) {
        var c = b.nodeName.toLowerCase();
        "input" === c && T.test(a.type) ? b.checked = a.checked : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue);
    }
    function sb(b, c) {
        var d, e = n(c.createElement(b)).appendTo(c.body), f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : n.css(e[0], "display");
        return e.detach(), f;
    }
    function tb(a) {
        var b = l, c = rb[a];
        return c || (c = sb(a, b), "none" !== c && c || (qb = (qb || n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement), 
        b = qb[0].contentDocument, b.write(), b.close(), c = sb(a, b), qb.detach()), rb[a] = c), 
        c;
    }
    function xb(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || wb(a), c && (g = c.getPropertyValue(b) || c[b]), c && ("" !== g || n.contains(a.ownerDocument, a) || (g = n.style(a, b)), 
        vb.test(g) && ub.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, 
        g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g;
    }
    function yb(a, b) {
        return {
            get: function() {
                return a() ? void delete this.get : (this.get = b).apply(this, arguments);
            }
        };
    }
    function Fb(a, b) {
        if (b in a) return b;
        for (var c = b[0].toUpperCase() + b.slice(1), d = b, e = Eb.length; e--; ) if (b = Eb[e] + c, 
        b in a) return b;
        return d;
    }
    function Gb(a, b, c) {
        var d = Ab.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b;
    }
    function Hb(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) "margin" === c && (g += n.css(a, c + R[f], !0, e)), 
        d ? ("content" === c && (g -= n.css(a, "padding" + R[f], !0, e)), "margin" !== c && (g -= n.css(a, "border" + R[f] + "Width", !0, e))) : (g += n.css(a, "padding" + R[f], !0, e), 
        "padding" !== c && (g += n.css(a, "border" + R[f] + "Width", !0, e)));
        return g;
    }
    function Ib(a, b, c) {
        var d = !0, e = "width" === b ? a.offsetWidth : a.offsetHeight, f = wb(a), g = "border-box" === n.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (e = xb(a, b, f), (0 > e || null == e) && (e = a.style[b]), vb.test(e)) return e;
            d = g && (k.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0;
        }
        return e + Hb(a, b, c || (g ? "border" : "content"), d, f) + "px";
    }
    function Jb(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) d = a[g], d.style && (f[g] = L.get(d, "olddisplay"), 
        c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && S(d) && (f[g] = L.access(d, "olddisplay", tb(d.nodeName)))) : (e = S(d), 
        "none" === c && e || L.set(d, "olddisplay", e ? c : n.css(d, "display"))));
        for (g = 0; h > g; g++) d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"));
        return a;
    }
    function Kb(a, b, c, d, e) {
        return new Kb.prototype.init(a, b, c, d, e);
    }
    function Sb() {
        return setTimeout(function() {
            Lb = void 0;
        }), Lb = n.now();
    }
    function Tb(a, b) {
        var c, d = 0, e = {
            height: a
        };
        for (b = b ? 1 : 0; 4 > d; d += 2 - b) c = R[d], e["margin" + c] = e["padding" + c] = a;
        return b && (e.opacity = e.width = a), e;
    }
    function Ub(a, b, c) {
        for (var d, e = (Rb[b] || []).concat(Rb["*"]), f = 0, g = e.length; g > f; f++) if (d = e[f].call(c, b, a)) return d;
    }
    function Vb(a, b, c) {
        var d, e, f, g, h, i, j, k, l = this, m = {}, o = a.style, p = a.nodeType && S(a), q = L.get(a, "fxshow");
        c.queue || (h = n._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, 
        h.empty.fire = function() {
            h.unqueued || i();
        }), h.unqueued++, l.always(function() {
            l.always(function() {
                h.unqueued--, n.queue(a, "fx").length || h.empty.fire();
            });
        })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [ o.overflow, o.overflowX, o.overflowY ], 
        j = n.css(a, "display"), k = "none" === j ? L.get(a, "olddisplay") || tb(a.nodeName) : j, 
        "inline" === k && "none" === n.css(a, "float") && (o.display = "inline-block")), 
        c.overflow && (o.overflow = "hidden", l.always(function() {
            o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2];
        }));
        for (d in b) if (e = b[d], Nb.exec(e)) {
            if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {
                if ("show" !== e || !q || void 0 === q[d]) continue;
                p = !0;
            }
            m[d] = q && q[d] || n.style(a, d);
        } else j = void 0;
        if (n.isEmptyObject(m)) "inline" === ("none" === j ? tb(a.nodeName) : j) && (o.display = j); else {
            q ? "hidden" in q && (p = q.hidden) : q = L.access(a, "fxshow", {}), f && (q.hidden = !p), 
            p ? n(a).show() : l.done(function() {
                n(a).hide();
            }), l.done(function() {
                var b;
                L.remove(a, "fxshow");
                for (b in m) n.style(a, b, m[b]);
            });
            for (d in m) g = Ub(p ? q[d] : 0, d, l), d in q || (q[d] = g.start, p && (g.end = g.start, 
            g.start = "width" === d || "height" === d ? 1 : 0));
        }
    }
    function Wb(a, b) {
        var c, d, e, f, g;
        for (c in a) if (d = n.camelCase(c), e = b[d], f = a[c], n.isArray(f) && (e = f[1], 
        f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = n.cssHooks[d], g && "expand" in g) {
            f = g.expand(f), delete a[d];
            for (c in f) c in a || (a[c] = f[c], b[c] = e);
        } else b[d] = e;
    }
    function Xb(a, b, c) {
        var d, e, f = 0, g = Qb.length, h = n.Deferred().always(function() {
            delete i.elem;
        }), i = function() {
            if (e) return !1;
            for (var b = Lb || Sb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) j.tweens[g].run(f);
            return h.notifyWith(a, [ j, f, c ]), 1 > f && i ? c : (h.resolveWith(a, [ j ]), 
            !1);
        }, j = h.promise({
            elem: a,
            props: n.extend({}, b),
            opts: n.extend(!0, {
                specialEasing: {}
            }, c),
            originalProperties: b,
            originalOptions: c,
            startTime: Lb || Sb(),
            duration: c.duration,
            tweens: [],
            createTween: function(b, c) {
                var d = n.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                return j.tweens.push(d), d;
            },
            stop: function(b) {
                var c = 0, d = b ? j.tweens.length : 0;
                if (e) return this;
                for (e = !0; d > c; c++) j.tweens[c].run(1);
                return b ? h.resolveWith(a, [ j, b ]) : h.rejectWith(a, [ j, b ]), this;
            }
        }), k = j.props;
        for (Wb(k, j.opts.specialEasing); g > f; f++) if (d = Qb[f].call(j, a, k, j.opts)) return d;
        return n.map(k, Ub, j), n.isFunction(j.opts.start) && j.opts.start.call(a, j), n.fx.timer(n.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always);
    }
    function qc(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0, f = b.toLowerCase().match(E) || [];
            if (n.isFunction(c)) for (;d = f[e++]; ) "+" === d[0] ? (d = d.slice(1) || "*", 
            (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);
        };
    }
    function rc(a, b, c, d) {
        function g(h) {
            var i;
            return e[h] = !0, n.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), 
                g(j), !1);
            }), i;
        }
        var e = {}, f = a === mc;
        return g(b.dataTypes[0]) || !e["*"] && g("*");
    }
    function sc(a, b) {
        var c, d, e = n.ajaxSettings.flatOptions || {};
        for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
        return d && n.extend(!0, a, d), a;
    }
    function tc(a, b, c) {
        for (var d, e, f, g, h = a.contents, i = a.dataTypes; "*" === i[0]; ) i.shift(), 
        void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
        if (d) for (e in h) if (h[e] && h[e].test(d)) {
            i.unshift(e);
            break;
        }
        if (i[0] in c) f = i[0]; else {
            for (e in c) {
                if (!i[0] || a.converters[e + " " + i[0]]) {
                    f = e;
                    break;
                }
                g || (g = e);
            }
            f = f || g;
        }
        return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0;
    }
    function uc(a, b, c, d) {
        var e, f, g, h, i, j = {}, k = a.dataTypes.slice();
        if (k[1]) for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        for (f = k.shift(); f; ) if (a.responseFields[f] && (c[a.responseFields[f]] = b), 
        !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if ("*" === f) f = i; else if ("*" !== i && i !== f) {
            if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                break;
            }
            if (g !== !0) if (g && a["throws"]) b = g(b); else try {
                b = g(b);
            } catch (l) {
                return {
                    state: "parsererror",
                    error: g ? l : "No conversion from " + i + " to " + f
                };
            }
        }
        return {
            state: "success",
            data: b
        };
    }
    function Ac(a, b, c, d) {
        var e;
        if (n.isArray(b)) n.each(b, function(b, e) {
            c || wc.test(a) ? d(a, e) : Ac(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d);
        }); else if (c || "object" !== n.type(b)) d(a, b); else for (e in b) Ac(a + "[" + e + "]", b[e], c, d);
    }
    function Jc(a) {
        return n.isWindow(a) ? a : 9 === a.nodeType && a.defaultView;
    }
    var c = [], d = c.slice, e = c.concat, f = c.push, g = c.indexOf, h = {}, i = h.toString, j = h.hasOwnProperty, k = {}, l = a.document, m = "2.1.3", n = function(a, b) {
        return new n.fn.init(a, b);
    }, o = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, p = /^-ms-/, q = /-([\da-z])/gi, r = function(a, b) {
        return b.toUpperCase();
    };
    n.fn = n.prototype = {
        jquery: m,
        constructor: n,
        selector: "",
        length: 0,
        toArray: function() {
            return d.call(this);
        },
        get: function(a) {
            return null != a ? 0 > a ? this[a + this.length] : this[a] : d.call(this);
        },
        pushStack: function(a) {
            var b = n.merge(this.constructor(), a);
            return b.prevObject = this, b.context = this.context, b;
        },
        each: function(a, b) {
            return n.each(this, a, b);
        },
        map: function(a) {
            return this.pushStack(n.map(this, function(b, c) {
                return a.call(b, c, b);
            }));
        },
        slice: function() {
            return this.pushStack(d.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        eq: function(a) {
            var b = this.length, c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [ this[c] ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor(null);
        },
        push: f,
        sort: c.sort,
        splice: c.splice
    }, n.extend = n.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {}, h = 1, i = arguments.length, j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || n.isFunction(g) || (g = {}), 
        h === i && (g = this, h--); i > h; h++) if (null != (a = arguments[h])) for (b in a) c = g[b], 
        d = a[b], g !== d && (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? (e = !1, 
        f = c && n.isArray(c) ? c : []) : f = c && n.isPlainObject(c) ? c : {}, g[b] = n.extend(j, f, d)) : void 0 !== d && (g[b] = d));
        return g;
    }, n.extend({
        expando: "jQuery" + (m + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a);
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === n.type(a);
        },
        isArray: Array.isArray,
        isWindow: function(a) {
            return null != a && a === a.window;
        },
        isNumeric: function(a) {
            return !n.isArray(a) && a - parseFloat(a) + 1 >= 0;
        },
        isPlainObject: function(a) {
            return "object" !== n.type(a) || a.nodeType || n.isWindow(a) ? !1 : a.constructor && !j.call(a.constructor.prototype, "isPrototypeOf") ? !1 : !0;
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) return !1;
            return !0;
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a;
        },
        globalEval: function(a) {
            var b, c = eval;
            a = n.trim(a), a && (1 === a.indexOf("use strict") ? (b = l.createElement("script"), 
            b.text = a, l.head.appendChild(b).parentNode.removeChild(b)) : c(a));
        },
        camelCase: function(a) {
            return a.replace(p, "ms-").replace(q, r);
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
        },
        each: function(a, b, c) {
            var d, e = 0, f = a.length, g = s(a);
            if (c) {
                if (g) for (;f > e && (d = b.apply(a[e], c), d !== !1); e++) ; else for (e in a) if (d = b.apply(a[e], c), 
                d === !1) break;
            } else if (g) for (;f > e && (d = b.call(a[e], e, a[e]), d !== !1); e++) ; else for (e in a) if (d = b.call(a[e], e, a[e]), 
            d === !1) break;
            return a;
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(o, "");
        },
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (s(Object(a)) ? n.merge(c, "string" == typeof a ? [ a ] : a) : f.call(c, a)), 
            c;
        },
        inArray: function(a, b, c) {
            return null == b ? -1 : g.call(b, a, c);
        },
        merge: function(a, b) {
            for (var c = +b.length, d = 0, e = a.length; c > d; d++) a[e++] = b[d];
            return a.length = e, a;
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
            return e;
        },
        map: function(a, b, c) {
            var d, f = 0, g = a.length, h = s(a), i = [];
            if (h) for (;g > f; f++) d = b(a[f], f, c), null != d && i.push(d); else for (f in a) d = b(a[f], f, c), 
            null != d && i.push(d);
            return e.apply([], i);
        },
        guid: 1,
        proxy: function(a, b) {
            var c, e, f;
            return "string" == typeof b && (c = a[b], b = a, a = c), n.isFunction(a) ? (e = d.call(arguments, 2), 
            f = function() {
                return a.apply(b || this, e.concat(d.call(arguments)));
            }, f.guid = a.guid = a.guid || n.guid++, f) : void 0;
        },
        now: Date.now,
        support: k
    }), n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
        h["[object " + b + "]"] = b.toLowerCase();
    });
    var t = function(a) {
        function gb(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, d = d || [], k = b.nodeType, 
            "string" != typeof a || !a || 1 !== k && 9 !== k && 11 !== k) return d;
            if (!e && p) {
                if (11 !== k && (f = _.exec(a))) if (j = f[1]) {
                    if (9 === k) {
                        if (h = b.getElementById(j), !h || !h.parentNode) return d;
                        if (h.id === j) return d.push(h), d;
                    } else if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j) return d.push(h), 
                    d;
                } else {
                    if (f[2]) return H.apply(d, b.getElementsByTagName(a)), d;
                    if ((j = f[3]) && c.getElementsByClassName) return H.apply(d, b.getElementsByClassName(j)), 
                    d;
                }
                if (c.qsa && (!q || !q.test(a))) {
                    if (s = r = u, w = b, x = 1 !== k && a, 1 === k && "object" !== b.nodeName.toLowerCase()) {
                        for (o = g(a), (r = b.getAttribute("id")) ? s = r.replace(bb, "\\$&") : b.setAttribute("id", s), 
                        s = "[id='" + s + "'] ", l = o.length; l--; ) o[l] = s + rb(o[l]);
                        w = ab.test(a) && pb(b.parentNode) || b, x = o.join(",");
                    }
                    if (x) try {
                        return H.apply(d, w.querySelectorAll(x)), d;
                    } catch (y) {} finally {
                        r || b.removeAttribute("id");
                    }
                }
            }
            return i(a.replace(R, "$1"), b, d, e);
        }
        function hb() {
            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e;
            }
            var a = [];
            return b;
        }
        function ib(a) {
            return a[u] = !0, a;
        }
        function jb(a) {
            var b = n.createElement("div");
            try {
                return !!a(b);
            } catch (c) {
                return !1;
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null;
            }
        }
        function kb(a, b) {
            for (var c = a.split("|"), e = a.length; e--; ) d.attrHandle[c[e]] = b;
        }
        function lb(a, b) {
            var c = b && a, d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || C) - (~a.sourceIndex || C);
            if (d) return d;
            if (c) for (;c = c.nextSibling; ) if (c === b) return -1;
            return a ? 1 : -1;
        }
        function mb(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a;
            };
        }
        function nb(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a;
            };
        }
        function ob(a) {
            return ib(function(b) {
                return b = +b, ib(function(c, d) {
                    for (var e, f = a([], c.length, b), g = f.length; g--; ) c[e = f[g]] && (c[e] = !(d[e] = c[e]));
                });
            });
        }
        function pb(a) {
            return a && "undefined" != typeof a.getElementsByTagName && a;
        }
        function qb() {}
        function rb(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) d += a[b].value;
            return d;
        }
        function sb(a, b, c) {
            var d = b.dir, e = c && "parentNode" === d, f = x++;
            return b.first ? function(b, c, f) {
                for (;b = b[d]; ) if (1 === b.nodeType || e) return a(b, c, f);
            } : function(b, c, g) {
                var h, i, j = [ w, f ];
                if (g) {
                    for (;b = b[d]; ) if ((1 === b.nodeType || e) && a(b, c, g)) return !0;
                } else for (;b = b[d]; ) if (1 === b.nodeType || e) {
                    if (i = b[u] || (b[u] = {}), (h = i[d]) && h[0] === w && h[1] === f) return j[2] = h[2];
                    if (i[d] = j, j[2] = a(b, c, g)) return !0;
                }
            };
        }
        function tb(a) {
            return a.length > 1 ? function(b, c, d) {
                for (var e = a.length; e--; ) if (!a[e](b, c, d)) return !1;
                return !0;
            } : a[0];
        }
        function ub(a, b, c) {
            for (var d = 0, e = b.length; e > d; d++) gb(a, b[d], c);
            return c;
        }
        function vb(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++) (f = a[h]) && (!c || c(f, d, e)) && (g.push(f), 
            j && b.push(h));
            return g;
        }
        function wb(a, b, c, d, e, f) {
            return d && !d[u] && (d = wb(d)), e && !e[u] && (e = wb(e, f)), ib(function(f, g, h, i) {
                var j, k, l, m = [], n = [], o = g.length, p = f || ub(b || "*", h.nodeType ? [ h ] : h, []), q = !a || !f && b ? p : vb(p, m, a, h, i), r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i), d) for (j = vb(r, n), d(j, [], h, i), k = j.length; k--; ) (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));
                if (f) {
                    if (e || a) {
                        if (e) {
                            for (j = [], k = r.length; k--; ) (l = r[k]) && j.push(q[k] = l);
                            e(null, r = [], j, i);
                        }
                        for (k = r.length; k--; ) (l = r[k]) && (j = e ? J(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));
                    }
                } else r = vb(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : H.apply(g, r);
            });
        }
        function xb(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = sb(function(a) {
                return a === b;
            }, h, !0), l = sb(function(a) {
                return J(b, a) > -1;
            }, h, !0), m = [ function(a, c, d) {
                var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
                return b = null, e;
            } ]; f > i; i++) if (c = d.relative[a[i].type]) m = [ sb(tb(m), c) ]; else {
                if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
                    for (e = ++i; f > e && !d.relative[a[e].type]; e++) ;
                    return wb(i > 1 && tb(m), i > 1 && rb(a.slice(0, i - 1).concat({
                        value: " " === a[i - 2].type ? "*" : ""
                    })).replace(R, "$1"), c, e > i && xb(a.slice(i, e)), f > e && xb(a = a.slice(e)), f > e && rb(a));
                }
                m.push(c);
            }
            return tb(m);
        }
        function yb(a, b) {
            var c = b.length > 0, e = a.length > 0, f = function(f, g, h, i, k) {
                var l, m, o, p = 0, q = "0", r = f && [], s = [], t = j, u = f || e && d.find.TAG("*", k), v = w += null == t ? 1 : Math.random() || .1, x = u.length;
                for (k && (j = g !== n && g); q !== x && null != (l = u[q]); q++) {
                    if (e && l) {
                        for (m = 0; o = a[m++]; ) if (o(l, g, h)) {
                            i.push(l);
                            break;
                        }
                        k && (w = v);
                    }
                    c && ((l = !o && l) && p--, f && r.push(l));
                }
                if (p += q, c && q !== p) {
                    for (m = 0; o = b[m++]; ) o(r, s, g, h);
                    if (f) {
                        if (p > 0) for (;q--; ) r[q] || s[q] || (s[q] = F.call(i));
                        s = vb(s);
                    }
                    H.apply(i, s), k && !f && s.length > 0 && p + b.length > 1 && gb.uniqueSort(i);
                }
                return k && (w = v, j = t), r;
            };
            return c ? ib(f) : f;
        }
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * new Date(), v = a.document, w = 0, x = 0, y = hb(), z = hb(), A = hb(), B = function(a, b) {
            return a === b && (l = !0), 0;
        }, C = 1 << 31, D = {}.hasOwnProperty, E = [], F = E.pop, G = E.push, H = E.push, I = E.slice, J = function(a, b) {
            for (var c = 0, d = a.length; d > c; c++) if (a[c] === b) return c;
            return -1;
        }, K = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", L = "[\\x20\\t\\r\\n\\f]", M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", N = M.replace("w", "w#"), O = "\\[" + L + "*(" + M + ")(?:" + L + "*([*^$|!~]?=)" + L + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + N + "))|)" + L + "*\\]", P = ":(" + M + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + O + ")*)|.*)\\)|)", Q = new RegExp(L + "+", "g"), R = new RegExp("^" + L + "+|((?:^|[^\\\\])(?:\\\\.)*)" + L + "+$", "g"), S = new RegExp("^" + L + "*," + L + "*"), T = new RegExp("^" + L + "*([>+~]|" + L + ")" + L + "*"), U = new RegExp("=" + L + "*([^\\]'\"]*?)" + L + "*\\]", "g"), V = new RegExp(P), W = new RegExp("^" + N + "$"), X = {
            ID: new RegExp("^#(" + M + ")"),
            CLASS: new RegExp("^\\.(" + M + ")"),
            TAG: new RegExp("^(" + M.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + O),
            PSEUDO: new RegExp("^" + P),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + L + "*(even|odd|(([+-]|)(\\d*)n|)" + L + "*(?:([+-]|)" + L + "*(\\d+)|))" + L + "*\\)|)", "i"),
            bool: new RegExp("^(?:" + K + ")$", "i"),
            needsContext: new RegExp("^" + L + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + L + "*((?:-\\d)?\\d*)" + L + "*\\)|)(?=[^-]|$)", "i")
        }, Y = /^(?:input|select|textarea|button)$/i, Z = /^h\d$/i, $ = /^[^{]+\{\s*\[native \w/, _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ab = /[+~]/, bb = /'|\\/g, cb = new RegExp("\\\\([\\da-f]{1,6}" + L + "?|(" + L + ")|.)", "ig"), db = function(a, b, c) {
            var d = "0x" + b - 65536;
            return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320);
        }, eb = function() {
            m();
        };
        try {
            H.apply(E = I.call(v.childNodes), v.childNodes), E[v.childNodes.length].nodeType;
        } catch (fb) {
            H = {
                apply: E.length ? function(a, b) {
                    G.apply(a, I.call(b));
                } : function(a, b) {
                    for (var c = a.length, d = 0; a[c++] = b[d++]; ) ;
                    a.length = c - 1;
                }
            };
        }
        c = gb.support = {}, f = gb.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1;
        }, m = gb.setDocument = function(a) {
            var b, e, g = a ? a.ownerDocument || a : v;
            return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = g.documentElement, 
            e = g.defaultView, e && e !== e.top && (e.addEventListener ? e.addEventListener("unload", eb, !1) : e.attachEvent && e.attachEvent("onunload", eb)), 
            p = !f(g), c.attributes = jb(function(a) {
                return a.className = "i", !a.getAttribute("className");
            }), c.getElementsByTagName = jb(function(a) {
                return a.appendChild(g.createComment("")), !a.getElementsByTagName("*").length;
            }), c.getElementsByClassName = $.test(g.getElementsByClassName), c.getById = jb(function(a) {
                return o.appendChild(a).id = u, !g.getElementsByName || !g.getElementsByName(u).length;
            }), c.getById ? (d.find.ID = function(a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c = b.getElementById(a);
                    return c && c.parentNode ? [ c ] : [];
                }
            }, d.filter.ID = function(a) {
                var b = a.replace(cb, db);
                return function(a) {
                    return a.getAttribute("id") === b;
                };
            }) : (delete d.find.ID, d.filter.ID = function(a) {
                var b = a.replace(cb, db);
                return function(a) {
                    var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                    return c && c.value === b;
                };
            }), d.find.TAG = c.getElementsByTagName ? function(a, b) {
                return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0;
            } : function(a, b) {
                var c, d = [], e = 0, f = b.getElementsByTagName(a);
                if ("*" === a) {
                    for (;c = f[e++]; ) 1 === c.nodeType && d.push(c);
                    return d;
                }
                return f;
            }, d.find.CLASS = c.getElementsByClassName && function(a, b) {
                return p ? b.getElementsByClassName(a) : void 0;
            }, r = [], q = [], (c.qsa = $.test(g.querySelectorAll)) && (jb(function(a) {
                o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\f]' msallowcapture=''><option selected=''></option></select>", 
                a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + L + "*(?:''|\"\")"), 
                a.querySelectorAll("[selected]").length || q.push("\\[" + L + "*(?:value|" + K + ")"), 
                a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), 
                a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]");
            }), jb(function(a) {
                var b = g.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + L + "*[*^$|!~]?="), 
                a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), 
                q.push(",.*:");
            })), (c.matchesSelector = $.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && jb(function(a) {
                c.disconnectedMatch = s.call(a, "div"), s.call(a, "[s!='']:x"), r.push("!=", P);
            }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), 
            b = $.test(o.compareDocumentPosition), t = b || $.test(o.contains) ? function(a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a, d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));
            } : function(a, b) {
                if (b) for (;b = b.parentNode; ) if (b === a) return !0;
                return !1;
            }, B = b ? function(a, b) {
                if (a === b) return l = !0, 0;
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 
                1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === g || a.ownerDocument === v && t(v, a) ? -1 : b === g || b.ownerDocument === v && t(v, b) ? 1 : k ? J(k, a) - J(k, b) : 0 : 4 & d ? -1 : 1);
            } : function(a, b) {
                if (a === b) return l = !0, 0;
                var c, d = 0, e = a.parentNode, f = b.parentNode, h = [ a ], i = [ b ];
                if (!e || !f) return a === g ? -1 : b === g ? 1 : e ? -1 : f ? 1 : k ? J(k, a) - J(k, b) : 0;
                if (e === f) return lb(a, b);
                for (c = a; c = c.parentNode; ) h.unshift(c);
                for (c = b; c = c.parentNode; ) i.unshift(c);
                for (;h[d] === i[d]; ) d++;
                return d ? lb(h[d], i[d]) : h[d] === v ? -1 : i[d] === v ? 1 : 0;
            }, g) : n;
        }, gb.matches = function(a, b) {
            return gb(a, null, null, b);
        }, gb.matchesSelector = function(a, b) {
            if ((a.ownerDocument || a) !== n && m(a), b = b.replace(U, "='$1']"), !(!c.matchesSelector || !p || r && r.test(b) || q && q.test(b))) try {
                var d = s.call(a, b);
                if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d;
            } catch (e) {}
            return gb(b, n, null, [ a ]).length > 0;
        }, gb.contains = function(a, b) {
            return (a.ownerDocument || a) !== n && m(a), t(a, b);
        }, gb.attr = function(a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()], f = e && D.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;
        }, gb.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a);
        }, gb.uniqueSort = function(a) {
            var b, d = [], e = 0, f = 0;
            if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
                for (;b = a[f++]; ) b === a[f] && (e = d.push(f));
                for (;e--; ) a.splice(d[e], 1);
            }
            return k = null, a;
        }, e = gb.getText = function(a) {
            var b, c = "", d = 0, f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c += e(a);
                } else if (3 === f || 4 === f) return a.nodeValue;
            } else for (;b = a[d++]; ) c += e(b);
            return c;
        }, d = gb.selectors = {
            cacheLength: 50,
            createPseudo: ib,
            match: X,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(cb, db), a[3] = (a[3] || a[4] || a[5] || "").replace(cb, db), 
                    "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || gb.error(a[0]), 
                    a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && gb.error(a[0]), 
                    a;
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return X.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && V.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), 
                    a[2] = c.slice(0, b)), a.slice(0, 3));
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(cb, db).toLowerCase();
                    return "*" === a ? function() {
                        return !0;
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b;
                    };
                },
                CLASS: function(a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + L + ")" + a + "(" + L + "|$)")) && y(a, function(a) {
                        return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "");
                    });
                },
                ATTR: function(a, b, c) {
                    return function(d) {
                        var e = gb.attr(d, a);
                        return null == e ? "!=" === b : b ? (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(Q, " ") + " ").indexOf(c) > -1 : "|=" === b ? e === c || e.slice(0, c.length + 1) === c + "-" : !1) : !0;
                    };
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3), g = "last" !== a.slice(-4), h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode;
                    } : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling", q = b.parentNode, r = h && b.nodeName.toLowerCase(), s = !i && !h;
                        if (q) {
                            if (f) {
                                for (;p; ) {
                                    for (l = b; l = l[p]; ) if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) return !1;
                                    o = p = "only" === a && !o && "nextSibling";
                                }
                                return !0;
                            }
                            if (o = [ g ? q.firstChild : q.lastChild ], g && s) {
                                for (k = q[u] || (q[u] = {}), j = k[a] || [], n = j[0] === w && j[1], m = j[0] === w && j[2], 
                                l = n && q.childNodes[n]; l = ++n && l && l[p] || (m = n = 0) || o.pop(); ) if (1 === l.nodeType && ++m && l === b) {
                                    k[a] = [ w, n, m ];
                                    break;
                                }
                            } else if (s && (j = (b[u] || (b[u] = {}))[a]) && j[0] === w) m = j[1]; else for (;(l = ++n && l && l[p] || (m = n = 0) || o.pop()) && ((h ? l.nodeName.toLowerCase() !== r : 1 !== l.nodeType) || !++m || (s && ((l[u] || (l[u] = {}))[a] = [ w, m ]), 
                            l !== b)); ) ;
                            return m -= e, m === d || m % d === 0 && m / d >= 0;
                        }
                    };
                },
                PSEUDO: function(a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || gb.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [ a, a, "", b ], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ib(function(a, c) {
                        for (var d, f = e(a, b), g = f.length; g--; ) d = J(a, f[g]), a[d] = !(c[d] = f[g]);
                    }) : function(a) {
                        return e(a, 0, c);
                    }) : e;
                }
            },
            pseudos: {
                not: ib(function(a) {
                    var b = [], c = [], d = h(a.replace(R, "$1"));
                    return d[u] ? ib(function(a, b, c, e) {
                        for (var f, g = d(a, null, e, []), h = a.length; h--; ) (f = g[h]) && (a[h] = !(b[h] = f));
                    }) : function(a, e, f) {
                        return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop();
                    };
                }),
                has: ib(function(a) {
                    return function(b) {
                        return gb(a, b).length > 0;
                    };
                }),
                contains: ib(function(a) {
                    return a = a.replace(cb, db), function(b) {
                        return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;
                    };
                }),
                lang: ib(function(a) {
                    return W.test(a || "") || gb.error("unsupported lang: " + a), a = a.replace(cb, db).toLowerCase(), 
                    function(b) {
                        var c;
                        do if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), 
                        c === a || 0 === c.indexOf(a + "-"); while ((b = b.parentNode) && 1 === b.nodeType);
                        return !1;
                    };
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id;
                },
                root: function(a) {
                    return a === o;
                },
                focus: function(a) {
                    return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);
                },
                enabled: function(a) {
                    return a.disabled === !1;
                },
                disabled: function(a) {
                    return a.disabled === !0;
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected;
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType < 6) return !1;
                    return !0;
                },
                parent: function(a) {
                    return !d.pseudos.empty(a);
                },
                header: function(a) {
                    return Z.test(a.nodeName);
                },
                input: function(a) {
                    return Y.test(a.nodeName);
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b;
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());
                },
                first: ob(function() {
                    return [ 0 ];
                }),
                last: ob(function(a, b) {
                    return [ b - 1 ];
                }),
                eq: ob(function(a, b, c) {
                    return [ 0 > c ? c + b : c ];
                }),
                even: ob(function(a, b) {
                    for (var c = 0; b > c; c += 2) a.push(c);
                    return a;
                }),
                odd: ob(function(a, b) {
                    for (var c = 1; b > c; c += 2) a.push(c);
                    return a;
                }),
                lt: ob(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; --d >= 0; ) a.push(d);
                    return a;
                }),
                gt: ob(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; ++d < b; ) a.push(d);
                    return a;
                })
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) d.pseudos[b] = mb(b);
        for (b in {
            submit: !0,
            reset: !0
        }) d.pseudos[b] = nb(b);
        return qb.prototype = d.filters = d.pseudos, d.setFilters = new qb(), g = gb.tokenize = function(a, b) {
            var c, e, f, g, h, i, j, k = z[a + " "];
            if (k) return b ? 0 : k.slice(0);
            for (h = a, i = [], j = d.preFilter; h; ) {
                (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push(f = [])), 
                c = !1, (e = T.exec(h)) && (c = e.shift(), f.push({
                    value: c,
                    type: e[0].replace(R, " ")
                }), h = h.slice(c.length));
                for (g in d.filter) !(e = X[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), 
                f.push({
                    value: c,
                    type: g,
                    matches: e
                }), h = h.slice(c.length));
                if (!c) break;
            }
            return b ? h.length : h ? gb.error(a) : z(a, i).slice(0);
        }, h = gb.compile = function(a, b) {
            var c, d = [], e = [], f = A[a + " "];
            if (!f) {
                for (b || (b = g(a)), c = b.length; c--; ) f = xb(b[c]), f[u] ? d.push(f) : e.push(f);
                f = A(a, yb(e, d)), f.selector = a;
            }
            return f;
        }, i = gb.select = function(a, b, e, f) {
            var i, j, k, l, m, n = "function" == typeof a && a, o = !f && g(a = n.selector || a);
            if (e = e || [], 1 === o.length) {
                if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) {
                    if (b = (d.find.ID(k.matches[0].replace(cb, db), b) || [])[0], !b) return e;
                    n && (b = b.parentNode), a = a.slice(j.shift().value.length);
                }
                for (i = X.needsContext.test(a) ? 0 : j.length; i-- && (k = j[i], !d.relative[l = k.type]); ) if ((m = d.find[l]) && (f = m(k.matches[0].replace(cb, db), ab.test(j[0].type) && pb(b.parentNode) || b))) {
                    if (j.splice(i, 1), a = f.length && rb(j), !a) return H.apply(e, f), e;
                    break;
                }
            }
            return (n || h(a, o))(f, b, !p, e, ab.test(a) && pb(b.parentNode) || b), e;
        }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, 
        m(), c.sortDetached = jb(function(a) {
            return 1 & a.compareDocumentPosition(n.createElement("div"));
        }), jb(function(a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href");
        }) || kb("type|href|height|width", function(a, b, c) {
            return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);
        }), c.attributes && jb(function(a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");
        }) || kb("value", function(a, b, c) {
            return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue;
        }), jb(function(a) {
            return null == a.getAttribute("disabled");
        }) || kb(K, function(a, b, c) {
            var d;
            return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;
        }), gb;
    }(a);
    n.find = t, n.expr = t.selectors, n.expr[":"] = n.expr.pseudos, n.unique = t.uniqueSort, 
    n.text = t.getText, n.isXMLDoc = t.isXML, n.contains = t.contains;
    var u = n.expr.match.needsContext, v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, w = /^.[^:#\[\.,]*$/;
    n.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? n.find.matchesSelector(d, a) ? [ d ] : [] : n.find.matches(a, n.grep(b, function(a) {
            return 1 === a.nodeType;
        }));
    }, n.fn.extend({
        find: function(a) {
            var b, c = this.length, d = [], e = this;
            if ("string" != typeof a) return this.pushStack(n(a).filter(function() {
                for (b = 0; c > b; b++) if (n.contains(e[b], this)) return !0;
            }));
            for (b = 0; c > b; b++) n.find(a, e[b], d);
            return d = this.pushStack(c > 1 ? n.unique(d) : d), d.selector = this.selector ? this.selector + " " + a : a, 
            d;
        },
        filter: function(a) {
            return this.pushStack(x(this, a || [], !1));
        },
        not: function(a) {
            return this.pushStack(x(this, a || [], !0));
        },
        is: function(a) {
            return !!x(this, "string" == typeof a && u.test(a) ? n(a) : a || [], !1).length;
        }
    });
    var y, z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, A = n.fn.init = function(a, b) {
        var c, d;
        if (!a) return this;
        if ("string" == typeof a) {
            if (c = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [ null, a, null ] : z.exec(a), 
            !c || !c[1] && b) return !b || b.jquery ? (b || y).find(a) : this.constructor(b).find(a);
            if (c[1]) {
                if (b = b instanceof n ? b[0] : b, n.merge(this, n.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : l, !0)), 
                v.test(c[1]) && n.isPlainObject(b)) for (c in b) n.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
                return this;
            }
            return d = l.getElementById(c[2]), d && d.parentNode && (this.length = 1, this[0] = d), 
            this.context = l, this.selector = a, this;
        }
        return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : n.isFunction(a) ? "undefined" != typeof y.ready ? y.ready(a) : a(n) : (void 0 !== a.selector && (this.selector = a.selector, 
        this.context = a.context), n.makeArray(a, this));
    };
    A.prototype = n.fn, y = n(l);
    var B = /^(?:parents|prev(?:Until|All))/, C = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    n.extend({
        dir: function(a, b, c) {
            for (var d = [], e = void 0 !== c; (a = a[b]) && 9 !== a.nodeType; ) if (1 === a.nodeType) {
                if (e && n(a).is(c)) break;
                d.push(a);
            }
            return d;
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
            return c;
        }
    }), n.fn.extend({
        has: function(a) {
            var b = n(a, this), c = b.length;
            return this.filter(function() {
                for (var a = 0; c > a; a++) if (n.contains(this, b[a])) return !0;
            });
        },
        closest: function(a, b) {
            for (var c, d = 0, e = this.length, f = [], g = u.test(a) || "string" != typeof a ? n(a, b || this.context) : 0; e > d; d++) for (c = this[d]; c && c !== b; c = c.parentNode) if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && n.find.matchesSelector(c, a))) {
                f.push(c);
                break;
            }
            return this.pushStack(f.length > 1 ? n.unique(f) : f);
        },
        index: function(a) {
            return a ? "string" == typeof a ? g.call(n(a), this[0]) : g.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(a, b) {
            return this.pushStack(n.unique(n.merge(this.get(), n(a, b))));
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
        }
    }), n.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null;
        },
        parents: function(a) {
            return n.dir(a, "parentNode");
        },
        parentsUntil: function(a, b, c) {
            return n.dir(a, "parentNode", c);
        },
        next: function(a) {
            return D(a, "nextSibling");
        },
        prev: function(a) {
            return D(a, "previousSibling");
        },
        nextAll: function(a) {
            return n.dir(a, "nextSibling");
        },
        prevAll: function(a) {
            return n.dir(a, "previousSibling");
        },
        nextUntil: function(a, b, c) {
            return n.dir(a, "nextSibling", c);
        },
        prevUntil: function(a, b, c) {
            return n.dir(a, "previousSibling", c);
        },
        siblings: function(a) {
            return n.sibling((a.parentNode || {}).firstChild, a);
        },
        children: function(a) {
            return n.sibling(a.firstChild);
        },
        contents: function(a) {
            return a.contentDocument || n.merge([], a.childNodes);
        }
    }, function(a, b) {
        n.fn[a] = function(c, d) {
            var e = n.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = n.filter(d, e)), 
            this.length > 1 && (C[a] || n.unique(e), B.test(a) && e.reverse()), this.pushStack(e);
        };
    });
    var E = /\S+/g, F = {};
    n.Callbacks = function(a) {
        a = "string" == typeof a ? F[a] || G(a) : n.extend({}, a);
        var b, c, d, e, f, g, h = [], i = !a.once && [], j = function(l) {
            for (b = a.memory && l, c = !0, g = e || 0, e = 0, f = h.length, d = !0; h && f > g; g++) if (h[g].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                b = !1;
                break;
            }
            d = !1, h && (i ? i.length && j(i.shift()) : b ? h = [] : k.disable());
        }, k = {
            add: function() {
                if (h) {
                    var c = h.length;
                    !function g(b) {
                        n.each(b, function(b, c) {
                            var d = n.type(c);
                            "function" === d ? a.unique && k.has(c) || h.push(c) : c && c.length && "string" !== d && g(c);
                        });
                    }(arguments), d ? f = h.length : b && (e = c, j(b));
                }
                return this;
            },
            remove: function() {
                return h && n.each(arguments, function(a, b) {
                    for (var c; (c = n.inArray(b, h, c)) > -1; ) h.splice(c, 1), d && (f >= c && f--, 
                    g >= c && g--);
                }), this;
            },
            has: function(a) {
                return a ? n.inArray(a, h) > -1 : !(!h || !h.length);
            },
            empty: function() {
                return h = [], f = 0, this;
            },
            disable: function() {
                return h = i = b = void 0, this;
            },
            disabled: function() {
                return !h;
            },
            lock: function() {
                return i = void 0, b || k.disable(), this;
            },
            locked: function() {
                return !i;
            },
            fireWith: function(a, b) {
                return !h || c && !i || (b = b || [], b = [ a, b.slice ? b.slice() : b ], d ? i.push(b) : j(b)), 
                this;
            },
            fire: function() {
                return k.fireWith(this, arguments), this;
            },
            fired: function() {
                return !!c;
            }
        };
        return k;
    }, n.extend({
        Deferred: function(a) {
            var b = [ [ "resolve", "done", n.Callbacks("once memory"), "resolved" ], [ "reject", "fail", n.Callbacks("once memory"), "rejected" ], [ "notify", "progress", n.Callbacks("memory") ] ], c = "pending", d = {
                state: function() {
                    return c;
                },
                always: function() {
                    return e.done(arguments).fail(arguments), this;
                },
                then: function() {
                    var a = arguments;
                    return n.Deferred(function(c) {
                        n.each(b, function(b, f) {
                            var g = n.isFunction(a[b]) && a[b];
                            e[f[1]](function() {
                                var a = g && g.apply(this, arguments);
                                a && n.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [ a ] : arguments);
                            });
                        }), a = null;
                    }).promise();
                },
                promise: function(a) {
                    return null != a ? n.extend(a, d) : d;
                }
            }, e = {};
            return d.pipe = d.then, n.each(b, function(a, f) {
                var g = f[2], h = f[3];
                d[f[1]] = g.add, h && g.add(function() {
                    c = h;
                }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {
                    return e[f[0] + "With"](this === e ? d : this, arguments), this;
                }, e[f[0] + "With"] = g.fireWith;
            }), d.promise(e), a && a.call(e, e), e;
        },
        when: function(a) {
            var i, j, k, b = 0, c = d.call(arguments), e = c.length, f = 1 !== e || a && n.isFunction(a.promise) ? e : 0, g = 1 === f ? a : n.Deferred(), h = function(a, b, c) {
                return function(e) {
                    b[a] = this, c[a] = arguments.length > 1 ? d.call(arguments) : e, c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c);
                };
            };
            if (e > 1) for (i = new Array(e), j = new Array(e), k = new Array(e); e > b; b++) c[b] && n.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f;
            return f || g.resolveWith(k, c), g.promise();
        }
    });
    var H;
    n.fn.ready = function(a) {
        return n.ready.promise().done(a), this;
    }, n.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? n.readyWait++ : n.ready(!0);
        },
        ready: function(a) {
            (a === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0, a !== !0 && --n.readyWait > 0 || (H.resolveWith(l, [ n ]), 
            n.fn.triggerHandler && (n(l).triggerHandler("ready"), n(l).off("ready"))));
        }
    }), n.ready.promise = function(b) {
        return H || (H = n.Deferred(), "complete" === l.readyState ? setTimeout(n.ready) : (l.addEventListener("DOMContentLoaded", I, !1), 
        a.addEventListener("load", I, !1))), H.promise(b);
    }, n.ready.promise();
    var J = n.access = function(a, b, c, d, e, f, g) {
        var h = 0, i = a.length, j = null == c;
        if ("object" === n.type(c)) {
            e = !0;
            for (h in c) n.access(a, b, h, c[h], !0, f, g);
        } else if (void 0 !== d && (e = !0, n.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), 
        b = null) : (j = b, b = function(a, b, c) {
            return j.call(n(a), c);
        })), b)) for (;i > h; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
        return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;
    };
    n.acceptData = function(a) {
        return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;
    }, K.uid = 1, K.accepts = n.acceptData, K.prototype = {
        key: function(a) {
            if (!K.accepts(a)) return 0;
            var b = {}, c = a[this.expando];
            if (!c) {
                c = K.uid++;
                try {
                    b[this.expando] = {
                        value: c
                    }, Object.defineProperties(a, b);
                } catch (d) {
                    b[this.expando] = c, n.extend(a, b);
                }
            }
            return this.cache[c] || (this.cache[c] = {}), c;
        },
        set: function(a, b, c) {
            var d, e = this.key(a), f = this.cache[e];
            if ("string" == typeof b) f[b] = c; else if (n.isEmptyObject(f)) n.extend(this.cache[e], b); else for (d in b) f[d] = b[d];
            return f;
        },
        get: function(a, b) {
            var c = this.cache[this.key(a)];
            return void 0 === b ? c : c[b];
        },
        access: function(a, b, c) {
            var d;
            return void 0 === b || b && "string" == typeof b && void 0 === c ? (d = this.get(a, b), 
            void 0 !== d ? d : this.get(a, n.camelCase(b))) : (this.set(a, b, c), void 0 !== c ? c : b);
        },
        remove: function(a, b) {
            var c, d, e, f = this.key(a), g = this.cache[f];
            if (void 0 === b) this.cache[f] = {}; else {
                n.isArray(b) ? d = b.concat(b.map(n.camelCase)) : (e = n.camelCase(b), b in g ? d = [ b, e ] : (d = e, 
                d = d in g ? [ d ] : d.match(E) || [])), c = d.length;
                for (;c--; ) delete g[d[c]];
            }
        },
        hasData: function(a) {
            return !n.isEmptyObject(this.cache[a[this.expando]] || {});
        },
        discard: function(a) {
            a[this.expando] && delete this.cache[a[this.expando]];
        }
    };
    var L = new K(), M = new K(), N = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, O = /([A-Z])/g;
    n.extend({
        hasData: function(a) {
            return M.hasData(a) || L.hasData(a);
        },
        data: function(a, b, c) {
            return M.access(a, b, c);
        },
        removeData: function(a, b) {
            M.remove(a, b);
        },
        _data: function(a, b, c) {
            return L.access(a, b, c);
        },
        _removeData: function(a, b) {
            L.remove(a, b);
        }
    }), n.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0], g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = M.get(f), 1 === f.nodeType && !L.get(f, "hasDataAttrs"))) {
                    for (c = g.length; c--; ) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = n.camelCase(d.slice(5)), 
                    P(f, d, e[d])));
                    L.set(f, "hasDataAttrs", !0);
                }
                return e;
            }
            return "object" == typeof a ? this.each(function() {
                M.set(this, a);
            }) : J(this, function(b) {
                var c, d = n.camelCase(a);
                if (f && void 0 === b) {
                    if (c = M.get(f, a), void 0 !== c) return c;
                    if (c = M.get(f, d), void 0 !== c) return c;
                    if (c = P(f, d, void 0), void 0 !== c) return c;
                } else this.each(function() {
                    var c = M.get(this, d);
                    M.set(this, d, b), -1 !== a.indexOf("-") && void 0 !== c && M.set(this, a, b);
                });
            }, null, b, arguments.length > 1, null, !0);
        },
        removeData: function(a) {
            return this.each(function() {
                M.remove(this, a);
            });
        }
    }), n.extend({
        queue: function(a, b, c) {
            var d;
            return a ? (b = (b || "fx") + "queue", d = L.get(a, b), c && (!d || n.isArray(c) ? d = L.access(a, b, n.makeArray(c)) : d.push(c)), 
            d || []) : void 0;
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = n.queue(a, b), d = c.length, e = c.shift(), f = n._queueHooks(a, b), g = function() {
                n.dequeue(a, b);
            };
            "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), 
            delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return L.get(a, c) || L.access(a, c, {
                empty: n.Callbacks("once memory").add(function() {
                    L.remove(a, [ b + "queue", c ]);
                })
            });
        }
    }), n.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? n.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                var c = n.queue(this, a, b);
                n._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && n.dequeue(this, a);
            });
        },
        dequeue: function(a) {
            return this.each(function() {
                n.dequeue(this, a);
            });
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", []);
        },
        promise: function(a, b) {
            var c, d = 1, e = n.Deferred(), f = this, g = this.length, h = function() {
                --d || e.resolveWith(f, [ f ]);
            };
            for ("string" != typeof a && (b = a, a = void 0), a = a || "fx"; g--; ) c = L.get(f[g], a + "queueHooks"), 
            c && c.empty && (d++, c.empty.add(h));
            return h(), e.promise(b);
        }
    });
    var Q = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, R = [ "Top", "Right", "Bottom", "Left" ], S = function(a, b) {
        return a = b || a, "none" === n.css(a, "display") || !n.contains(a.ownerDocument, a);
    }, T = /^(?:checkbox|radio)$/i;
    !function() {
        var a = l.createDocumentFragment(), b = a.appendChild(l.createElement("div")), c = l.createElement("input");
        c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), 
        b.appendChild(c), k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, 
        b.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue;
    }();
    var U = "undefined";
    k.focusinBubbles = "onfocusin" in a;
    var V = /^key/, W = /^(?:mouse|pointer|contextmenu)|click/, X = /^(?:focusinfocus|focusoutblur)$/, Y = /^([^.]*)(?:\.(.+)|)$/;
    n.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.get(a);
            if (r) for (c.handler && (f = c, c = f.handler, e = f.selector), c.guid || (c.guid = n.guid++), 
            (i = r.events) || (i = r.events = {}), (g = r.handle) || (g = r.handle = function(b) {
                return typeof n !== U && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0;
            }), b = (b || "").match(E) || [ "" ], j = b.length; j--; ) h = Y.exec(b[j]) || [], 
            o = q = h[1], p = (h[2] || "").split(".").sort(), o && (l = n.event.special[o] || {}, 
            o = (e ? l.delegateType : l.bindType) || o, l = n.event.special[o] || {}, k = n.extend({
                type: o,
                origType: q,
                data: d,
                handler: c,
                guid: c.guid,
                selector: e,
                needsContext: e && n.expr.match.needsContext.test(e),
                namespace: p.join(".")
            }, f), (m = i[o]) || (m = i[o] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, p, g) !== !1 || a.addEventListener && a.addEventListener(o, g, !1)), 
            l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), 
            n.event.global[o] = !0);
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.hasData(a) && L.get(a);
            if (r && (i = r.events)) {
                for (b = (b || "").match(E) || [ "" ], j = b.length; j--; ) if (h = Y.exec(b[j]) || [], 
                o = q = h[1], p = (h[2] || "").split(".").sort(), o) {
                    for (l = n.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, m = i[o] || [], 
                    h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length; f--; ) k = m[f], 
                    !e && q !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), 
                    k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
                    g && !m.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || n.removeEvent(a, o, r.handle), 
                    delete i[o]);
                } else for (o in i) n.event.remove(a, o + b[j], c, d, !0);
                n.isEmptyObject(i) && (delete r.handle, L.remove(a, "events"));
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, k, m, o, p = [ d || l ], q = j.call(b, "type") ? b.type : b, r = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (g = h = d = d || l, 3 !== d.nodeType && 8 !== d.nodeType && !X.test(q + n.event.triggered) && (q.indexOf(".") >= 0 && (r = q.split("."), 
            q = r.shift(), r.sort()), k = q.indexOf(":") < 0 && "on" + q, b = b[n.expando] ? b : new n.Event(q, "object" == typeof b && b), 
            b.isTrigger = e ? 2 : 3, b.namespace = r.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + r.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
            b.result = void 0, b.target || (b.target = d), c = null == c ? [ b ] : n.makeArray(c, [ b ]), 
            o = n.event.special[q] || {}, e || !o.trigger || o.trigger.apply(d, c) !== !1)) {
                if (!e && !o.noBubble && !n.isWindow(d)) {
                    for (i = o.delegateType || q, X.test(i + q) || (g = g.parentNode); g; g = g.parentNode) p.push(g), 
                    h = g;
                    h === (d.ownerDocument || l) && p.push(h.defaultView || h.parentWindow || a);
                }
                for (f = 0; (g = p[f++]) && !b.isPropagationStopped(); ) b.type = f > 1 ? i : o.bindType || q, 
                m = (L.get(g, "events") || {})[b.type] && L.get(g, "handle"), m && m.apply(g, c), 
                m = k && g[k], m && m.apply && n.acceptData(g) && (b.result = m.apply(g, c), b.result === !1 && b.preventDefault());
                return b.type = q, e || b.isDefaultPrevented() || o._default && o._default.apply(p.pop(), c) !== !1 || !n.acceptData(d) || k && n.isFunction(d[q]) && !n.isWindow(d) && (h = d[k], 
                h && (d[k] = null), n.event.triggered = q, d[q](), n.event.triggered = void 0, h && (d[k] = h)), 
                b.result;
            }
        },
        dispatch: function(a) {
            a = n.event.fix(a);
            var b, c, e, f, g, h = [], i = d.call(arguments), j = (L.get(this, "events") || {})[a.type] || [], k = n.event.special[a.type] || {};
            if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) {
                for (h = n.event.handlers.call(this, a, j), b = 0; (f = h[b++]) && !a.isPropagationStopped(); ) for (a.currentTarget = f.elem, 
                c = 0; (g = f.handlers[c++]) && !a.isImmediatePropagationStopped(); ) (!a.namespace_re || a.namespace_re.test(g.namespace)) && (a.handleObj = g, 
                a.data = g.data, e = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), 
                void 0 !== e && (a.result = e) === !1 && (a.preventDefault(), a.stopPropagation()));
                return k.postDispatch && k.postDispatch.call(this, a), a.result;
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [], h = b.delegateCount, i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type)) for (;i !== this; i = i.parentNode || this) if (i.disabled !== !0 || "click" !== a.type) {
                for (d = [], c = 0; h > c; c++) f = b[c], e = f.selector + " ", void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) >= 0 : n.find(e, this, null, [ i ]).length), 
                d[e] && d.push(f);
                d.length && g.push({
                    elem: i,
                    handlers: d
                });
            }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }), g;
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), 
                a;
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {
                var c, d, e, f = b.button;
                return null == a.pageX && null != b.clientX && (c = a.target.ownerDocument || l, 
                d = c.documentElement, e = c.body, a.pageX = b.clientX + (d && d.scrollLeft || e && e.scrollLeft || 0) - (d && d.clientLeft || e && e.clientLeft || 0), 
                a.pageY = b.clientY + (d && d.scrollTop || e && e.scrollTop || 0) - (d && d.clientTop || e && e.clientTop || 0)), 
                a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a;
            }
        },
        fix: function(a) {
            if (a[n.expando]) return a;
            var b, c, d, e = a.type, f = a, g = this.fixHooks[e];
            for (g || (this.fixHooks[e] = g = W.test(e) ? this.mouseHooks : V.test(e) ? this.keyHooks : {}), 
            d = g.props ? this.props.concat(g.props) : this.props, a = new n.Event(f), b = d.length; b--; ) c = d[b], 
            a[c] = f[c];
            return a.target || (a.target = l), 3 === a.target.nodeType && (a.target = a.target.parentNode), 
            g.filter ? g.filter(a, f) : a;
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    return this !== _() && this.focus ? (this.focus(), !1) : void 0;
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === _() && this.blur ? (this.blur(), !1) : void 0;
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return "checkbox" === this.type && this.click && n.nodeName(this, "input") ? (this.click(), 
                    !1) : void 0;
                },
                _default: function(a) {
                    return n.nodeName(a.target, "a");
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = n.extend(new n.Event(), c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? n.event.trigger(e, null, b) : n.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault();
        }
    }, n.removeEvent = function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1);
    }, n.Event = function(a, b) {
        return this instanceof n.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, 
        this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? Z : $) : this.type = a, 
        b && n.extend(this, b), this.timeStamp = a && a.timeStamp || n.now(), void (this[n.expando] = !0)) : new n.Event(a, b);
    }, n.Event.prototype = {
        isDefaultPrevented: $,
        isPropagationStopped: $,
        isImmediatePropagationStopped: $,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = Z, a && a.preventDefault && a.preventDefault();
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = Z, a && a.stopPropagation && a.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = Z, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), 
            this.stopPropagation();
        }
    }, n.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        n.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this, e = a.relatedTarget, f = a.handleObj;
                return (!e || e !== d && !n.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), 
                a.type = b), c;
            }
        };
    }), k.focusinBubbles || n.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            n.event.simulate(b, a.target, n.event.fix(a), !0);
        };
        n.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this, e = L.access(d, b);
                e || d.addEventListener(a, c, !0), L.access(d, b, (e || 0) + 1);
            },
            teardown: function() {
                var d = this.ownerDocument || this, e = L.access(d, b) - 1;
                e ? L.access(d, b, e) : (d.removeEventListener(a, c, !0), L.remove(d, b));
            }
        };
    }), n.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = void 0);
                for (g in a) this.on(g, b, c, a[g], e);
                return this;
            }
            if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, 
            c = void 0) : (d = c, c = b, b = void 0)), d === !1) d = $; else if (!d) return this;
            return 1 === e && (f = d, d = function(a) {
                return n().off(a), f.apply(this, arguments);
            }, d.guid = f.guid || (f.guid = n.guid++)), this.each(function() {
                n.event.add(this, a, d, c, b);
            });
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1);
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d = a.handleObj, n(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), 
            this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this;
            }
            return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = $), 
            this.each(function() {
                n.event.remove(this, a, c, b);
            });
        },
        trigger: function(a, b) {
            return this.each(function() {
                n.event.trigger(a, b, this);
            });
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? n.event.trigger(a, b, c, !0) : void 0;
        }
    });
    var ab = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, bb = /<([\w:]+)/, cb = /<|&#?\w+;/, db = /<(?:script|style|link)/i, eb = /checked\s*(?:[^=]|=\s*.checked.)/i, fb = /^$|\/(?:java|ecma)script/i, gb = /^true\/(.*)/, hb = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, ib = {
        option: [ 1, "<select multiple='multiple'>", "</select>" ],
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    ib.optgroup = ib.option, ib.tbody = ib.tfoot = ib.colgroup = ib.caption = ib.thead, 
    ib.th = ib.td, n.extend({
        clone: function(a, b, c) {
            var d, e, f, g, h = a.cloneNode(!0), i = n.contains(a.ownerDocument, a);
            if (!(k.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || n.isXMLDoc(a))) for (g = ob(h), 
            f = ob(a), d = 0, e = f.length; e > d; d++) pb(f[d], g[d]);
            if (b) if (c) for (f = f || ob(a), g = g || ob(h), d = 0, e = f.length; e > d; d++) nb(f[d], g[d]); else nb(a, h);
            return g = ob(h, "script"), g.length > 0 && mb(g, !i && ob(a, "script")), h;
        },
        buildFragment: function(a, b, c, d) {
            for (var e, f, g, h, i, j, k = b.createDocumentFragment(), l = [], m = 0, o = a.length; o > m; m++) if (e = a[m], 
            e || 0 === e) if ("object" === n.type(e)) n.merge(l, e.nodeType ? [ e ] : e); else if (cb.test(e)) {
                for (f = f || k.appendChild(b.createElement("div")), g = (bb.exec(e) || [ "", "" ])[1].toLowerCase(), 
                h = ib[g] || ib._default, f.innerHTML = h[1] + e.replace(ab, "<$1></$2>") + h[2], 
                j = h[0]; j--; ) f = f.lastChild;
                n.merge(l, f.childNodes), f = k.firstChild, f.textContent = "";
            } else l.push(b.createTextNode(e));
            for (k.textContent = "", m = 0; e = l[m++]; ) if ((!d || -1 === n.inArray(e, d)) && (i = n.contains(e.ownerDocument, e), 
            f = ob(k.appendChild(e), "script"), i && mb(f), c)) for (j = 0; e = f[j++]; ) fb.test(e.type || "") && c.push(e);
            return k;
        },
        cleanData: function(a) {
            for (var b, c, d, e, f = n.event.special, g = 0; void 0 !== (c = a[g]); g++) {
                if (n.acceptData(c) && (e = c[L.expando], e && (b = L.cache[e]))) {
                    if (b.events) for (d in b.events) f[d] ? n.event.remove(c, d) : n.removeEvent(c, d, b.handle);
                    L.cache[e] && delete L.cache[e];
                }
                delete M.cache[c[M.expando]];
            }
        }
    }), n.fn.extend({
        text: function(a) {
            return J(this, function(a) {
                return void 0 === a ? n.text(this) : this.empty().each(function() {
                    (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = a);
                });
            }, null, a, arguments.length);
        },
        append: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = jb(this, a);
                    b.appendChild(a);
                }
            });
        },
        prepend: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = jb(this, a);
                    b.insertBefore(a, b.firstChild);
                }
            });
        },
        before: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this);
            });
        },
        after: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);
            });
        },
        remove: function(a, b) {
            for (var c, d = a ? n.filter(a, this) : this, e = 0; null != (c = d[e]); e++) b || 1 !== c.nodeType || n.cleanData(ob(c)), 
            c.parentNode && (b && n.contains(c.ownerDocument, c) && mb(ob(c, "script")), c.parentNode.removeChild(c));
            return this;
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) 1 === a.nodeType && (n.cleanData(ob(a, !1)), 
            a.textContent = "");
            return this;
        },
        clone: function(a, b) {
            return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function() {
                return n.clone(this, a, b);
            });
        },
        html: function(a) {
            return J(this, function(a) {
                var b = this[0] || {}, c = 0, d = this.length;
                if (void 0 === a && 1 === b.nodeType) return b.innerHTML;
                if ("string" == typeof a && !db.test(a) && !ib[(bb.exec(a) || [ "", "" ])[1].toLowerCase()]) {
                    a = a.replace(ab, "<$1></$2>");
                    try {
                        for (;d > c; c++) b = this[c] || {}, 1 === b.nodeType && (n.cleanData(ob(b, !1)), 
                        b.innerHTML = a);
                        b = 0;
                    } catch (e) {}
                }
                b && this.empty().append(a);
            }, null, a, arguments.length);
        },
        replaceWith: function() {
            var a = arguments[0];
            return this.domManip(arguments, function(b) {
                a = this.parentNode, n.cleanData(ob(this)), a && a.replaceChild(b, this);
            }), a && (a.length || a.nodeType) ? this : this.remove();
        },
        detach: function(a) {
            return this.remove(a, !0);
        },
        domManip: function(a, b) {
            a = e.apply([], a);
            var c, d, f, g, h, i, j = 0, l = this.length, m = this, o = l - 1, p = a[0], q = n.isFunction(p);
            if (q || l > 1 && "string" == typeof p && !k.checkClone && eb.test(p)) return this.each(function(c) {
                var d = m.eq(c);
                q && (a[0] = p.call(this, c, d.html())), d.domManip(a, b);
            });
            if (l && (c = n.buildFragment(a, this[0].ownerDocument, !1, this), d = c.firstChild, 
            1 === c.childNodes.length && (c = d), d)) {
                for (f = n.map(ob(c, "script"), kb), g = f.length; l > j; j++) h = c, j !== o && (h = n.clone(h, !0, !0), 
                g && n.merge(f, ob(h, "script"))), b.call(this[j], h, j);
                if (g) for (i = f[f.length - 1].ownerDocument, n.map(f, lb), j = 0; g > j; j++) h = f[j], 
                fb.test(h.type || "") && !L.access(h, "globalEval") && n.contains(i, h) && (h.src ? n._evalUrl && n._evalUrl(h.src) : n.globalEval(h.textContent.replace(hb, "")));
            }
            return this;
        }
    }), n.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        n.fn[a] = function(a) {
            for (var c, d = [], e = n(a), g = e.length - 1, h = 0; g >= h; h++) c = h === g ? this : this.clone(!0), 
            n(e[h])[b](c), f.apply(d, c.get());
            return this.pushStack(d);
        };
    });
    var qb, rb = {}, ub = /^margin/, vb = new RegExp("^(" + Q + ")(?!px)[a-z%]+$", "i"), wb = function(b) {
        return b.ownerDocument.defaultView.opener ? b.ownerDocument.defaultView.getComputedStyle(b, null) : a.getComputedStyle(b, null);
    };
    !function() {
        function g() {
            f.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", 
            f.innerHTML = "", d.appendChild(e);
            var g = a.getComputedStyle(f, null);
            b = "1%" !== g.top, c = "4px" === g.width, d.removeChild(e);
        }
        var b, c, d = l.documentElement, e = l.createElement("div"), f = l.createElement("div");
        f.style && (f.style.backgroundClip = "content-box", f.cloneNode(!0).style.backgroundClip = "", 
        k.clearCloneStyle = "content-box" === f.style.backgroundClip, e.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute", 
        e.appendChild(f), a.getComputedStyle && n.extend(k, {
            pixelPosition: function() {
                return g(), b;
            },
            boxSizingReliable: function() {
                return null == c && g(), c;
            },
            reliableMarginRight: function() {
                var b, c = f.appendChild(l.createElement("div"));
                return c.style.cssText = f.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", 
                c.style.marginRight = c.style.width = "0", f.style.width = "1px", d.appendChild(e), 
                b = !parseFloat(a.getComputedStyle(c, null).marginRight), d.removeChild(e), f.removeChild(c), 
                b;
            }
        }));
    }(), n.swap = function(a, b, c, d) {
        var e, f, g = {};
        for (f in b) g[f] = a.style[f], a.style[f] = b[f];
        e = c.apply(a, d || []);
        for (f in b) a.style[f] = g[f];
        return e;
    };
    var zb = /^(none|table(?!-c[ea]).+)/, Ab = new RegExp("^(" + Q + ")(.*)$", "i"), Bb = new RegExp("^([+-])=(" + Q + ")", "i"), Cb = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, Db = {
        letterSpacing: "0",
        fontWeight: "400"
    }, Eb = [ "Webkit", "O", "Moz", "ms" ];
    n.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = xb(a, "opacity");
                        return "" === c ? "1" : c;
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": "cssFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = n.camelCase(b), i = a.style;
                return b = n.cssProps[h] || (n.cssProps[h] = Fb(i, h)), g = n.cssHooks[b] || n.cssHooks[h], 
                void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c, 
                "string" === f && (e = Bb.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(n.css(a, b)), 
                f = "number"), void (null != c && c === c && ("number" !== f || n.cssNumber[h] || (c += "px"), 
                k.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), 
                g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c))));
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = n.camelCase(b);
            return b = n.cssProps[h] || (n.cssProps[h] = Fb(a.style, h)), g = n.cssHooks[b] || n.cssHooks[h], 
            g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = xb(a, b, d)), "normal" === e && b in Db && (e = Db[b]), 
            "" === c || c ? (f = parseFloat(e), c === !0 || n.isNumeric(f) ? f || 0 : e) : e;
        }
    }), n.each([ "height", "width" ], function(a, b) {
        n.cssHooks[b] = {
            get: function(a, c, d) {
                return c ? zb.test(n.css(a, "display")) && 0 === a.offsetWidth ? n.swap(a, Cb, function() {
                    return Ib(a, b, d);
                }) : Ib(a, b, d) : void 0;
            },
            set: function(a, c, d) {
                var e = d && wb(a);
                return Gb(a, c, d ? Hb(a, b, d, "border-box" === n.css(a, "boxSizing", !1, e), e) : 0);
            }
        };
    }), n.cssHooks.marginRight = yb(k.reliableMarginRight, function(a, b) {
        return b ? n.swap(a, {
            display: "inline-block"
        }, xb, [ a, "marginRight" ]) : void 0;
    }), n.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        n.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [ c ]; 4 > d; d++) e[a + R[d] + b] = f[d] || f[d - 2] || f[0];
                return e;
            }
        }, ub.test(a) || (n.cssHooks[a + b].set = Gb);
    }), n.fn.extend({
        css: function(a, b) {
            return J(this, function(a, b, c) {
                var d, e, f = {}, g = 0;
                if (n.isArray(b)) {
                    for (d = wb(a), e = b.length; e > g; g++) f[b[g]] = n.css(a, b[g], !1, d);
                    return f;
                }
                return void 0 !== c ? n.style(a, b, c) : n.css(a, b);
            }, a, b, arguments.length > 1);
        },
        show: function() {
            return Jb(this, !0);
        },
        hide: function() {
            return Jb(this);
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                S(this) ? n(this).show() : n(this).hide();
            });
        }
    }), n.Tween = Kb, Kb.prototype = {
        constructor: Kb,
        init: function(a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), 
            this.end = d, this.unit = f || (n.cssNumber[c] ? "" : "px");
        },
        cur: function() {
            var a = Kb.propHooks[this.prop];
            return a && a.get ? a.get(this) : Kb.propHooks._default.get(this);
        },
        run: function(a) {
            var b, c = Kb.propHooks[this.prop];
            return this.pos = b = this.options.duration ? n.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : a, 
            this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
            c && c.set ? c.set(this) : Kb.propHooks._default.set(this), this;
        }
    }, Kb.prototype.init.prototype = Kb.prototype, Kb.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = n.css(a.elem, a.prop, ""), 
                b && "auto" !== b ? b : 0) : a.elem[a.prop];
            },
            set: function(a) {
                n.fx.step[a.prop] ? n.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[n.cssProps[a.prop]] || n.cssHooks[a.prop]) ? n.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now;
            }
        }
    }, Kb.propHooks.scrollTop = Kb.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);
        }
    }, n.easing = {
        linear: function(a) {
            return a;
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2;
        }
    }, n.fx = Kb.prototype.init, n.fx.step = {};
    var Lb, Mb, Nb = /^(?:toggle|show|hide)$/, Ob = new RegExp("^(?:([+-])=|)(" + Q + ")([a-z%]*)$", "i"), Pb = /queueHooks$/, Qb = [ Vb ], Rb = {
        "*": [ function(a, b) {
            var c = this.createTween(a, b), d = c.cur(), e = Ob.exec(b), f = e && e[3] || (n.cssNumber[a] ? "" : "px"), g = (n.cssNumber[a] || "px" !== f && +d) && Ob.exec(n.css(c.elem, a)), h = 1, i = 20;
            if (g && g[3] !== f) {
                f = f || g[3], e = e || [], g = +d || 1;
                do h = h || ".5", g /= h, n.style(c.elem, a, g + f); while (h !== (h = c.cur() / d) && 1 !== h && --i);
            }
            return e && (g = c.start = +g || +d || 0, c.unit = f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]), 
            c;
        } ]
    };
    n.Animation = n.extend(Xb, {
        tweener: function(a, b) {
            n.isFunction(a) ? (b = a, a = [ "*" ]) : a = a.split(" ");
            for (var c, d = 0, e = a.length; e > d; d++) c = a[d], Rb[c] = Rb[c] || [], Rb[c].unshift(b);
        },
        prefilter: function(a, b) {
            b ? Qb.unshift(a) : Qb.push(a);
        }
    }), n.speed = function(a, b, c) {
        var d = a && "object" == typeof a ? n.extend({}, a) : {
            complete: c || !c && b || n.isFunction(a) && a,
            duration: a,
            easing: c && b || b && !n.isFunction(b) && b
        };
        return d.duration = n.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in n.fx.speeds ? n.fx.speeds[d.duration] : n.fx.speeds._default, 
        (null == d.queue || d.queue === !0) && (d.queue = "fx"), d.old = d.complete, d.complete = function() {
            n.isFunction(d.old) && d.old.call(this), d.queue && n.dequeue(this, d.queue);
        }, d;
    }, n.fn.extend({
        fadeTo: function(a, b, c, d) {
            return this.filter(S).css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d);
        },
        animate: function(a, b, c, d) {
            var e = n.isEmptyObject(a), f = n.speed(b, c, d), g = function() {
                var b = Xb(this, n.extend({}, a), f);
                (e || L.get(this, "finish")) && b.stop(!0);
            };
            return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);
        },
        stop: function(a, b, c) {
            var d = function(a) {
                var b = a.stop;
                delete a.stop, b(c);
            };
            return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), 
            this.each(function() {
                var b = !0, e = null != a && a + "queueHooks", f = n.timers, g = L.get(this);
                if (e) g[e] && g[e].stop && d(g[e]); else for (e in g) g[e] && g[e].stop && Pb.test(e) && d(g[e]);
                for (e = f.length; e--; ) f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), 
                b = !1, f.splice(e, 1));
                (b || !c) && n.dequeue(this, a);
            });
        },
        finish: function(a) {
            return a !== !1 && (a = a || "fx"), this.each(function() {
                var b, c = L.get(this), d = c[a + "queue"], e = c[a + "queueHooks"], f = n.timers, g = d ? d.length : 0;
                for (c.finish = !0, n.queue(this, a, []), e && e.stop && e.stop.call(this, !0), 
                b = f.length; b--; ) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), 
                f.splice(b, 1));
                for (b = 0; g > b; b++) d[b] && d[b].finish && d[b].finish.call(this);
                delete c.finish;
            });
        }
    }), n.each([ "toggle", "show", "hide" ], function(a, b) {
        var c = n.fn[b];
        n.fn[b] = function(a, d, e) {
            return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(Tb(b, !0), a, d, e);
        };
    }), n.each({
        slideDown: Tb("show"),
        slideUp: Tb("hide"),
        slideToggle: Tb("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        n.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d);
        };
    }), n.timers = [], n.fx.tick = function() {
        var a, b = 0, c = n.timers;
        for (Lb = n.now(); b < c.length; b++) a = c[b], a() || c[b] !== a || c.splice(b--, 1);
        c.length || n.fx.stop(), Lb = void 0;
    }, n.fx.timer = function(a) {
        n.timers.push(a), a() ? n.fx.start() : n.timers.pop();
    }, n.fx.interval = 13, n.fx.start = function() {
        Mb || (Mb = setInterval(n.fx.tick, n.fx.interval));
    }, n.fx.stop = function() {
        clearInterval(Mb), Mb = null;
    }, n.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, n.fn.delay = function(a, b) {
        return a = n.fx ? n.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
            var d = setTimeout(b, a);
            c.stop = function() {
                clearTimeout(d);
            };
        });
    }, function() {
        var a = l.createElement("input"), b = l.createElement("select"), c = b.appendChild(l.createElement("option"));
        a.type = "checkbox", k.checkOn = "" !== a.value, k.optSelected = c.selected, b.disabled = !0, 
        k.optDisabled = !c.disabled, a = l.createElement("input"), a.value = "t", a.type = "radio", 
        k.radioValue = "t" === a.value;
    }();
    var Yb, Zb, $b = n.expr.attrHandle;
    n.fn.extend({
        attr: function(a, b) {
            return J(this, n.attr, a, b, arguments.length > 1);
        },
        removeAttr: function(a) {
            return this.each(function() {
                n.removeAttr(this, a);
            });
        }
    }), n.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            return a && 3 !== f && 8 !== f && 2 !== f ? typeof a.getAttribute === U ? n.prop(a, b, c) : (1 === f && n.isXMLDoc(a) || (b = b.toLowerCase(), 
            d = n.attrHooks[b] || (n.expr.match.bool.test(b) ? Zb : Yb)), void 0 === c ? d && "get" in d && null !== (e = d.get(a, b)) ? e : (e = n.find.attr(a, b), 
            null == e ? void 0 : e) : null !== c ? d && "set" in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""), 
            c) : void n.removeAttr(a, b)) : void 0;
        },
        removeAttr: function(a, b) {
            var c, d, e = 0, f = b && b.match(E);
            if (f && 1 === a.nodeType) for (;c = f[e++]; ) d = n.propFix[c] || c, n.expr.match.bool.test(c) && (a[d] = !1), 
            a.removeAttribute(c);
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!k.radioValue && "radio" === b && n.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b;
                    }
                }
            }
        }
    }), Zb = {
        set: function(a, b, c) {
            return b === !1 ? n.removeAttr(a, c) : a.setAttribute(c, c), c;
        }
    }, n.each(n.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = $b[b] || n.find.attr;
        $b[b] = function(a, b, d) {
            var e, f;
            return d || (f = $b[b], $b[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, 
            $b[b] = f), e;
        };
    });
    var _b = /^(?:input|select|textarea|button)$/i;
    n.fn.extend({
        prop: function(a, b) {
            return J(this, n.prop, a, b, arguments.length > 1);
        },
        removeProp: function(a) {
            return this.each(function() {
                delete this[n.propFix[a] || a];
            });
        }
    }), n.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(a, b, c) {
            var d, e, f, g = a.nodeType;
            return a && 3 !== g && 8 !== g && 2 !== g ? (f = 1 !== g || !n.isXMLDoc(a), f && (b = n.propFix[b] || b, 
            e = n.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b]) : void 0;
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    return a.hasAttribute("tabindex") || _b.test(a.nodeName) || a.href ? a.tabIndex : -1;
                }
            }
        }
    }), k.optSelected || (n.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && b.parentNode && b.parentNode.selectedIndex, null;
        }
    }), n.each([ "tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable" ], function() {
        n.propFix[this.toLowerCase()] = this;
    });
    var ac = /[\t\r\n\f]/g;
    n.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h = "string" == typeof a && a, i = 0, j = this.length;
            if (n.isFunction(a)) return this.each(function(b) {
                n(this).addClass(a.call(this, b, this.className));
            });
            if (h) for (b = (a || "").match(E) || []; j > i; i++) if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ac, " ") : " ")) {
                for (f = 0; e = b[f++]; ) d.indexOf(" " + e + " ") < 0 && (d += e + " ");
                g = n.trim(d), c.className !== g && (c.className = g);
            }
            return this;
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h = 0 === arguments.length || "string" == typeof a && a, i = 0, j = this.length;
            if (n.isFunction(a)) return this.each(function(b) {
                n(this).removeClass(a.call(this, b, this.className));
            });
            if (h) for (b = (a || "").match(E) || []; j > i; i++) if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ac, " ") : "")) {
                for (f = 0; e = b[f++]; ) for (;d.indexOf(" " + e + " ") >= 0; ) d = d.replace(" " + e + " ", " ");
                g = a ? n.trim(d) : "", c.className !== g && (c.className = g);
            }
            return this;
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : this.each(n.isFunction(a) ? function(c) {
                n(this).toggleClass(a.call(this, c, this.className, b), b);
            } : function() {
                if ("string" === c) for (var b, d = 0, e = n(this), f = a.match(E) || []; b = f[d++]; ) e.hasClass(b) ? e.removeClass(b) : e.addClass(b); else (c === U || "boolean" === c) && (this.className && L.set(this, "__className__", this.className), 
                this.className = this.className || a === !1 ? "" : L.get(this, "__className__") || "");
            });
        },
        hasClass: function(a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++) if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(ac, " ").indexOf(b) >= 0) return !0;
            return !1;
        }
    });
    var bc = /\r/g;
    n.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0];
            return arguments.length ? (d = n.isFunction(a), this.each(function(c) {
                var e;
                1 === this.nodeType && (e = d ? a.call(this, c, n(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : n.isArray(e) && (e = n.map(e, function(a) {
                    return null == a ? "" : a + "";
                })), b = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e));
            })) : e ? (b = n.valHooks[e.type] || n.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, 
            "string" == typeof c ? c.replace(bc, "") : null == c ? "" : c)) : void 0;
        }
    }), n.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = n.find.attr(a, "value");
                    return null != b ? b : n.trim(n.text(a));
                }
            },
            select: {
                get: function(a) {
                    for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++) if (c = d[i], 
                    !(!c.selected && i !== e || (k.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && n.nodeName(c.parentNode, "optgroup"))) {
                        if (b = n(c).val(), f) return b;
                        g.push(b);
                    }
                    return g;
                },
                set: function(a, b) {
                    for (var c, d, e = a.options, f = n.makeArray(b), g = e.length; g--; ) d = e[g], 
                    (d.selected = n.inArray(d.value, f) >= 0) && (c = !0);
                    return c || (a.selectedIndex = -1), f;
                }
            }
        }
    }), n.each([ "radio", "checkbox" ], function() {
        n.valHooks[this] = {
            set: function(a, b) {
                return n.isArray(b) ? a.checked = n.inArray(n(a).val(), b) >= 0 : void 0;
            }
        }, k.checkOn || (n.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" : a.value;
        });
    }), n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        n.fn[b] = function(a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);
        };
    }), n.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a);
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c);
        },
        unbind: function(a, b) {
            return this.off(a, null, b);
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d);
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);
        }
    });
    var cc = n.now(), dc = /\?/;
    n.parseJSON = function(a) {
        return JSON.parse(a + "");
    }, n.parseXML = function(a) {
        var b, c;
        if (!a || "string" != typeof a) return null;
        try {
            c = new DOMParser(), b = c.parseFromString(a, "text/xml");
        } catch (d) {
            b = void 0;
        }
        return (!b || b.getElementsByTagName("parsererror").length) && n.error("Invalid XML: " + a), 
        b;
    };
    var ec = /#.*$/, fc = /([?&])_=[^&]*/, gc = /^(.*?):[ \t]*([^\r\n]*)$/gm, hc = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, ic = /^(?:GET|HEAD)$/, jc = /^\/\//, kc = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, lc = {}, mc = {}, nc = "*/".concat("*"), oc = a.location.href, pc = kc.exec(oc.toLowerCase()) || [];
    n.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: oc,
            type: "GET",
            isLocal: hc.test(pc[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": nc,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": n.parseJSON,
                "text xml": n.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? sc(sc(a, n.ajaxSettings), b) : sc(n.ajaxSettings, a);
        },
        ajaxPrefilter: qc(lc),
        ajaxTransport: qc(mc),
        ajax: function(a, b) {
            function x(a, b, f, h) {
                var j, r, s, u, w, x = b;
                2 !== t && (t = 2, g && clearTimeout(g), c = void 0, e = h || "", v.readyState = a > 0 ? 4 : 0, 
                j = a >= 200 && 300 > a || 304 === a, f && (u = tc(k, v, f)), u = uc(k, u, v, j), 
                j ? (k.ifModified && (w = v.getResponseHeader("Last-Modified"), w && (n.lastModified[d] = w), 
                w = v.getResponseHeader("etag"), w && (n.etag[d] = w)), 204 === a || "HEAD" === k.type ? x = "nocontent" : 304 === a ? x = "notmodified" : (x = u.state, 
                r = u.data, s = u.error, j = !s)) : (s = x, (a || !x) && (x = "error", 0 > a && (a = 0))), 
                v.status = a, v.statusText = (b || x) + "", j ? o.resolveWith(l, [ r, x, v ]) : o.rejectWith(l, [ v, x, s ]), 
                v.statusCode(q), q = void 0, i && m.trigger(j ? "ajaxSuccess" : "ajaxError", [ v, k, j ? r : s ]), 
                p.fireWith(l, [ v, x ]), i && (m.trigger("ajaxComplete", [ v, k ]), --n.active || n.event.trigger("ajaxStop")));
            }
            "object" == typeof a && (b = a, a = void 0), b = b || {};
            var c, d, e, f, g, h, i, j, k = n.ajaxSetup({}, b), l = k.context || k, m = k.context && (l.nodeType || l.jquery) ? n(l) : n.event, o = n.Deferred(), p = n.Callbacks("once memory"), q = k.statusCode || {}, r = {}, s = {}, t = 0, u = "canceled", v = {
                readyState: 0,
                getResponseHeader: function(a) {
                    var b;
                    if (2 === t) {
                        if (!f) for (f = {}; b = gc.exec(e); ) f[b[1].toLowerCase()] = b[2];
                        b = f[a.toLowerCase()];
                    }
                    return null == b ? null : b;
                },
                getAllResponseHeaders: function() {
                    return 2 === t ? e : null;
                },
                setRequestHeader: function(a, b) {
                    var c = a.toLowerCase();
                    return t || (a = s[c] = s[c] || a, r[a] = b), this;
                },
                overrideMimeType: function(a) {
                    return t || (k.mimeType = a), this;
                },
                statusCode: function(a) {
                    var b;
                    if (a) if (2 > t) for (b in a) q[b] = [ q[b], a[b] ]; else v.always(a[v.status]);
                    return this;
                },
                abort: function(a) {
                    var b = a || u;
                    return c && c.abort(b), x(0, b), this;
                }
            };
            if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, k.url = ((a || k.url || oc) + "").replace(ec, "").replace(jc, pc[1] + "//"), 
            k.type = b.method || b.type || k.method || k.type, k.dataTypes = n.trim(k.dataType || "*").toLowerCase().match(E) || [ "" ], 
            null == k.crossDomain && (h = kc.exec(k.url.toLowerCase()), k.crossDomain = !(!h || h[1] === pc[1] && h[2] === pc[2] && (h[3] || ("http:" === h[1] ? "80" : "443")) === (pc[3] || ("http:" === pc[1] ? "80" : "443")))), 
            k.data && k.processData && "string" != typeof k.data && (k.data = n.param(k.data, k.traditional)), 
            rc(lc, k, b, v), 2 === t) return v;
            i = n.event && k.global, i && 0 === n.active++ && n.event.trigger("ajaxStart"), 
            k.type = k.type.toUpperCase(), k.hasContent = !ic.test(k.type), d = k.url, k.hasContent || (k.data && (d = k.url += (dc.test(d) ? "&" : "?") + k.data, 
            delete k.data), k.cache === !1 && (k.url = fc.test(d) ? d.replace(fc, "$1_=" + cc++) : d + (dc.test(d) ? "&" : "?") + "_=" + cc++)), 
            k.ifModified && (n.lastModified[d] && v.setRequestHeader("If-Modified-Since", n.lastModified[d]), 
            n.etag[d] && v.setRequestHeader("If-None-Match", n.etag[d])), (k.data && k.hasContent && k.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", k.contentType), 
            v.setRequestHeader("Accept", k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + ("*" !== k.dataTypes[0] ? ", " + nc + "; q=0.01" : "") : k.accepts["*"]);
            for (j in k.headers) v.setRequestHeader(j, k.headers[j]);
            if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || 2 === t)) return v.abort();
            u = "abort";
            for (j in {
                success: 1,
                error: 1,
                complete: 1
            }) v[j](k[j]);
            if (c = rc(mc, k, b, v)) {
                v.readyState = 1, i && m.trigger("ajaxSend", [ v, k ]), k.async && k.timeout > 0 && (g = setTimeout(function() {
                    v.abort("timeout");
                }, k.timeout));
                try {
                    t = 1, c.send(r, x);
                } catch (w) {
                    if (!(2 > t)) throw w;
                    x(-1, w);
                }
            } else x(-1, "No Transport");
            return v;
        },
        getJSON: function(a, b, c) {
            return n.get(a, b, c, "json");
        },
        getScript: function(a, b) {
            return n.get(a, void 0, b, "script");
        }
    }), n.each([ "get", "post" ], function(a, b) {
        n[b] = function(a, c, d, e) {
            return n.isFunction(c) && (e = e || d, d = c, c = void 0), n.ajax({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            });
        };
    }), n._evalUrl = function(a) {
        return n.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            "throws": !0
        });
    }, n.fn.extend({
        wrapAll: function(a) {
            var b;
            return n.isFunction(a) ? this.each(function(b) {
                n(this).wrapAll(a.call(this, b));
            }) : (this[0] && (b = n(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), 
            b.map(function() {
                for (var a = this; a.firstElementChild; ) a = a.firstElementChild;
                return a;
            }).append(this)), this);
        },
        wrapInner: function(a) {
            return this.each(n.isFunction(a) ? function(b) {
                n(this).wrapInner(a.call(this, b));
            } : function() {
                var b = n(this), c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a);
            });
        },
        wrap: function(a) {
            var b = n.isFunction(a);
            return this.each(function(c) {
                n(this).wrapAll(b ? a.call(this, c) : a);
            });
        },
        unwrap: function() {
            return this.parent().each(function() {
                n.nodeName(this, "body") || n(this).replaceWith(this.childNodes);
            }).end();
        }
    }), n.expr.filters.hidden = function(a) {
        return a.offsetWidth <= 0 && a.offsetHeight <= 0;
    }, n.expr.filters.visible = function(a) {
        return !n.expr.filters.hidden(a);
    };
    var vc = /%20/g, wc = /\[\]$/, xc = /\r?\n/g, yc = /^(?:submit|button|image|reset|file)$/i, zc = /^(?:input|select|textarea|keygen)/i;
    n.param = function(a, b) {
        var c, d = [], e = function(a, b) {
            b = n.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b);
        };
        if (void 0 === b && (b = n.ajaxSettings && n.ajaxSettings.traditional), n.isArray(a) || a.jquery && !n.isPlainObject(a)) n.each(a, function() {
            e(this.name, this.value);
        }); else for (c in a) Ac(c, a[c], b, e);
        return d.join("&").replace(vc, "+");
    }, n.fn.extend({
        serialize: function() {
            return n.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                var a = n.prop(this, "elements");
                return a ? n.makeArray(a) : this;
            }).filter(function() {
                var a = this.type;
                return this.name && !n(this).is(":disabled") && zc.test(this.nodeName) && !yc.test(a) && (this.checked || !T.test(a));
            }).map(function(a, b) {
                var c = n(this).val();
                return null == c ? null : n.isArray(c) ? n.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(xc, "\r\n")
                    };
                }) : {
                    name: b.name,
                    value: c.replace(xc, "\r\n")
                };
            }).get();
        }
    }), n.ajaxSettings.xhr = function() {
        try {
            return new XMLHttpRequest();
        } catch (a) {}
    };
    var Bc = 0, Cc = {}, Dc = {
        0: 200,
        1223: 204
    }, Ec = n.ajaxSettings.xhr();
    a.attachEvent && a.attachEvent("onunload", function() {
        for (var a in Cc) Cc[a]();
    }), k.cors = !!Ec && "withCredentials" in Ec, k.ajax = Ec = !!Ec, n.ajaxTransport(function(a) {
        var b;
        return k.cors || Ec && !a.crossDomain ? {
            send: function(c, d) {
                var e, f = a.xhr(), g = ++Bc;
                if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields) for (e in a.xhrFields) f[e] = a.xhrFields[e];
                a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                for (e in c) f.setRequestHeader(e, c[e]);
                b = function(a) {
                    return function() {
                        b && (delete Cc[g], b = f.onload = f.onerror = null, "abort" === a ? f.abort() : "error" === a ? d(f.status, f.statusText) : d(Dc[f.status] || f.status, f.statusText, "string" == typeof f.responseText ? {
                            text: f.responseText
                        } : void 0, f.getAllResponseHeaders()));
                    };
                }, f.onload = b(), f.onerror = b("error"), b = Cc[g] = b("abort");
                try {
                    f.send(a.hasContent && a.data || null);
                } catch (h) {
                    if (b) throw h;
                }
            },
            abort: function() {
                b && b();
            }
        } : void 0;
    }), n.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {
                return n.globalEval(a), a;
            }
        }
    }), n.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");
    }), n.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c;
            return {
                send: function(d, e) {
                    b = n("<script>").prop({
                        async: !0,
                        charset: a.scriptCharset,
                        src: a.url
                    }).on("load error", c = function(a) {
                        b.remove(), c = null, a && e("error" === a.type ? 404 : 200, a.type);
                    }), l.head.appendChild(b[0]);
                },
                abort: function() {
                    c && c();
                }
            };
        }
    });
    var Fc = [], Gc = /(=)\?(?=&|$)|\?\?/;
    n.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = Fc.pop() || n.expando + "_" + cc++;
            return this[a] = !0, a;
        }
    }), n.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (Gc.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && Gc.test(b.data) && "data");
        return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = n.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, 
        h ? b[h] = b[h].replace(Gc, "$1" + e) : b.jsonp !== !1 && (b.url += (dc.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), 
        b.converters["script json"] = function() {
            return g || n.error(e + " was not called"), g[0];
        }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
            g = arguments;
        }, d.always(function() {
            a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Fc.push(e)), g && n.isFunction(f) && f(g[0]), 
            g = f = void 0;
        }), "script") : void 0;
    }), n.parseHTML = function(a, b, c) {
        if (!a || "string" != typeof a) return null;
        "boolean" == typeof b && (c = b, b = !1), b = b || l;
        var d = v.exec(a), e = !c && [];
        return d ? [ b.createElement(d[1]) ] : (d = n.buildFragment([ a ], b, e), e && e.length && n(e).remove(), 
        n.merge([], d.childNodes));
    };
    var Hc = n.fn.load;
    n.fn.load = function(a, b, c) {
        if ("string" != typeof a && Hc) return Hc.apply(this, arguments);
        var d, e, f, g = this, h = a.indexOf(" ");
        return h >= 0 && (d = n.trim(a.slice(h)), a = a.slice(0, h)), n.isFunction(b) ? (c = b, 
        b = void 0) : b && "object" == typeof b && (e = "POST"), g.length > 0 && n.ajax({
            url: a,
            type: e,
            dataType: "html",
            data: b
        }).done(function(a) {
            f = arguments, g.html(d ? n("<div>").append(n.parseHTML(a)).find(d) : a);
        }).complete(c && function(a, b) {
            g.each(c, f || [ a.responseText, b, a ]);
        }), this;
    }, n.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(a, b) {
        n.fn[b] = function(a) {
            return this.on(b, a);
        };
    }), n.expr.filters.animated = function(a) {
        return n.grep(n.timers, function(b) {
            return a === b.elem;
        }).length;
    };
    var Ic = a.document.documentElement;
    n.offset = {
        setOffset: function(a, b, c) {
            var d, e, f, g, h, i, j, k = n.css(a, "position"), l = n(a), m = {};
            "static" === k && (a.style.position = "relative"), h = l.offset(), f = n.css(a, "top"), 
            i = n.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, 
            j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), 
            n.isFunction(b) && (b = b.call(a, c, h)), null != b.top && (m.top = b.top - h.top + g), 
            null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m);
        }
    }, n.fn.extend({
        offset: function(a) {
            if (arguments.length) return void 0 === a ? this : this.each(function(b) {
                n.offset.setOffset(this, a, b);
            });
            var b, c, d = this[0], e = {
                top: 0,
                left: 0
            }, f = d && d.ownerDocument;
            return f ? (b = f.documentElement, n.contains(b, d) ? (typeof d.getBoundingClientRect !== U && (e = d.getBoundingClientRect()), 
            c = Jc(f), {
                top: e.top + c.pageYOffset - b.clientTop,
                left: e.left + c.pageXOffset - b.clientLeft
            }) : e) : void 0;
        },
        position: function() {
            if (this[0]) {
                var a, b, c = this[0], d = {
                    top: 0,
                    left: 0
                };
                return "fixed" === n.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), 
                b = this.offset(), n.nodeName(a[0], "html") || (d = a.offset()), d.top += n.css(a[0], "borderTopWidth", !0), 
                d.left += n.css(a[0], "borderLeftWidth", !0)), {
                    top: b.top - d.top - n.css(c, "marginTop", !0),
                    left: b.left - d.left - n.css(c, "marginLeft", !0)
                };
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var a = this.offsetParent || Ic; a && !n.nodeName(a, "html") && "static" === n.css(a, "position"); ) a = a.offsetParent;
                return a || Ic;
            });
        }
    }), n.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(b, c) {
        var d = "pageYOffset" === c;
        n.fn[b] = function(e) {
            return J(this, function(b, e, f) {
                var g = Jc(b);
                return void 0 === f ? g ? g[c] : b[e] : void (g ? g.scrollTo(d ? a.pageXOffset : f, d ? f : a.pageYOffset) : b[e] = f);
            }, b, e, arguments.length, null);
        };
    }), n.each([ "top", "left" ], function(a, b) {
        n.cssHooks[b] = yb(k.pixelPosition, function(a, c) {
            return c ? (c = xb(a, b), vb.test(c) ? n(a).position()[b] + "px" : c) : void 0;
        });
    }), n.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        n.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            n.fn[d] = function(d, e) {
                var f = arguments.length && (c || "boolean" != typeof d), g = c || (d === !0 || e === !0 ? "margin" : "border");
                return J(this, function(b, c, d) {
                    var e;
                    return n.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, 
                    Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? n.css(b, c, g) : n.style(b, c, d, g);
                }, b, f ? d : void 0, f, null);
            };
        });
    }), n.fn.size = function() {
        return this.length;
    }, n.fn.andSelf = n.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
        return n;
    });
    var Kc = a.jQuery, Lc = a.$;
    return n.noConflict = function(b) {
        return a.$ === n && (a.$ = Lc), b && a.jQuery === n && (a.jQuery = Kc), n;
    }, typeof b === U && (a.jQuery = a.$ = n), n;
}), function(M, Y, t) {
    "use strict";
    function T(b) {
        return function() {
            var c, a = arguments[0];
            for (c = "[" + (b ? b + ":" : "") + a + "] http://errors.angularjs.org/1.3.11/" + (b ? b + "/" : "") + a, 
            a = 1; a < arguments.length; a++) {
                c = c + (1 == a ? "?" : "&") + "p" + (a - 1) + "=";
                var e, d = encodeURIComponent;
                e = arguments[a], e = "function" == typeof e ? e.toString().replace(/ \{[\s\S]*$/, "") : "undefined" == typeof e ? "undefined" : "string" != typeof e ? JSON.stringify(e) : e, 
                c += d(e);
            }
            return Error(c);
        };
    }
    function Ta(b) {
        if (null == b || Ua(b)) return !1;
        var a = b.length;
        return b.nodeType === oa && a ? !0 : F(b) || D(b) || 0 === a || "number" == typeof a && a > 0 && a - 1 in b;
    }
    function s(b, a, c) {
        var d, e;
        if (b) if (G(b)) for (d in b) "prototype" == d || "length" == d || "name" == d || b.hasOwnProperty && !b.hasOwnProperty(d) || a.call(c, b[d], d, b); else if (D(b) || Ta(b)) {
            var f = "object" != typeof b;
            for (d = 0, e = b.length; e > d; d++) (f || d in b) && a.call(c, b[d], d, b);
        } else if (b.forEach && b.forEach !== s) b.forEach(a, c, b); else for (d in b) b.hasOwnProperty(d) && a.call(c, b[d], d, b);
        return b;
    }
    function Ed(b, a, c) {
        for (var d = Object.keys(b).sort(), e = 0; e < d.length; e++) a.call(c, b[d[e]], d[e]);
        return d;
    }
    function kc(b) {
        return function(a, c) {
            b(c, a);
        };
    }
    function Fd() {
        return ++nb;
    }
    function lc(b, a) {
        a ? b.$$hashKey = a : delete b.$$hashKey;
    }
    function z(b) {
        for (var a = b.$$hashKey, c = 1, d = arguments.length; d > c; c++) {
            var e = arguments[c];
            if (e) for (var f = Object.keys(e), g = 0, h = f.length; h > g; g++) {
                var l = f[g];
                b[l] = e[l];
            }
        }
        return lc(b, a), b;
    }
    function ba(b) {
        return parseInt(b, 10);
    }
    function H() {}
    function pa(b) {
        return b;
    }
    function da(b) {
        return function() {
            return b;
        };
    }
    function A(b) {
        return "undefined" == typeof b;
    }
    function y(b) {
        return "undefined" != typeof b;
    }
    function I(b) {
        return null !== b && "object" == typeof b;
    }
    function F(b) {
        return "string" == typeof b;
    }
    function V(b) {
        return "number" == typeof b;
    }
    function qa(b) {
        return "[object Date]" === Da.call(b);
    }
    function G(b) {
        return "function" == typeof b;
    }
    function ob(b) {
        return "[object RegExp]" === Da.call(b);
    }
    function Ua(b) {
        return b && b.window === b;
    }
    function Va(b) {
        return b && b.$evalAsync && b.$watch;
    }
    function Wa(b) {
        return "boolean" == typeof b;
    }
    function mc(b) {
        return !(!b || !(b.nodeName || b.prop && b.attr && b.find));
    }
    function Gd(b) {
        var a = {};
        b = b.split(",");
        var c;
        for (c = 0; c < b.length; c++) a[b[c]] = !0;
        return a;
    }
    function ua(b) {
        return Q(b.nodeName || b[0] && b[0].nodeName);
    }
    function Xa(b, a) {
        var c = b.indexOf(a);
        return c >= 0 && b.splice(c, 1), a;
    }
    function Ea(b, a, c, d) {
        if (Ua(b) || Va(b)) throw Ka("cpws");
        if (a) {
            if (b === a) throw Ka("cpi");
            if (c = c || [], d = d || [], I(b)) {
                var e = c.indexOf(b);
                if (-1 !== e) return d[e];
                c.push(b), d.push(a);
            }
            if (D(b)) for (var f = a.length = 0; f < b.length; f++) e = Ea(b[f], null, c, d), 
            I(b[f]) && (c.push(b[f]), d.push(e)), a.push(e); else {
                var g = a.$$hashKey;
                D(a) ? a.length = 0 : s(a, function(b, c) {
                    delete a[c];
                });
                for (f in b) b.hasOwnProperty(f) && (e = Ea(b[f], null, c, d), I(b[f]) && (c.push(b[f]), 
                d.push(e)), a[f] = e);
                lc(a, g);
            }
        } else (a = b) && (D(b) ? a = Ea(b, [], c, d) : qa(b) ? a = new Date(b.getTime()) : ob(b) ? (a = new RegExp(b.source, b.toString().match(/[^\/]*$/)[0]), 
        a.lastIndex = b.lastIndex) : I(b) && (e = Object.create(Object.getPrototypeOf(b)), 
        a = Ea(b, e, c, d)));
        return a;
    }
    function ra(b, a) {
        if (D(b)) {
            a = a || [];
            for (var c = 0, d = b.length; d > c; c++) a[c] = b[c];
        } else if (I(b)) for (c in a = a || {}, b) ("$" !== c.charAt(0) || "$" !== c.charAt(1)) && (a[c] = b[c]);
        return a || b;
    }
    function fa(b, a) {
        if (b === a) return !0;
        if (null === b || null === a) return !1;
        if (b !== b && a !== a) return !0;
        var d, c = typeof b;
        if (c == typeof a && "object" == c) {
            if (!D(b)) {
                if (qa(b)) return qa(a) ? fa(b.getTime(), a.getTime()) : !1;
                if (ob(b) && ob(a)) return b.toString() == a.toString();
                if (Va(b) || Va(a) || Ua(b) || Ua(a) || D(a)) return !1;
                c = {};
                for (d in b) if ("$" !== d.charAt(0) && !G(b[d])) {
                    if (!fa(b[d], a[d])) return !1;
                    c[d] = !0;
                }
                for (d in a) if (!c.hasOwnProperty(d) && "$" !== d.charAt(0) && a[d] !== t && !G(a[d])) return !1;
                return !0;
            }
            if (!D(a)) return !1;
            if ((c = b.length) == a.length) {
                for (d = 0; c > d; d++) if (!fa(b[d], a[d])) return !1;
                return !0;
            }
        }
        return !1;
    }
    function Ya(b, a, c) {
        return b.concat(Za.call(a, c));
    }
    function nc(b, a) {
        var c = 2 < arguments.length ? Za.call(arguments, 2) : [];
        return !G(a) || a instanceof RegExp ? a : c.length ? function() {
            return arguments.length ? a.apply(b, Ya(c, arguments, 0)) : a.apply(b, c);
        } : function() {
            return arguments.length ? a.apply(b, arguments) : a.call(b);
        };
    }
    function Hd(b, a) {
        var c = a;
        return "string" == typeof b && "$" === b.charAt(0) && "$" === b.charAt(1) ? c = t : Ua(a) ? c = "$WINDOW" : a && Y === a ? c = "$DOCUMENT" : Va(a) && (c = "$SCOPE"), 
        c;
    }
    function $a(b, a) {
        return "undefined" == typeof b ? t : (V(a) || (a = a ? 2 : null), JSON.stringify(b, Hd, a));
    }
    function oc(b) {
        return F(b) ? JSON.parse(b) : b;
    }
    function va(b) {
        b = B(b).clone();
        try {
            b.empty();
        } catch (a) {}
        var c = B("<div>").append(b).html();
        try {
            return b[0].nodeType === pb ? Q(c) : c.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function(a, b) {
                return "<" + Q(b);
            });
        } catch (d) {
            return Q(c);
        }
    }
    function pc(b) {
        try {
            return decodeURIComponent(b);
        } catch (a) {}
    }
    function qc(b) {
        var c, d, a = {};
        return s((b || "").split("&"), function(b) {
            b && (c = b.replace(/\+/g, "%20").split("="), d = pc(c[0]), y(d) && (b = y(c[1]) ? pc(c[1]) : !0, 
            rc.call(a, d) ? D(a[d]) ? a[d].push(b) : a[d] = [ a[d], b ] : a[d] = b));
        }), a;
    }
    function Nb(b) {
        var a = [];
        return s(b, function(b, d) {
            D(b) ? s(b, function(b) {
                a.push(Fa(d, !0) + (!0 === b ? "" : "=" + Fa(b, !0)));
            }) : a.push(Fa(d, !0) + (!0 === b ? "" : "=" + Fa(b, !0)));
        }), a.length ? a.join("&") : "";
    }
    function qb(b) {
        return Fa(b, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+");
    }
    function Fa(b, a) {
        return encodeURIComponent(b).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%20/g, a ? "%20" : "+");
    }
    function Id(b, a) {
        var c, d, e = rb.length;
        for (b = B(b), d = 0; e > d; ++d) if (c = rb[d] + a, F(c = b.attr(c))) return c;
        return null;
    }
    function Jd(b, a) {
        var c, d, e = {};
        s(rb, function(a) {
            a += "app", !c && b.hasAttribute && b.hasAttribute(a) && (c = b, d = b.getAttribute(a));
        }), s(rb, function(a) {
            a += "app";
            var e;
            !c && (e = b.querySelector("[" + a.replace(":", "\\:") + "]")) && (c = e, d = e.getAttribute(a));
        }), c && (e.strictDi = null !== Id(c, "strict-di"), a(c, d ? [ d ] : [], e));
    }
    function sc(b, a, c) {
        I(c) || (c = {}), c = z({
            strictDi: !1
        }, c);
        var d = function() {
            if (b = B(b), b.injector()) {
                var d = b[0] === Y ? "document" : va(b);
                throw Ka("btstrpd", d.replace(/</, "&lt;").replace(/>/, "&gt;"));
            }
            return a = a || [], a.unshift([ "$provide", function(a) {
                a.value("$rootElement", b);
            } ]), c.debugInfoEnabled && a.push([ "$compileProvider", function(a) {
                a.debugInfoEnabled(!0);
            } ]), a.unshift("ng"), d = Ob(a, c.strictDi), d.invoke([ "$rootScope", "$rootElement", "$compile", "$injector", function(a, b, c, d) {
                a.$apply(function() {
                    b.data("$injector", d), c(b)(a);
                });
            } ]), d;
        }, e = /^NG_ENABLE_DEBUG_INFO!/, f = /^NG_DEFER_BOOTSTRAP!/;
        return M && e.test(M.name) && (c.debugInfoEnabled = !0, M.name = M.name.replace(e, "")), 
        M && !f.test(M.name) ? d() : (M.name = M.name.replace(f, ""), void (ga.resumeBootstrap = function(b) {
            s(b, function(b) {
                a.push(b);
            }), d();
        }));
    }
    function Kd() {
        M.name = "NG_ENABLE_DEBUG_INFO!" + M.name, M.location.reload();
    }
    function Ld(b) {
        if (b = ga.element(b).injector(), !b) throw Ka("test");
        return b.get("$$testability");
    }
    function tc(b, a) {
        return a = a || "_", b.replace(Md, function(b, d) {
            return (d ? a : "") + b.toLowerCase();
        });
    }
    function Nd() {
        var b;
        uc || ((sa = M.jQuery) && sa.fn.on ? (B = sa, z(sa.fn, {
            scope: La.scope,
            isolateScope: La.isolateScope,
            controller: La.controller,
            injector: La.injector,
            inheritedData: La.inheritedData
        }), b = sa.cleanData, sa.cleanData = function(a) {
            var c;
            if (Pb) Pb = !1; else for (var e, d = 0; null != (e = a[d]); d++) (c = sa._data(e, "events")) && c.$destroy && sa(e).triggerHandler("$destroy");
            b(a);
        }) : B = R, ga.element = B, uc = !0);
    }
    function Qb(b, a, c) {
        if (!b) throw Ka("areq", a || "?", c || "required");
        return b;
    }
    function sb(b, a, c) {
        return c && D(b) && (b = b[b.length - 1]), Qb(G(b), a, "not a function, got " + (b && "object" == typeof b ? b.constructor.name || "Object" : typeof b)), 
        b;
    }
    function Ma(b, a) {
        if ("hasOwnProperty" === b) throw Ka("badname", a);
    }
    function vc(b, a, c) {
        if (!a) return b;
        a = a.split(".");
        for (var d, e = b, f = a.length, g = 0; f > g; g++) d = a[g], b && (b = (e = b)[d]);
        return !c && G(b) ? nc(e, b) : b;
    }
    function tb(b) {
        var a = b[0];
        b = b[b.length - 1];
        var c = [ a ];
        do {
            if (a = a.nextSibling, !a) break;
            c.push(a);
        } while (a !== b);
        return B(c);
    }
    function ha() {
        return Object.create(null);
    }
    function Od(b) {
        function a(a, b, c) {
            return a[b] || (a[b] = c());
        }
        var c = T("$injector"), d = T("ng");
        return b = a(b, "angular", Object), b.$$minErr = b.$$minErr || T, a(b, "module", function() {
            var b = {};
            return function(f, g, h) {
                if ("hasOwnProperty" === f) throw d("badname", "module");
                return g && b.hasOwnProperty(f) && (b[f] = null), a(b, f, function() {
                    function a(c, d, e, f) {
                        return f || (f = b), function() {
                            return f[e || "push"]([ c, d, arguments ]), u;
                        };
                    }
                    if (!g) throw c("nomod", f);
                    var b = [], d = [], e = [], q = a("$injector", "invoke", "push", d), u = {
                        _invokeQueue: b,
                        _configBlocks: d,
                        _runBlocks: e,
                        requires: g,
                        name: f,
                        provider: a("$provide", "provider"),
                        factory: a("$provide", "factory"),
                        service: a("$provide", "service"),
                        value: a("$provide", "value"),
                        constant: a("$provide", "constant", "unshift"),
                        animation: a("$animateProvider", "register"),
                        filter: a("$filterProvider", "register"),
                        controller: a("$controllerProvider", "register"),
                        directive: a("$compileProvider", "directive"),
                        config: q,
                        run: function(a) {
                            return e.push(a), this;
                        }
                    };
                    return h && q(h), u;
                });
            };
        });
    }
    function Pd(b) {
        z(b, {
            bootstrap: sc,
            copy: Ea,
            extend: z,
            equals: fa,
            element: B,
            forEach: s,
            injector: Ob,
            noop: H,
            bind: nc,
            toJson: $a,
            fromJson: oc,
            identity: pa,
            isUndefined: A,
            isDefined: y,
            isString: F,
            isFunction: G,
            isObject: I,
            isNumber: V,
            isElement: mc,
            isArray: D,
            version: Qd,
            isDate: qa,
            lowercase: Q,
            uppercase: ub,
            callbacks: {
                counter: 0
            },
            getTestability: Ld,
            $$minErr: T,
            $$csp: ab,
            reloadWithDebugInfo: Kd
        }), bb = Od(M);
        try {
            bb("ngLocale");
        } catch (a) {
            bb("ngLocale", []).provider("$locale", Rd);
        }
        bb("ng", [ "ngLocale" ], [ "$provide", function(a) {
            a.provider({
                $$sanitizeUri: Sd
            }), a.provider("$compile", wc).directive({
                a: Td,
                input: xc,
                textarea: xc,
                form: Ud,
                script: Vd,
                select: Wd,
                style: Xd,
                option: Yd,
                ngBind: Zd,
                ngBindHtml: $d,
                ngBindTemplate: ae,
                ngClass: be,
                ngClassEven: ce,
                ngClassOdd: de,
                ngCloak: ee,
                ngController: fe,
                ngForm: ge,
                ngHide: he,
                ngIf: ie,
                ngInclude: je,
                ngInit: ke,
                ngNonBindable: le,
                ngPluralize: me,
                ngRepeat: ne,
                ngShow: oe,
                ngStyle: pe,
                ngSwitch: qe,
                ngSwitchWhen: re,
                ngSwitchDefault: se,
                ngOptions: te,
                ngTransclude: ue,
                ngModel: ve,
                ngList: we,
                ngChange: xe,
                pattern: yc,
                ngPattern: yc,
                required: zc,
                ngRequired: zc,
                minlength: Ac,
                ngMinlength: Ac,
                maxlength: Bc,
                ngMaxlength: Bc,
                ngValue: ye,
                ngModelOptions: ze
            }).directive({
                ngInclude: Ae
            }).directive(vb).directive(Cc), a.provider({
                $anchorScroll: Be,
                $animate: Ce,
                $browser: De,
                $cacheFactory: Ee,
                $controller: Fe,
                $document: Ge,
                $exceptionHandler: He,
                $filter: Dc,
                $interpolate: Ie,
                $interval: Je,
                $http: Ke,
                $httpBackend: Le,
                $location: Me,
                $log: Ne,
                $parse: Oe,
                $rootScope: Pe,
                $q: Qe,
                $$q: Re,
                $sce: Se,
                $sceDelegate: Te,
                $sniffer: Ue,
                $templateCache: Ve,
                $templateRequest: We,
                $$testability: Xe,
                $timeout: Ye,
                $window: Ze,
                $$rAF: $e,
                $$asyncCallback: af,
                $$jqLite: bf
            });
        } ]);
    }
    function cb(b) {
        return b.replace(cf, function(a, b, d, e) {
            return e ? d.toUpperCase() : d;
        }).replace(df, "Moz$1");
    }
    function Ec(b) {
        return b = b.nodeType, b === oa || !b || 9 === b;
    }
    function Fc(b, a) {
        var c, d, e = a.createDocumentFragment(), f = [];
        if (Rb.test(b)) {
            for (c = c || e.appendChild(a.createElement("div")), d = (ef.exec(b) || [ "", "" ])[1].toLowerCase(), 
            d = ia[d] || ia._default, c.innerHTML = d[1] + b.replace(ff, "<$1></$2>") + d[2], 
            d = d[0]; d--; ) c = c.lastChild;
            f = Ya(f, c.childNodes), c = e.firstChild, c.textContent = "";
        } else f.push(a.createTextNode(b));
        return e.textContent = "", e.innerHTML = "", s(f, function(a) {
            e.appendChild(a);
        }), e;
    }
    function R(b) {
        if (b instanceof R) return b;
        var a;
        if (F(b) && (b = U(b), a = !0), !(this instanceof R)) {
            if (a && "<" != b.charAt(0)) throw Sb("nosel");
            return new R(b);
        }
        if (a) {
            a = Y;
            var c;
            b = (c = gf.exec(b)) ? [ a.createElement(c[1]) ] : (c = Fc(b, a)) ? c.childNodes : [];
        }
        Gc(this, b);
    }
    function Tb(b) {
        return b.cloneNode(!0);
    }
    function wb(b, a) {
        if (a || xb(b), b.querySelectorAll) for (var c = b.querySelectorAll("*"), d = 0, e = c.length; e > d; d++) xb(c[d]);
    }
    function Hc(b, a, c, d) {
        if (y(d)) throw Sb("offargs");
        var e = (d = yb(b)) && d.events, f = d && d.handle;
        if (f) if (a) s(a.split(" "), function(a) {
            if (y(c)) {
                var d = e[a];
                if (Xa(d || [], c), d && 0 < d.length) return;
            }
            b.removeEventListener(a, f, !1), delete e[a];
        }); else for (a in e) "$destroy" !== a && b.removeEventListener(a, f, !1), delete e[a];
    }
    function xb(b, a) {
        var c = b.ng339, d = c && zb[c];
        d && (a ? delete d.data[a] : (d.handle && (d.events.$destroy && d.handle({}, "$destroy"), 
        Hc(b)), delete zb[c], b.ng339 = t));
    }
    function yb(b, a) {
        var c = b.ng339, c = c && zb[c];
        return a && !c && (b.ng339 = c = ++hf, c = zb[c] = {
            events: {},
            data: {},
            handle: t
        }), c;
    }
    function Ub(b, a, c) {
        if (Ec(b)) {
            var d = y(c), e = !d && a && !I(a), f = !a;
            if (b = (b = yb(b, !e)) && b.data, d) b[a] = c; else {
                if (f) return b;
                if (e) return b && b[a];
                z(b, a);
            }
        }
    }
    function Ab(b, a) {
        return b.getAttribute ? -1 < (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + a + " ") : !1;
    }
    function Bb(b, a) {
        a && b.setAttribute && s(a.split(" "), function(a) {
            b.setAttribute("class", U((" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + U(a) + " ", " ")));
        });
    }
    function Cb(b, a) {
        if (a && b.setAttribute) {
            var c = (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
            s(a.split(" "), function(a) {
                a = U(a), -1 === c.indexOf(" " + a + " ") && (c += a + " ");
            }), b.setAttribute("class", U(c));
        }
    }
    function Gc(b, a) {
        if (a) if (a.nodeType) b[b.length++] = a; else {
            var c = a.length;
            if ("number" == typeof c && a.window !== a) {
                if (c) for (var d = 0; c > d; d++) b[b.length++] = a[d];
            } else b[b.length++] = a;
        }
    }
    function Ic(b, a) {
        return Db(b, "$" + (a || "ngController") + "Controller");
    }
    function Db(b, a, c) {
        for (9 == b.nodeType && (b = b.documentElement), a = D(a) ? a : [ a ]; b; ) {
            for (var d = 0, e = a.length; e > d; d++) if ((c = B.data(b, a[d])) !== t) return c;
            b = b.parentNode || 11 === b.nodeType && b.host;
        }
    }
    function Jc(b) {
        for (wb(b, !0); b.firstChild; ) b.removeChild(b.firstChild);
    }
    function Kc(b, a) {
        a || wb(b);
        var c = b.parentNode;
        c && c.removeChild(b);
    }
    function jf(b, a) {
        a = a || M, "complete" === a.document.readyState ? a.setTimeout(b) : B(a).on("load", b);
    }
    function Lc(b, a) {
        var c = Eb[a.toLowerCase()];
        return c && Mc[ua(b)] && c;
    }
    function kf(b, a) {
        var c = b.nodeName;
        return ("INPUT" === c || "TEXTAREA" === c) && Nc[a];
    }
    function lf(b, a) {
        var c = function(c, e) {
            c.isDefaultPrevented = function() {
                return c.defaultPrevented;
            };
            var f = a[e || c.type], g = f ? f.length : 0;
            if (g) {
                if (A(c.immediatePropagationStopped)) {
                    var h = c.stopImmediatePropagation;
                    c.stopImmediatePropagation = function() {
                        c.immediatePropagationStopped = !0, c.stopPropagation && c.stopPropagation(), h && h.call(c);
                    };
                }
                c.isImmediatePropagationStopped = function() {
                    return !0 === c.immediatePropagationStopped;
                }, g > 1 && (f = ra(f));
                for (var l = 0; g > l; l++) c.isImmediatePropagationStopped() || f[l].call(b, c);
            }
        };
        return c.elem = b, c;
    }
    function bf() {
        this.$get = function() {
            return z(R, {
                hasClass: function(b, a) {
                    return b.attr && (b = b[0]), Ab(b, a);
                },
                addClass: function(b, a) {
                    return b.attr && (b = b[0]), Cb(b, a);
                },
                removeClass: function(b, a) {
                    return b.attr && (b = b[0]), Bb(b, a);
                }
            });
        };
    }
    function Na(b, a) {
        var c = b && b.$$hashKey;
        return c ? ("function" == typeof c && (c = b.$$hashKey()), c) : (c = typeof b, c = "function" == c || "object" == c && null !== b ? b.$$hashKey = c + ":" + (a || Fd)() : c + ":" + b);
    }
    function db(b, a) {
        if (a) {
            var c = 0;
            this.nextUid = function() {
                return ++c;
            };
        }
        s(b, this.put, this);
    }
    function mf(b) {
        return (b = b.toString().replace(Oc, "").match(Pc)) ? "function(" + (b[1] || "").replace(/[\s\r\n]+/, " ") + ")" : "fn";
    }
    function Vb(b, a, c) {
        var d;
        if ("function" == typeof b) {
            if (!(d = b.$inject)) {
                if (d = [], b.length) {
                    if (a) throw F(c) && c || (c = b.name || mf(b)), Ga("strictdi", c);
                    a = b.toString().replace(Oc, ""), a = a.match(Pc), s(a[1].split(nf), function(a) {
                        a.replace(of, function(a, b, c) {
                            d.push(c);
                        });
                    });
                }
                b.$inject = d;
            }
        } else D(b) ? (a = b.length - 1, sb(b[a], "fn"), d = b.slice(0, a)) : sb(b, "fn", !0);
        return d;
    }
    function Ob(b, a) {
        function c(a) {
            return function(b, c) {
                return I(b) ? void s(b, kc(a)) : a(b, c);
            };
        }
        function d(a, b) {
            if (Ma(a, "service"), (G(b) || D(b)) && (b = q.instantiate(b)), !b.$get) throw Ga("pget", a);
            return n[a + "Provider"] = b;
        }
        function e(a, b) {
            return function() {
                var c = r.invoke(b, this);
                if (A(c)) throw Ga("undef", a);
                return c;
            };
        }
        function f(a, b, c) {
            return d(a, {
                $get: !1 !== c ? e(a, b) : b
            });
        }
        function g(a) {
            var c, b = [];
            return s(a, function(a) {
                function d(a) {
                    var b, c;
                    for (b = 0, c = a.length; c > b; b++) {
                        var e = a[b], f = q.get(e[0]);
                        f[e[1]].apply(f, e[2]);
                    }
                }
                if (!m.get(a)) {
                    m.put(a, !0);
                    try {
                        F(a) ? (c = bb(a), b = b.concat(g(c.requires)).concat(c._runBlocks), d(c._invokeQueue), 
                        d(c._configBlocks)) : G(a) ? b.push(q.invoke(a)) : D(a) ? b.push(q.invoke(a)) : sb(a, "module");
                    } catch (e) {
                        throw D(a) && (a = a[a.length - 1]), e.message && e.stack && -1 == e.stack.indexOf(e.message) && (e = e.message + "\n" + e.stack), 
                        Ga("modulerr", a, e.stack || e.message || e);
                    }
                }
            }), b;
        }
        function h(b, c) {
            function d(a, e) {
                if (b.hasOwnProperty(a)) {
                    if (b[a] === l) throw Ga("cdep", a + " <- " + k.join(" <- "));
                    return b[a];
                }
                try {
                    return k.unshift(a), b[a] = l, b[a] = c(a, e);
                } catch (f) {
                    throw b[a] === l && delete b[a], f;
                } finally {
                    k.shift();
                }
            }
            function e(b, c, f, g) {
                "string" == typeof f && (g = f, f = null);
                var l, q, n, h = [], k = Vb(b, a, g);
                for (q = 0, l = k.length; l > q; q++) {
                    if (n = k[q], "string" != typeof n) throw Ga("itkn", n);
                    h.push(f && f.hasOwnProperty(n) ? f[n] : d(n, g));
                }
                return D(b) && (b = b[l]), b.apply(c, h);
            }
            return {
                invoke: e,
                instantiate: function(a, b, c) {
                    var d = Object.create((D(a) ? a[a.length - 1] : a).prototype || null);
                    return a = e(a, d, b, c), I(a) || G(a) ? a : d;
                },
                get: d,
                annotate: Vb,
                has: function(a) {
                    return n.hasOwnProperty(a + "Provider") || b.hasOwnProperty(a);
                }
            };
        }
        a = !0 === a;
        var l = {}, k = [], m = new db([], !0), n = {
            $provide: {
                provider: c(d),
                factory: c(f),
                service: c(function(a, b) {
                    return f(a, [ "$injector", function(a) {
                        return a.instantiate(b);
                    } ]);
                }),
                value: c(function(a, b) {
                    return f(a, da(b), !1);
                }),
                constant: c(function(a, b) {
                    Ma(a, "constant"), n[a] = b, u[a] = b;
                }),
                decorator: function(a, b) {
                    var c = q.get(a + "Provider"), d = c.$get;
                    c.$get = function() {
                        var a = r.invoke(d, c);
                        return r.invoke(b, null, {
                            $delegate: a
                        });
                    };
                }
            }
        }, q = n.$injector = h(n, function(a, b) {
            throw ga.isString(b) && k.push(b), Ga("unpr", k.join(" <- "));
        }), u = {}, r = u.$injector = h(u, function(a, b) {
            var c = q.get(a + "Provider", b);
            return r.invoke(c.$get, c, t, a);
        });
        return s(g(b), function(a) {
            r.invoke(a || H);
        }), r;
    }
    function Be() {
        var b = !0;
        this.disableAutoScrolling = function() {
            b = !1;
        }, this.$get = [ "$window", "$location", "$rootScope", function(a, c, d) {
            function e(a) {
                var b = null;
                return Array.prototype.some.call(a, function(a) {
                    return "a" === ua(a) ? (b = a, !0) : void 0;
                }), b;
            }
            function f(b) {
                if (b) {
                    b.scrollIntoView();
                    var c;
                    c = g.yOffset, G(c) ? c = c() : mc(c) ? (c = c[0], c = "fixed" !== a.getComputedStyle(c).position ? 0 : c.getBoundingClientRect().bottom) : V(c) || (c = 0), 
                    c && (b = b.getBoundingClientRect().top, a.scrollBy(0, b - c));
                } else a.scrollTo(0, 0);
            }
            function g() {
                var b, a = c.hash();
                a ? (b = h.getElementById(a)) ? f(b) : (b = e(h.getElementsByName(a))) ? f(b) : "top" === a && f(null) : f(null);
            }
            var h = a.document;
            return b && d.$watch(function() {
                return c.hash();
            }, function(a, b) {
                a === b && "" === a || jf(function() {
                    d.$evalAsync(g);
                });
            }), g;
        } ];
    }
    function af() {
        this.$get = [ "$$rAF", "$timeout", function(b, a) {
            return b.supported ? function(a) {
                return b(a);
            } : function(b) {
                return a(b, 0, !1);
            };
        } ];
    }
    function pf(b, a, c, d) {
        function e(a) {
            try {
                a.apply(null, Za.call(arguments, 1));
            } finally {
                if (v--, 0 === v) for (;w.length; ) try {
                    w.pop()();
                } catch (b) {
                    c.error(b);
                }
            }
        }
        function f(a, b) {
            !function N() {
                s(L, function(a) {
                    a();
                }), C = b(N, a);
            }();
        }
        function g() {
            h(), l();
        }
        function h() {
            x = b.history.state, x = A(x) ? null : x, fa(x, J) && (x = J), J = x;
        }
        function l() {
            (E !== m.url() || P !== x) && (E = m.url(), P = x, s(W, function(a) {
                a(m.url(), x);
            }));
        }
        function k(a) {
            try {
                return decodeURIComponent(a);
            } catch (b) {
                return a;
            }
        }
        var m = this, n = a[0], q = b.location, u = b.history, r = b.setTimeout, O = b.clearTimeout, p = {};
        m.isMock = !1;
        var v = 0, w = [];
        m.$$completeOutstandingRequest = e, m.$$incOutstandingRequestCount = function() {
            v++;
        }, m.notifyWhenNoOutstandingRequests = function(a) {
            s(L, function(a) {
                a();
            }), 0 === v ? a() : w.push(a);
        };
        var C, L = [];
        m.addPollFn = function(a) {
            return A(C) && f(100, r), L.push(a), a;
        };
        var x, P, E = q.href, S = a.find("base"), X = null;
        h(), P = x, m.url = function(a, c, e) {
            if (A(e) && (e = null), q !== b.location && (q = b.location), u !== b.history && (u = b.history), 
            a) {
                var f = P === e;
                if (E === a && (!d.history || f)) return m;
                var g = E && Ha(E) === Ha(a);
                return E = a, P = e, !d.history || g && f ? (g || (X = a), c ? q.replace(a) : g ? (c = q, 
                e = a.indexOf("#"), a = -1 === e ? "" : a.substr(e + 1), c.hash = a) : q.href = a) : (u[c ? "replaceState" : "pushState"](e, "", a), 
                h(), P = x), m;
            }
            return X || q.href.replace(/%27/g, "'");
        }, m.state = function() {
            return x;
        };
        var W = [], wa = !1, J = null;
        m.onUrlChange = function(a) {
            return wa || (d.history && B(b).on("popstate", g), B(b).on("hashchange", g), wa = !0), 
            W.push(a), a;
        }, m.$$checkUrlChange = l, m.baseHref = function() {
            var a = S.attr("href");
            return a ? a.replace(/^(https?\:)?\/\/[^\/]*/, "") : "";
        };
        var ea = {}, y = "", ca = m.baseHref();
        m.cookies = function(a, b) {
            var d, e, f, g;
            if (!a) {
                if (n.cookie !== y) for (y = n.cookie, d = y.split("; "), ea = {}, f = 0; f < d.length; f++) e = d[f], 
                g = e.indexOf("="), g > 0 && (a = k(e.substring(0, g)), ea[a] === t && (ea[a] = k(e.substring(g + 1))));
                return ea;
            }
            b === t ? n.cookie = encodeURIComponent(a) + "=;path=" + ca + ";expires=Thu, 01 Jan 1970 00:00:00 GMT" : F(b) && (d = (n.cookie = encodeURIComponent(a) + "=" + encodeURIComponent(b) + ";path=" + ca).length + 1, 
            d > 4096 && c.warn("Cookie '" + a + "' possibly not set or overflowed because it was too large (" + d + " > 4096 bytes)!"));
        }, m.defer = function(a, b) {
            var c;
            return v++, c = r(function() {
                delete p[c], e(a);
            }, b || 0), p[c] = !0, c;
        }, m.defer.cancel = function(a) {
            return p[a] ? (delete p[a], O(a), e(H), !0) : !1;
        };
    }
    function De() {
        this.$get = [ "$window", "$log", "$sniffer", "$document", function(b, a, c, d) {
            return new pf(b, d, a, c);
        } ];
    }
    function Ee() {
        this.$get = function() {
            function b(b, d) {
                function e(a) {
                    a != n && (q ? q == a && (q = a.n) : q = a, f(a.n, a.p), f(a, n), n = a, n.n = null);
                }
                function f(a, b) {
                    a != b && (a && (a.p = b), b && (b.n = a));
                }
                if (b in a) throw T("$cacheFactory")("iid", b);
                var g = 0, h = z({}, d, {
                    id: b
                }), l = {}, k = d && d.capacity || Number.MAX_VALUE, m = {}, n = null, q = null;
                return a[b] = {
                    put: function(a, b) {
                        if (k < Number.MAX_VALUE) {
                            var c = m[a] || (m[a] = {
                                key: a
                            });
                            e(c);
                        }
                        return A(b) ? void 0 : (a in l || g++, l[a] = b, g > k && this.remove(q.key), b);
                    },
                    get: function(a) {
                        if (k < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b) return;
                            e(b);
                        }
                        return l[a];
                    },
                    remove: function(a) {
                        if (k < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b) return;
                            b == n && (n = b.p), b == q && (q = b.n), f(b.n, b.p), delete m[a];
                        }
                        delete l[a], g--;
                    },
                    removeAll: function() {
                        l = {}, g = 0, m = {}, n = q = null;
                    },
                    destroy: function() {
                        m = h = l = null, delete a[b];
                    },
                    info: function() {
                        return z({}, h, {
                            size: g
                        });
                    }
                };
            }
            var a = {};
            return b.info = function() {
                var b = {};
                return s(a, function(a, e) {
                    b[e] = a.info();
                }), b;
            }, b.get = function(b) {
                return a[b];
            }, b;
        };
    }
    function Ve() {
        this.$get = [ "$cacheFactory", function(b) {
            return b("templates");
        } ];
    }
    function wc(b, a) {
        function c(a, b) {
            var c = /^\s*([@&]|=(\*?))(\??)\s*(\w*)\s*$/, d = {};
            return s(a, function(a, e) {
                var f = a.match(c);
                if (!f) throw ja("iscp", b, e, a);
                d[e] = {
                    mode: f[1][0],
                    collection: "*" === f[2],
                    optional: "?" === f[3],
                    attrName: f[4] || e
                };
            }), d;
        }
        var d = {}, e = /^\s*directive\:\s*([\w\-]+)\s+(.*)$/, f = /(([\w\-]+)(?:\:([^;]+))?;?)/, g = Gd("ngSrc,ngSrcset,src,srcset"), h = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/, l = /^(on[a-z]+|formaction)$/;
        this.directive = function n(a, e) {
            return Ma(a, "directive"), F(a) ? (Qb(e, "directiveFactory"), d.hasOwnProperty(a) || (d[a] = [], 
            b.factory(a + "Directive", [ "$injector", "$exceptionHandler", function(b, e) {
                var f = [];
                return s(d[a], function(d, g) {
                    try {
                        var h = b.invoke(d);
                        G(h) ? h = {
                            compile: da(h)
                        } : !h.compile && h.link && (h.compile = da(h.link)), h.priority = h.priority || 0, 
                        h.index = g, h.name = h.name || a, h.require = h.require || h.controller && h.name, 
                        h.restrict = h.restrict || "EA", I(h.scope) && (h.$$isolateBindings = c(h.scope, h.name)), 
                        f.push(h);
                    } catch (l) {
                        e(l);
                    }
                }), f;
            } ])), d[a].push(e)) : s(a, kc(n)), this;
        }, this.aHrefSanitizationWhitelist = function(b) {
            return y(b) ? (a.aHrefSanitizationWhitelist(b), this) : a.aHrefSanitizationWhitelist();
        }, this.imgSrcSanitizationWhitelist = function(b) {
            return y(b) ? (a.imgSrcSanitizationWhitelist(b), this) : a.imgSrcSanitizationWhitelist();
        };
        var k = !0;
        this.debugInfoEnabled = function(a) {
            return y(a) ? (k = a, this) : k;
        }, this.$get = [ "$injector", "$interpolate", "$exceptionHandler", "$templateRequest", "$parse", "$controller", "$rootScope", "$document", "$sce", "$animate", "$$sanitizeUri", function(a, b, c, r, O, p, v, w, L, C, x) {
            function P(a, b) {
                try {
                    a.addClass(b);
                } catch (c) {}
            }
            function E(a, b, c, d, e) {
                a instanceof B || (a = B(a)), s(a, function(b, c) {
                    b.nodeType == pb && b.nodeValue.match(/\S+/) && (a[c] = B(b).wrap("<span></span>").parent()[0]);
                });
                var f = S(a, b, a, c, d, e);
                E.$$addScopeClass(a);
                var g = null;
                return function(b, c, d) {
                    Qb(b, "scope"), d = d || {};
                    var e = d.parentBoundTranscludeFn, h = d.transcludeControllers;
                    if (d = d.futureParentElement, e && e.$$boundTransclude && (e = e.$$boundTransclude), 
                    g || (g = (d = d && d[0]) && "foreignobject" !== ua(d) && d.toString().match(/SVG/) ? "svg" : "html"), 
                    d = "html" !== g ? B(Wb(g, B("<div>").append(a).html())) : c ? La.clone.call(a) : a, 
                    h) for (var l in h) d.data("$" + l + "Controller", h[l].instance);
                    return E.$$addScopeInfo(d, b), c && c(d, b), f && f(b, d, d, e), d;
                };
            }
            function S(a, b, c, d, e, f) {
                function g(a, c, d, e) {
                    var f, l, k, q, n, p, w;
                    if (r) for (w = Array(c.length), q = 0; q < h.length; q += 3) f = h[q], w[f] = c[f]; else w = c;
                    for (q = 0, n = h.length; n > q; ) l = w[h[q++]], c = h[q++], f = h[q++], c ? (c.scope ? (k = a.$new(), 
                    E.$$addScopeInfo(B(l), k)) : k = a, p = c.transcludeOnThisElement ? X(a, c.transclude, e, c.elementTranscludeOnThisElement) : !c.templateOnThisElement && e ? e : !e && b ? X(a, b) : null, 
                    c(f, k, l, d, p)) : f && f(a, l.childNodes, t, e);
                }
                for (var l, k, q, n, r, h = [], p = 0; p < a.length; p++) l = new Xb(), k = W(a[p], [], l, 0 === p ? d : t, e), 
                (f = k.length ? ea(k, a[p], l, b, c, null, [], [], f) : null) && f.scope && E.$$addScopeClass(l.$$element), 
                l = f && f.terminal || !(q = a[p].childNodes) || !q.length ? null : S(q, f ? (f.transcludeOnThisElement || !f.templateOnThisElement) && f.transclude : b), 
                (f || l) && (h.push(p, f, l), n = !0, r = r || f), f = null;
                return n ? g : null;
            }
            function X(a, b, c) {
                return function(d, e, f, g, h) {
                    return d || (d = a.$new(!1, h), d.$$transcluded = !0), b(d, e, {
                        parentBoundTranscludeFn: c,
                        transcludeControllers: f,
                        futureParentElement: g
                    });
                };
            }
            function W(a, b, c, d, g) {
                var l, h = c.$attr;
                switch (a.nodeType) {
                  case oa:
                    ca(b, ya(ua(a)), "E", d, g);
                    for (var k, q, n, r = a.attributes, p = 0, w = r && r.length; w > p; p++) {
                        var O = !1, L = !1;
                        k = r[p], l = k.name, q = U(k.value), k = ya(l), (n = fb.test(k)) && (l = l.replace(Rc, "").substr(8).replace(/_(.)/g, function(a, b) {
                            return b.toUpperCase();
                        }));
                        var u = k.replace(/(Start|End)$/, "");
                        A(u) && k === u + "Start" && (O = l, L = l.substr(0, l.length - 5) + "end", l = l.substr(0, l.length - 6)), 
                        k = ya(l.toLowerCase()), h[k] = l, (n || !c.hasOwnProperty(k)) && (c[k] = q, Lc(a, k) && (c[k] = !0)), 
                        Pa(a, b, q, k, n), ca(b, k, "A", d, g, O, L);
                    }
                    if (a = a.className, I(a) && (a = a.animVal), F(a) && "" !== a) for (;l = f.exec(a); ) k = ya(l[2]), 
                    ca(b, k, "C", d, g) && (c[k] = U(l[3])), a = a.substr(l.index + l[0].length);
                    break;

                  case pb:
                    M(b, a.nodeValue);
                    break;

                  case 8:
                    try {
                        (l = e.exec(a.nodeValue)) && (k = ya(l[1]), ca(b, k, "M", d, g) && (c[k] = U(l[2])));
                    } catch (v) {}
                }
                return b.sort(N), b;
            }
            function wa(a, b, c) {
                var d = [], e = 0;
                if (b && a.hasAttribute && a.hasAttribute(b)) {
                    do {
                        if (!a) throw ja("uterdir", b, c);
                        a.nodeType == oa && (a.hasAttribute(b) && e++, a.hasAttribute(c) && e--), d.push(a), 
                        a = a.nextSibling;
                    } while (e > 0);
                } else d.push(a);
                return B(d);
            }
            function J(a, b, c) {
                return function(d, e, f, g, h) {
                    return e = wa(e[0], b, c), a(d, e, f, g, h);
                };
            }
            function ea(a, d, e, f, g, l, k, n, r) {
                function w(a, b, c, d) {
                    a && (c && (a = J(a, c, d)), a.require = K.require, a.directiveName = z, (S === K || K.$$isolateScope) && (a = Z(a, {
                        isolateScope: !0
                    })), k.push(a)), b && (c && (b = J(b, c, d)), b.require = K.require, b.directiveName = z, 
                    (S === K || K.$$isolateScope) && (b = Z(b, {
                        isolateScope: !0
                    })), n.push(b));
                }
                function L(a, b, c, d) {
                    var e, k, f = "data", g = !1, l = c;
                    if (F(b)) {
                        if (k = b.match(h), b = b.substring(k[0].length), k[3] && (k[1] ? k[3] = null : k[1] = k[3]), 
                        "^" === k[1] ? f = "inheritedData" : "^^" === k[1] && (f = "inheritedData", l = c.parent()), 
                        "?" === k[2] && (g = !0), e = null, d && "data" === f && (e = d[b]) && (e = e.instance), 
                        e = e || l[f]("$" + b + "Controller"), !e && !g) throw ja("ctreq", b, a);
                        return e || null;
                    }
                    return D(b) && (e = [], s(b, function(b) {
                        e.push(L(a, b, c, d));
                    })), e;
                }
                function v(a, c, f, g, h) {
                    function l(a, b, c) {
                        var d;
                        return Va(a) || (c = b, b = a, a = t), H && (d = P), c || (c = H ? W.parent() : W), 
                        h(a, b, d, c, wa);
                    }
                    var r, w, u, x, P, eb, W, J;
                    if (d === f ? (J = e, W = e.$$element) : (W = B(f), J = new Xb(W, e)), S && (x = c.$new(!0)), 
                    h && (eb = l, eb.$$boundTransclude = h), C && (X = {}, P = {}, s(C, function(a) {
                        var b = {
                            $scope: a === S || a.$$isolateScope ? x : c,
                            $element: W,
                            $attrs: J,
                            $transclude: eb
                        };
                        u = a.controller, "@" == u && (u = J[a.name]), b = p(u, b, !0, a.controllerAs), 
                        P[a.name] = b, H || W.data("$" + a.name + "Controller", b.instance), X[a.name] = b;
                    })), S) {
                        E.$$addScopeInfo(W, x, !0, !(ka && (ka === S || ka === S.$$originalDirective))), 
                        E.$$addScopeClass(W, !0), g = X && X[S.name];
                        var xa = x;
                        g && g.identifier && !0 === S.bindToController && (xa = g.instance), s(x.$$isolateBindings = S.$$isolateBindings, function(a, d) {
                            var g, h, l, k, e = a.attrName, f = a.optional;
                            switch (a.mode) {
                              case "@":
                                J.$observe(e, function(a) {
                                    xa[d] = a;
                                }), J.$$observers[e].$$scope = c, J[e] && (xa[d] = b(J[e])(c));
                                break;

                              case "=":
                                if (f && !J[e]) break;
                                h = O(J[e]), k = h.literal ? fa : function(a, b) {
                                    return a === b || a !== a && b !== b;
                                }, l = h.assign || function() {
                                    throw g = xa[d] = h(c), ja("nonassign", J[e], S.name);
                                }, g = xa[d] = h(c), f = function(a) {
                                    return k(a, xa[d]) || (k(a, g) ? l(c, a = xa[d]) : xa[d] = a), g = a;
                                }, f.$stateful = !0, f = a.collection ? c.$watchCollection(J[e], f) : c.$watch(O(J[e], f), null, h.literal), 
                                x.$on("$destroy", f);
                                break;

                              case "&":
                                h = O(J[e]), xa[d] = function(a) {
                                    return h(c, a);
                                };
                            }
                        });
                    }
                    for (X && (s(X, function(a) {
                        a();
                    }), X = null), g = 0, r = k.length; r > g; g++) w = k[g], $(w, w.isolateScope ? x : c, W, J, w.require && L(w.directiveName, w.require, W, P), eb);
                    var wa = c;
                    for (S && (S.template || null === S.templateUrl) && (wa = x), a && a(wa, f.childNodes, t, h), 
                    g = n.length - 1; g >= 0; g--) w = n[g], $(w, w.isolateScope ? x : c, W, J, w.require && L(w.directiveName, w.require, W, P), eb);
                }
                r = r || {};
                for (var P, X, K, z, N, Q, x = -Number.MAX_VALUE, C = r.controllerDirectives, S = r.newIsolateScopeDirective, ka = r.templateDirective, ea = r.nonTlbTranscludeDirective, ca = !1, A = !1, H = r.hasElementTranscludeDirective, aa = e.$$element = B(d), Aa = f, M = 0, R = a.length; R > M; M++) {
                    K = a[M];
                    var Pa = K.$$start, fb = K.$$end;
                    if (Pa && (aa = wa(d, Pa, fb)), N = t, x > K.priority) break;
                    if ((N = K.scope) && (K.templateUrl || (I(N) ? (Oa("new/isolated scope", S || P, K, aa), 
                    S = K) : Oa("new/isolated scope", S, K, aa)), P = P || K), z = K.name, !K.templateUrl && K.controller && (N = K.controller, 
                    C = C || {}, Oa("'" + z + "' controller", C[z], K, aa), C[z] = K), (N = K.transclude) && (ca = !0, 
                    K.$$tlb || (Oa("transclusion", ea, K, aa), ea = K), "element" == N ? (H = !0, x = K.priority, 
                    N = aa, aa = e.$$element = B(Y.createComment(" " + z + ": " + e[z] + " ")), d = aa[0], 
                    V(g, Za.call(N, 0), d), Aa = E(N, f, x, l && l.name, {
                        nonTlbTranscludeDirective: ea
                    })) : (N = B(Tb(d)).contents(), aa.empty(), Aa = E(N, f))), K.template) if (A = !0, 
                    Oa("template", ka, K, aa), ka = K, N = G(K.template) ? K.template(aa, e) : K.template, 
                    N = Sc(N), K.replace) {
                        if (l = K, N = Rb.test(N) ? Tc(Wb(K.templateNamespace, U(N))) : [], d = N[0], 1 != N.length || d.nodeType !== oa) throw ja("tplrt", z, "");
                        V(g, aa, d), R = {
                            $attr: {}
                        }, N = W(d, [], R);
                        var ba = a.splice(M + 1, a.length - (M + 1));
                        S && y(N), a = a.concat(N).concat(ba), Qc(e, R), R = a.length;
                    } else aa.html(N);
                    if (K.templateUrl) A = !0, Oa("template", ka, K, aa), ka = K, K.replace && (l = K), 
                    v = T(a.splice(M, a.length - M), aa, e, g, ca && Aa, k, n, {
                        controllerDirectives: C,
                        newIsolateScopeDirective: S,
                        templateDirective: ka,
                        nonTlbTranscludeDirective: ea
                    }), R = a.length; else if (K.compile) try {
                        Q = K.compile(aa, e, Aa), G(Q) ? w(null, Q, Pa, fb) : Q && w(Q.pre, Q.post, Pa, fb);
                    } catch (qf) {
                        c(qf, va(aa));
                    }
                    K.terminal && (v.terminal = !0, x = Math.max(x, K.priority));
                }
                return v.scope = P && !0 === P.scope, v.transcludeOnThisElement = ca, v.elementTranscludeOnThisElement = H, 
                v.templateOnThisElement = A, v.transclude = Aa, r.hasElementTranscludeDirective = H, 
                v;
            }
            function y(a) {
                for (var b = 0, c = a.length; c > b; b++) {
                    var e, d = b;
                    e = z(Object.create(a[b]), {
                        $$isolateScope: !0
                    }), a[d] = e;
                }
            }
            function ca(b, e, f, g, h, l, k) {
                if (e === h) return null;
                if (h = null, d.hasOwnProperty(e)) {
                    var q;
                    e = a.get(e + "Directive");
                    for (var r = 0, p = e.length; p > r; r++) try {
                        if (q = e[r], (g === t || g > q.priority) && -1 != q.restrict.indexOf(f)) {
                            if (l) {
                                var w = {
                                    $$start: l,
                                    $$end: k
                                };
                                q = z(Object.create(q), w);
                            }
                            b.push(q), h = q;
                        }
                    } catch (O) {
                        c(O);
                    }
                }
                return h;
            }
            function A(b) {
                if (d.hasOwnProperty(b)) for (var c = a.get(b + "Directive"), e = 0, f = c.length; f > e; e++) if (b = c[e], 
                b.multiElement) return !0;
                return !1;
            }
            function Qc(a, b) {
                var c = b.$attr, d = a.$attr, e = a.$$element;
                s(a, function(d, e) {
                    "$" != e.charAt(0) && (b[e] && b[e] !== d && (d += ("style" === e ? ";" : " ") + b[e]), 
                    a.$set(e, d, !0, c[e]));
                }), s(b, function(b, f) {
                    "class" == f ? (P(e, b), a["class"] = (a["class"] ? a["class"] + " " : "") + b) : "style" == f ? (e.attr("style", e.attr("style") + ";" + b), 
                    a.style = (a.style ? a.style + ";" : "") + b) : "$" == f.charAt(0) || a.hasOwnProperty(f) || (a[f] = b, 
                    d[f] = c[f]);
                });
            }
            function T(a, b, c, d, e, f, g, h) {
                var k, q, l = [], n = b[0], p = a.shift(), w = z({}, p, {
                    templateUrl: null,
                    transclude: null,
                    replace: null,
                    $$originalDirective: p
                }), O = G(p.templateUrl) ? p.templateUrl(b, c) : p.templateUrl, u = p.templateNamespace;
                return b.empty(), r(L.getTrustedResourceUrl(O)).then(function(r) {
                    var L, v;
                    if (r = Sc(r), p.replace) {
                        if (r = Rb.test(r) ? Tc(Wb(u, U(r))) : [], L = r[0], 1 != r.length || L.nodeType !== oa) throw ja("tplrt", p.name, O);
                        r = {
                            $attr: {}
                        }, V(d, b, L);
                        var x = W(L, [], r);
                        I(p.scope) && y(x), a = x.concat(a), Qc(c, r);
                    } else L = n, b.html(r);
                    for (a.unshift(w), k = ea(a, L, c, e, b, p, f, g, h), s(d, function(a, c) {
                        a == L && (d[c] = b[0]);
                    }), q = S(b[0].childNodes, e); l.length; ) {
                        r = l.shift(), v = l.shift();
                        var C = l.shift(), E = l.shift(), x = b[0];
                        if (!r.$$destroyed) {
                            if (v !== n) {
                                var J = v.className;
                                h.hasElementTranscludeDirective && p.replace || (x = Tb(L)), V(C, B(v), x), P(B(x), J);
                            }
                            v = k.transcludeOnThisElement ? X(r, k.transclude, E) : E, k(q, r, x, d, v);
                        }
                    }
                    l = null;
                }), function(a, b, c, d, e) {
                    a = e, b.$$destroyed || (l ? l.push(b, c, d, a) : (k.transcludeOnThisElement && (a = X(b, k.transclude, e)), 
                    k(q, b, c, d, a)));
                };
            }
            function N(a, b) {
                var c = b.priority - a.priority;
                return 0 !== c ? c : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index;
            }
            function Oa(a, b, c, d) {
                if (b) throw ja("multidir", b.name, c.name, a, va(d));
            }
            function M(a, c) {
                var d = b(c, !0);
                d && a.push({
                    priority: 0,
                    compile: function(a) {
                        a = a.parent();
                        var b = !!a.length;
                        return b && E.$$addBindingClass(a), function(a, c) {
                            var e = c.parent();
                            b || E.$$addBindingClass(e), E.$$addBindingInfo(e, d.expressions), a.$watch(d, function(a) {
                                c[0].nodeValue = a;
                            });
                        };
                    }
                });
            }
            function Wb(a, b) {
                switch (a = Q(a || "html")) {
                  case "svg":
                  case "math":
                    var c = Y.createElement("div");
                    return c.innerHTML = "<" + a + ">" + b + "</" + a + ">", c.childNodes[0].childNodes;

                  default:
                    return b;
                }
            }
            function R(a, b) {
                if ("srcdoc" == b) return L.HTML;
                var c = ua(a);
                return "xlinkHref" == b || "form" == c && "action" == b || "img" != c && ("src" == b || "ngSrc" == b) ? L.RESOURCE_URL : void 0;
            }
            function Pa(a, c, d, e, f) {
                var h = R(a, e);
                f = g[e] || f;
                var k = b(d, !0, h, f);
                if (k) {
                    if ("multiple" === e && "select" === ua(a)) throw ja("selmulti", va(a));
                    c.push({
                        priority: 100,
                        compile: function() {
                            return {
                                pre: function(a, c, g) {
                                    if (c = g.$$observers || (g.$$observers = {}), l.test(e)) throw ja("nodomevents");
                                    var n = g[e];
                                    n !== d && (k = n && b(n, !0, h, f), d = n), k && (g[e] = k(a), (c[e] || (c[e] = [])).$$inter = !0, 
                                    (g.$$observers && g.$$observers[e].$$scope || a).$watch(k, function(a, b) {
                                        "class" === e && a != b ? g.$updateClass(a, b) : g.$set(e, a);
                                    }));
                                }
                            };
                        }
                    });
                }
            }
            function V(a, b, c) {
                var g, h, d = b[0], e = b.length, f = d.parentNode;
                if (a) for (g = 0, h = a.length; h > g; g++) if (a[g] == d) {
                    a[g++] = c, h = g + e - 1;
                    for (var l = a.length; l > g; g++, h++) l > h ? a[g] = a[h] : delete a[g];
                    a.length -= e - 1, a.context === d && (a.context = c);
                    break;
                }
                for (f && f.replaceChild(c, d), a = Y.createDocumentFragment(), a.appendChild(d), 
                B(c).data(B(d).data()), sa ? (Pb = !0, sa.cleanData([ d ])) : delete B.cache[d[B.expando]], 
                d = 1, e = b.length; e > d; d++) f = b[d], B(f).remove(), a.appendChild(f), delete b[d];
                b[0] = c, b.length = 1;
            }
            function Z(a, b) {
                return z(function() {
                    return a.apply(null, arguments);
                }, a, b);
            }
            function $(a, b, d, e, f, g) {
                try {
                    a(b, d, e, f, g);
                } catch (h) {
                    c(h, va(d));
                }
            }
            var Xb = function(a, b) {
                if (b) {
                    var d, e, f, c = Object.keys(b);
                    for (d = 0, e = c.length; e > d; d++) f = c[d], this[f] = b[f];
                } else this.$attr = {};
                this.$$element = a;
            };
            Xb.prototype = {
                $normalize: ya,
                $addClass: function(a) {
                    a && 0 < a.length && C.addClass(this.$$element, a);
                },
                $removeClass: function(a) {
                    a && 0 < a.length && C.removeClass(this.$$element, a);
                },
                $updateClass: function(a, b) {
                    var c = Uc(a, b);
                    c && c.length && C.addClass(this.$$element, c), (c = Uc(b, a)) && c.length && C.removeClass(this.$$element, c);
                },
                $set: function(a, b, d, e) {
                    var f = this.$$element[0], g = Lc(f, a), h = kf(f, a), f = a;
                    if (g ? (this.$$element.prop(a, b), e = g) : h && (this[h] = b, f = h), this[a] = b, 
                    e ? this.$attr[a] = e : (e = this.$attr[a]) || (this.$attr[a] = e = tc(a, "-")), 
                    g = ua(this.$$element), "a" === g && "href" === a || "img" === g && "src" === a) this[a] = b = x(b, "src" === a); else if ("img" === g && "srcset" === a) {
                        for (var g = "", h = U(b), l = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/, l = /\s/.test(h) ? l : /(,)/, h = h.split(l), l = Math.floor(h.length / 2), k = 0; l > k; k++) var q = 2 * k, g = g + x(U(h[q]), !0), g = g + (" " + U(h[q + 1]));
                        h = U(h[2 * k]).split(/\s/), g += x(U(h[0]), !0), 2 === h.length && (g += " " + U(h[1])), 
                        this[a] = b = g;
                    }
                    !1 !== d && (null === b || b === t ? this.$$element.removeAttr(e) : this.$$element.attr(e, b)), 
                    (a = this.$$observers) && s(a[f], function(a) {
                        try {
                            a(b);
                        } catch (d) {
                            c(d);
                        }
                    });
                },
                $observe: function(a, b) {
                    var c = this, d = c.$$observers || (c.$$observers = ha()), e = d[a] || (d[a] = []);
                    return e.push(b), v.$evalAsync(function() {
                        !e.$$inter && c.hasOwnProperty(a) && b(c[a]);
                    }), function() {
                        Xa(e, b);
                    };
                }
            };
            var Aa = b.startSymbol(), ka = b.endSymbol(), Sc = "{{" == Aa || "}}" == ka ? pa : function(a) {
                return a.replace(/\{\{/g, Aa).replace(/}}/g, ka);
            }, fb = /^ngAttr[A-Z]/;
            return E.$$addBindingInfo = k ? function(a, b) {
                var c = a.data("$binding") || [];
                D(b) ? c = c.concat(b) : c.push(b), a.data("$binding", c);
            } : H, E.$$addBindingClass = k ? function(a) {
                P(a, "ng-binding");
            } : H, E.$$addScopeInfo = k ? function(a, b, c, d) {
                a.data(c ? d ? "$isolateScopeNoTemplate" : "$isolateScope" : "$scope", b);
            } : H, E.$$addScopeClass = k ? function(a, b) {
                P(a, b ? "ng-isolate-scope" : "ng-scope");
            } : H, E;
        } ];
    }
    function ya(b) {
        return cb(b.replace(Rc, ""));
    }
    function Uc(b, a) {
        var c = "", d = b.split(/\s+/), e = a.split(/\s+/), f = 0;
        a: for (;f < d.length; f++) {
            for (var g = d[f], h = 0; h < e.length; h++) if (g == e[h]) continue a;
            c += (0 < c.length ? " " : "") + g;
        }
        return c;
    }
    function Tc(b) {
        b = B(b);
        var a = b.length;
        if (1 >= a) return b;
        for (;a--; ) 8 === b[a].nodeType && rf.call(b, a, 1);
        return b;
    }
    function Fe() {
        var b = {}, a = !1, c = /^(\S+)(\s+as\s+(\w+))?$/;
        this.register = function(a, c) {
            Ma(a, "controller"), I(a) ? z(b, a) : b[a] = c;
        }, this.allowGlobals = function() {
            a = !0;
        }, this.$get = [ "$injector", "$window", function(d, e) {
            function f(a, b, c, d) {
                if (!a || !I(a.$scope)) throw T("$controller")("noscp", d, b);
                a.$scope[b] = c;
            }
            return function(g, h, l, k) {
                var m, n, q;
                return l = !0 === l, k && F(k) && (q = k), F(g) && (k = g.match(c), n = k[1], q = q || k[3], 
                g = b.hasOwnProperty(n) ? b[n] : vc(h.$scope, n, !0) || (a ? vc(e, n, !0) : t), 
                sb(g, n, !0)), l ? (l = (D(g) ? g[g.length - 1] : g).prototype, m = Object.create(l || null), 
                q && f(h, q, m, n || g.name), z(function() {
                    return d.invoke(g, m, h, n), m;
                }, {
                    instance: m,
                    identifier: q
                })) : (m = d.instantiate(g, h, n), q && f(h, q, m, n || g.name), m);
            };
        } ];
    }
    function Ge() {
        this.$get = [ "$window", function(b) {
            return B(b.document);
        } ];
    }
    function He() {
        this.$get = [ "$log", function(b) {
            return function() {
                b.error.apply(b, arguments);
            };
        } ];
    }
    function Yb(b, a) {
        if (F(b)) {
            var c = b.replace(sf, "").trim();
            if (c) {
                var d = a("Content-Type");
                (d = d && 0 === d.indexOf(Vc)) || (d = (d = c.match(tf)) && uf[d[0]].test(c)), d && (b = oc(c));
            }
        }
        return b;
    }
    function Wc(b) {
        var c, d, e, a = ha();
        return b ? (s(b.split("\n"), function(b) {
            e = b.indexOf(":"), c = Q(U(b.substr(0, e))), d = U(b.substr(e + 1)), c && (a[c] = a[c] ? a[c] + ", " + d : d);
        }), a) : a;
    }
    function Xc(b) {
        var a = I(b) ? b : t;
        return function(c) {
            return a || (a = Wc(b)), c ? (c = a[Q(c)], void 0 === c && (c = null), c) : a;
        };
    }
    function Yc(b, a, c, d) {
        return G(d) ? d(b, a, c) : (s(d, function(d) {
            b = d(b, a, c);
        }), b);
    }
    function Ke() {
        var b = this.defaults = {
            transformResponse: [ Yb ],
            transformRequest: [ function(a) {
                return I(a) && "[object File]" !== Da.call(a) && "[object Blob]" !== Da.call(a) && "[object FormData]" !== Da.call(a) ? $a(a) : a;
            } ],
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                },
                post: ra(Zb),
                put: ra(Zb),
                patch: ra(Zb)
            },
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN"
        }, a = !1;
        this.useApplyAsync = function(b) {
            return y(b) ? (a = !!b, this) : a;
        };
        var c = this.interceptors = [];
        this.$get = [ "$httpBackend", "$browser", "$cacheFactory", "$rootScope", "$q", "$injector", function(d, e, f, g, h, l) {
            function k(a) {
                function c(a) {
                    var b = z({}, a);
                    return b.data = a.data ? Yc(a.data, a.headers, a.status, e.transformResponse) : a.data, 
                    a = a.status, a >= 200 && 300 > a ? b : h.reject(b);
                }
                function d(a) {
                    var b, c = {};
                    return s(a, function(a, d) {
                        G(a) ? (b = a(), null != b && (c[d] = b)) : c[d] = a;
                    }), c;
                }
                if (!ga.isObject(a)) throw T("$http")("badreq", a);
                var e = z({
                    method: "get",
                    transformRequest: b.transformRequest,
                    transformResponse: b.transformResponse
                }, a);
                e.headers = function(a) {
                    var f, g, c = b.headers, e = z({}, a.headers), c = z({}, c.common, c[Q(a.method)]);
                    a: for (f in c) {
                        a = Q(f);
                        for (g in e) if (Q(g) === a) continue a;
                        e[f] = c[f];
                    }
                    return d(e);
                }(a), e.method = ub(e.method);
                var f = [ function(a) {
                    var d = a.headers, e = Yc(a.data, Xc(d), t, a.transformRequest);
                    return A(e) && s(d, function(a, b) {
                        "content-type" === Q(b) && delete d[b];
                    }), A(a.withCredentials) && !A(b.withCredentials) && (a.withCredentials = b.withCredentials), 
                    m(a, e).then(c, c);
                }, t ], g = h.when(e);
                for (s(u, function(a) {
                    (a.request || a.requestError) && f.unshift(a.request, a.requestError), (a.response || a.responseError) && f.push(a.response, a.responseError);
                }); f.length; ) {
                    a = f.shift();
                    var l = f.shift(), g = g.then(a, l);
                }
                return g.success = function(a) {
                    return g.then(function(b) {
                        a(b.data, b.status, b.headers, e);
                    }), g;
                }, g.error = function(a) {
                    return g.then(null, function(b) {
                        a(b.data, b.status, b.headers, e);
                    }), g;
                }, g;
            }
            function m(c, f) {
                function l(b, c, d, e) {
                    function f() {
                        m(c, b, d, e);
                    }
                    P && (b >= 200 && 300 > b ? P.put(X, [ b, c, Wc(d), e ]) : P.remove(X)), a ? g.$applyAsync(f) : (f(), 
                    g.$$phase || g.$apply());
                }
                function m(a, b, d, e) {
                    b = Math.max(b, 0), (b >= 200 && 300 > b ? C.resolve : C.reject)({
                        data: a,
                        status: b,
                        headers: Xc(d),
                        config: c,
                        statusText: e
                    });
                }
                function w(a) {
                    m(a.data, a.status, ra(a.headers()), a.statusText);
                }
                function u() {
                    var a = k.pendingRequests.indexOf(c);
                    -1 !== a && k.pendingRequests.splice(a, 1);
                }
                var P, E, C = h.defer(), x = C.promise, s = c.headers, X = n(c.url, c.params);
                return k.pendingRequests.push(c), x.then(u, u), !c.cache && !b.cache || !1 === c.cache || "GET" !== c.method && "JSONP" !== c.method || (P = I(c.cache) ? c.cache : I(b.cache) ? b.cache : q), 
                P && (E = P.get(X), y(E) ? E && G(E.then) ? E.then(w, w) : D(E) ? m(E[1], E[0], ra(E[2]), E[3]) : m(E, 200, {}, "OK") : P.put(X, x)), 
                A(E) && ((E = Zc(c.url) ? e.cookies()[c.xsrfCookieName || b.xsrfCookieName] : t) && (s[c.xsrfHeaderName || b.xsrfHeaderName] = E), 
                d(c.method, X, f, l, s, c.timeout, c.withCredentials, c.responseType)), x;
            }
            function n(a, b) {
                if (!b) return a;
                var c = [];
                return Ed(b, function(a, b) {
                    null === a || A(a) || (D(a) || (a = [ a ]), s(a, function(a) {
                        I(a) && (a = qa(a) ? a.toISOString() : $a(a)), c.push(Fa(b) + "=" + Fa(a));
                    }));
                }), 0 < c.length && (a += (-1 == a.indexOf("?") ? "?" : "&") + c.join("&")), a;
            }
            var q = f("$http"), u = [];
            return s(c, function(a) {
                u.unshift(F(a) ? l.get(a) : l.invoke(a));
            }), k.pendingRequests = [], function() {
                s(arguments, function(a) {
                    k[a] = function(b, c) {
                        return k(z(c || {}, {
                            method: a,
                            url: b
                        }));
                    };
                });
            }("get", "delete", "head", "jsonp"), function() {
                s(arguments, function(a) {
                    k[a] = function(b, c, d) {
                        return k(z(d || {}, {
                            method: a,
                            url: b,
                            data: c
                        }));
                    };
                });
            }("post", "put", "patch"), k.defaults = b, k;
        } ];
    }
    function vf() {
        return new M.XMLHttpRequest();
    }
    function Le() {
        this.$get = [ "$browser", "$window", "$document", function(b, a, c) {
            return wf(b, vf, b.defer, a.angular.callbacks, c[0]);
        } ];
    }
    function wf(b, a, c, d, e) {
        function f(a, b, c) {
            var f = e.createElement("script"), m = null;
            return f.type = "text/javascript", f.src = a, f.async = !0, m = function(a) {
                f.removeEventListener("load", m, !1), f.removeEventListener("error", m, !1), e.body.removeChild(f), 
                f = null;
                var g = -1, u = "unknown";
                a && ("load" !== a.type || d[b].called || (a = {
                    type: "error"
                }), u = a.type, g = "error" === a.type ? 404 : 200), c && c(g, u);
            }, f.addEventListener("load", m, !1), f.addEventListener("error", m, !1), e.body.appendChild(f), 
            m;
        }
        return function(e, h, l, k, m, n, q, u) {
            function r() {
                v && v(), w && w.abort();
            }
            function O(a, d, e, f, g) {
                C !== t && c.cancel(C), v = w = null, a(d, e, f, g), b.$$completeOutstandingRequest(H);
            }
            if (b.$$incOutstandingRequestCount(), h = h || b.url(), "jsonp" == Q(e)) {
                var p = "_" + (d.counter++).toString(36);
                d[p] = function(a) {
                    d[p].data = a, d[p].called = !0;
                };
                var v = f(h.replace("JSON_CALLBACK", "angular.callbacks." + p), p, function(a, b) {
                    O(k, a, d[p].data, "", b), d[p] = H;
                });
            } else {
                var w = a();
                if (w.open(e, h, !0), s(m, function(a, b) {
                    y(a) && w.setRequestHeader(b, a);
                }), w.onload = function() {
                    var a = w.statusText || "", b = "response" in w ? w.response : w.responseText, c = 1223 === w.status ? 204 : w.status;
                    0 === c && (c = b ? 200 : "file" == Ba(h).protocol ? 404 : 0), O(k, c, b, w.getAllResponseHeaders(), a);
                }, e = function() {
                    O(k, -1, null, null, "");
                }, w.onerror = e, w.onabort = e, q && (w.withCredentials = !0), u) try {
                    w.responseType = u;
                } catch (L) {
                    if ("json" !== u) throw L;
                }
                w.send(l || null);
            }
            if (n > 0) var C = c(r, n); else n && G(n.then) && n.then(r);
        };
    }
    function Ie() {
        var b = "{{", a = "}}";
        this.startSymbol = function(a) {
            return a ? (b = a, this) : b;
        }, this.endSymbol = function(b) {
            return b ? (a = b, this) : a;
        }, this.$get = [ "$parse", "$exceptionHandler", "$sce", function(c, d, e) {
            function f(a) {
                return "\\\\\\" + a;
            }
            function g(f, g, u, r) {
                function O(c) {
                    return c.replace(k, b).replace(m, a);
                }
                function p(a) {
                    try {
                        var b = a;
                        a = u ? e.getTrusted(u, b) : e.valueOf(b);
                        var c;
                        if (r && !y(a)) c = a; else if (null == a) c = ""; else {
                            switch (typeof a) {
                              case "string":
                                break;

                              case "number":
                                a = "" + a;
                                break;

                              default:
                                a = $a(a);
                            }
                            c = a;
                        }
                        return c;
                    } catch (g) {
                        c = $b("interr", f, g.toString()), d(c);
                    }
                }
                r = !!r;
                for (var v, w, L = 0, C = [], x = [], P = f.length, E = [], s = []; P > L; ) {
                    if (-1 == (v = f.indexOf(b, L)) || -1 == (w = f.indexOf(a, v + h))) {
                        L !== P && E.push(O(f.substring(L)));
                        break;
                    }
                    L !== v && E.push(O(f.substring(L, v))), L = f.substring(v + h, w), C.push(L), x.push(c(L, p)), 
                    L = w + l, s.push(E.length), E.push("");
                }
                if (u && 1 < E.length) throw $b("noconcat", f);
                if (!g || C.length) {
                    var X = function(a) {
                        for (var b = 0, c = C.length; c > b; b++) {
                            if (r && A(a[b])) return;
                            E[s[b]] = a[b];
                        }
                        return E.join("");
                    };
                    return z(function(a) {
                        var b = 0, c = C.length, e = Array(c);
                        try {
                            for (;c > b; b++) e[b] = x[b](a);
                            return X(e);
                        } catch (g) {
                            a = $b("interr", f, g.toString()), d(a);
                        }
                    }, {
                        exp: f,
                        expressions: C,
                        $$watchDelegate: function(a, b, c) {
                            var d;
                            return a.$watchGroup(x, function(c, e) {
                                var f = X(c);
                                G(b) && b.call(this, f, c !== e ? d : f, a), d = f;
                            }, c);
                        }
                    });
                }
            }
            var h = b.length, l = a.length, k = new RegExp(b.replace(/./g, f), "g"), m = new RegExp(a.replace(/./g, f), "g");
            return g.startSymbol = function() {
                return b;
            }, g.endSymbol = function() {
                return a;
            }, g;
        } ];
    }
    function Je() {
        this.$get = [ "$rootScope", "$window", "$q", "$$q", function(b, a, c, d) {
            function e(e, h, l, k) {
                var m = a.setInterval, n = a.clearInterval, q = 0, u = y(k) && !k, r = (u ? d : c).defer(), O = r.promise;
                return l = y(l) ? l : 0, O.then(null, null, e), O.$$intervalId = m(function() {
                    r.notify(q++), l > 0 && q >= l && (r.resolve(q), n(O.$$intervalId), delete f[O.$$intervalId]), 
                    u || b.$apply();
                }, h), f[O.$$intervalId] = r, O;
            }
            var f = {};
            return e.cancel = function(b) {
                return b && b.$$intervalId in f ? (f[b.$$intervalId].reject("canceled"), a.clearInterval(b.$$intervalId), 
                delete f[b.$$intervalId], !0) : !1;
            }, e;
        } ];
    }
    function Rd() {
        this.$get = function() {
            return {
                id: "en-us",
                NUMBER_FORMATS: {
                    DECIMAL_SEP: ".",
                    GROUP_SEP: ",",
                    PATTERNS: [ {
                        minInt: 1,
                        minFrac: 0,
                        maxFrac: 3,
                        posPre: "",
                        posSuf: "",
                        negPre: "-",
                        negSuf: "",
                        gSize: 3,
                        lgSize: 3
                    }, {
                        minInt: 1,
                        minFrac: 2,
                        maxFrac: 2,
                        posPre: "¤",
                        posSuf: "",
                        negPre: "(¤",
                        negSuf: ")",
                        gSize: 3,
                        lgSize: 3
                    } ],
                    CURRENCY_SYM: "$"
                },
                DATETIME_FORMATS: {
                    MONTH: "January February March April May June July August September October November December".split(" "),
                    SHORTMONTH: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
                    DAY: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
                    SHORTDAY: "Sun Mon Tue Wed Thu Fri Sat".split(" "),
                    AMPMS: [ "AM", "PM" ],
                    medium: "MMM d, y h:mm:ss a",
                    "short": "M/d/yy h:mm a",
                    fullDate: "EEEE, MMMM d, y",
                    longDate: "MMMM d, y",
                    mediumDate: "MMM d, y",
                    shortDate: "M/d/yy",
                    mediumTime: "h:mm:ss a",
                    shortTime: "h:mm a"
                },
                pluralCat: function(b) {
                    return 1 === b ? "one" : "other";
                }
            };
        };
    }
    function ac(b) {
        b = b.split("/");
        for (var a = b.length; a--; ) b[a] = qb(b[a]);
        return b.join("/");
    }
    function $c(b, a) {
        var c = Ba(b);
        a.$$protocol = c.protocol, a.$$host = c.hostname, a.$$port = ba(c.port) || xf[c.protocol] || null;
    }
    function ad(b, a) {
        var c = "/" !== b.charAt(0);
        c && (b = "/" + b);
        var d = Ba(b);
        a.$$path = decodeURIComponent(c && "/" === d.pathname.charAt(0) ? d.pathname.substring(1) : d.pathname), 
        a.$$search = qc(d.search), a.$$hash = decodeURIComponent(d.hash), a.$$path && "/" != a.$$path.charAt(0) && (a.$$path = "/" + a.$$path);
    }
    function za(b, a) {
        return 0 === a.indexOf(b) ? a.substr(b.length) : void 0;
    }
    function Ha(b) {
        var a = b.indexOf("#");
        return -1 == a ? b : b.substr(0, a);
    }
    function bd(b) {
        return b.replace(/(#.+)|#$/, "$1");
    }
    function bc(b) {
        return b.substr(0, Ha(b).lastIndexOf("/") + 1);
    }
    function cc(b, a) {
        this.$$html5 = !0, a = a || "";
        var c = bc(b);
        $c(b, this), this.$$parse = function(a) {
            var b = za(c, a);
            if (!F(b)) throw Fb("ipthprfx", a, c);
            ad(b, this), this.$$path || (this.$$path = "/"), this.$$compose();
        }, this.$$compose = function() {
            var a = Nb(this.$$search), b = this.$$hash ? "#" + qb(this.$$hash) : "";
            this.$$url = ac(this.$$path) + (a ? "?" + a : "") + b, this.$$absUrl = c + this.$$url.substr(1);
        }, this.$$parseLinkUrl = function(d, e) {
            if (e && "#" === e[0]) return this.hash(e.slice(1)), !0;
            var f, g;
            return (f = za(b, d)) !== t ? (g = f, g = (f = za(a, f)) !== t ? c + (za("/", f) || f) : b + g) : (f = za(c, d)) !== t ? g = c + f : c == d + "/" && (g = c), 
            g && this.$$parse(g), !!g;
        };
    }
    function dc(b, a) {
        var c = bc(b);
        $c(b, this), this.$$parse = function(d) {
            d = za(b, d) || za(c, d);
            var e;
            "#" === d.charAt(0) ? (e = za(a, d), A(e) && (e = d)) : e = this.$$html5 ? d : "", 
            ad(e, this), d = this.$$path;
            var f = /^\/[A-Z]:(\/.*)/;
            0 === e.indexOf(b) && (e = e.replace(b, "")), f.exec(e) || (d = (e = f.exec(d)) ? e[1] : d), 
            this.$$path = d, this.$$compose();
        }, this.$$compose = function() {
            var c = Nb(this.$$search), e = this.$$hash ? "#" + qb(this.$$hash) : "";
            this.$$url = ac(this.$$path) + (c ? "?" + c : "") + e, this.$$absUrl = b + (this.$$url ? a + this.$$url : "");
        }, this.$$parseLinkUrl = function(a) {
            return Ha(b) == Ha(a) ? (this.$$parse(a), !0) : !1;
        };
    }
    function cd(b, a) {
        this.$$html5 = !0, dc.apply(this, arguments);
        var c = bc(b);
        this.$$parseLinkUrl = function(d, e) {
            if (e && "#" === e[0]) return this.hash(e.slice(1)), !0;
            var f, g;
            return b == Ha(d) ? f = d : (g = za(c, d)) ? f = b + a + g : c === d + "/" && (f = c), 
            f && this.$$parse(f), !!f;
        }, this.$$compose = function() {
            var c = Nb(this.$$search), e = this.$$hash ? "#" + qb(this.$$hash) : "";
            this.$$url = ac(this.$$path) + (c ? "?" + c : "") + e, this.$$absUrl = b + a + this.$$url;
        };
    }
    function Gb(b) {
        return function() {
            return this[b];
        };
    }
    function dd(b, a) {
        return function(c) {
            return A(c) ? this[b] : (this[b] = a(c), this.$$compose(), this);
        };
    }
    function Me() {
        var b = "", a = {
            enabled: !1,
            requireBase: !0,
            rewriteLinks: !0
        };
        this.hashPrefix = function(a) {
            return y(a) ? (b = a, this) : b;
        }, this.html5Mode = function(b) {
            return Wa(b) ? (a.enabled = b, this) : I(b) ? (Wa(b.enabled) && (a.enabled = b.enabled), 
            Wa(b.requireBase) && (a.requireBase = b.requireBase), Wa(b.rewriteLinks) && (a.rewriteLinks = b.rewriteLinks), 
            this) : a;
        }, this.$get = [ "$rootScope", "$browser", "$sniffer", "$rootElement", "$window", function(c, d, e, f, g) {
            function h(a, b, c) {
                var e = k.url(), f = k.$$state;
                try {
                    d.url(a, b, c), k.$$state = d.state();
                } catch (g) {
                    throw k.url(e), k.$$state = f, g;
                }
            }
            function l(a, b) {
                c.$broadcast("$locationChangeSuccess", k.absUrl(), a, k.$$state, b);
            }
            var k, m;
            m = d.baseHref();
            var q, n = d.url();
            if (a.enabled) {
                if (!m && a.requireBase) throw Fb("nobase");
                q = n.substring(0, n.indexOf("/", n.indexOf("//") + 2)) + (m || "/"), m = e.history ? cc : cd;
            } else q = Ha(n), m = dc;
            k = new m(q, "#" + b), k.$$parseLinkUrl(n, n), k.$$state = d.state();
            var u = /^\s*(javascript|mailto):/i;
            f.on("click", function(b) {
                if (a.rewriteLinks && !b.ctrlKey && !b.metaKey && !b.shiftKey && 2 != b.which && 2 != b.button) {
                    for (var e = B(b.target); "a" !== ua(e[0]); ) if (e[0] === f[0] || !(e = e.parent())[0]) return;
                    var h = e.prop("href"), l = e.attr("href") || e.attr("xlink:href");
                    I(h) && "[object SVGAnimatedString]" === h.toString() && (h = Ba(h.animVal).href), 
                    u.test(h) || !h || e.attr("target") || b.isDefaultPrevented() || !k.$$parseLinkUrl(h, l) || (b.preventDefault(), 
                    k.absUrl() != d.url() && (c.$apply(), g.angular["ff-684208-preventDefault"] = !0));
                }
            }), k.absUrl() != n && d.url(k.absUrl(), !0);
            var r = !0;
            return d.onUrlChange(function(a, b) {
                c.$evalAsync(function() {
                    var f, d = k.absUrl(), e = k.$$state;
                    k.$$parse(a), k.$$state = b, f = c.$broadcast("$locationChangeStart", a, d, b, e).defaultPrevented, 
                    k.absUrl() === a && (f ? (k.$$parse(d), k.$$state = e, h(d, !1, e)) : (r = !1, l(d, e)));
                }), c.$$phase || c.$digest();
            }), c.$watch(function() {
                var a = bd(d.url()), b = bd(k.absUrl()), f = d.state(), g = k.$$replace, q = a !== b || k.$$html5 && e.history && f !== k.$$state;
                (r || q) && (r = !1, c.$evalAsync(function() {
                    var b = k.absUrl(), d = c.$broadcast("$locationChangeStart", b, a, k.$$state, f).defaultPrevented;
                    k.absUrl() === b && (d ? (k.$$parse(a), k.$$state = f) : (q && h(b, g, f === k.$$state ? null : k.$$state), 
                    l(a, f)));
                })), k.$$replace = !1;
            }), k;
        } ];
    }
    function Ne() {
        var b = !0, a = this;
        this.debugEnabled = function(a) {
            return y(a) ? (b = a, this) : b;
        }, this.$get = [ "$window", function(c) {
            function d(a) {
                return a instanceof Error && (a.stack ? a = a.message && -1 === a.stack.indexOf(a.message) ? "Error: " + a.message + "\n" + a.stack : a.stack : a.sourceURL && (a = a.message + "\n" + a.sourceURL + ":" + a.line)), 
                a;
            }
            function e(a) {
                var b = c.console || {}, e = b[a] || b.log || H;
                a = !1;
                try {
                    a = !!e.apply;
                } catch (l) {}
                return a ? function() {
                    var a = [];
                    return s(arguments, function(b) {
                        a.push(d(b));
                    }), e.apply(b, a);
                } : function(a, b) {
                    e(a, null == b ? "" : b);
                };
            }
            return {
                log: e("log"),
                info: e("info"),
                warn: e("warn"),
                error: e("error"),
                debug: function() {
                    var c = e("debug");
                    return function() {
                        b && c.apply(a, arguments);
                    };
                }()
            };
        } ];
    }
    function ta(b, a) {
        if ("__defineGetter__" === b || "__defineSetter__" === b || "__lookupGetter__" === b || "__lookupSetter__" === b || "__proto__" === b) throw la("isecfld", a);
        return b;
    }
    function ma(b, a) {
        if (b) {
            if (b.constructor === b) throw la("isecfn", a);
            if (b.window === b) throw la("isecwindow", a);
            if (b.children && (b.nodeName || b.prop && b.attr && b.find)) throw la("isecdom", a);
            if (b === Object) throw la("isecobj", a);
        }
        return b;
    }
    function ec(b) {
        return b.constant;
    }
    function gb(b, a, c, d, e) {
        ma(b, e), ma(a, e), c = c.split(".");
        for (var f, g = 0; 1 < c.length; g++) {
            f = ta(c.shift(), e);
            var h = 0 === g && a && a[f] || b[f];
            h || (h = {}, b[f] = h), b = ma(h, e);
        }
        return f = ta(c.shift(), e), ma(b[f], e), b[f] = d;
    }
    function Qa(b) {
        return "constructor" == b;
    }
    function ed(b, a, c, d, e, f, g) {
        ta(b, f), ta(a, f), ta(c, f), ta(d, f), ta(e, f);
        var h = function(a) {
            return ma(a, f);
        }, l = g || Qa(b) ? h : pa, k = g || Qa(a) ? h : pa, m = g || Qa(c) ? h : pa, n = g || Qa(d) ? h : pa, q = g || Qa(e) ? h : pa;
        return function(f, g) {
            var h = g && g.hasOwnProperty(b) ? g : f;
            return null == h ? h : (h = l(h[b]), a ? null == h ? t : (h = k(h[a]), c ? null == h ? t : (h = m(h[c]), 
            d ? null == h ? t : (h = n(h[d]), e ? null == h ? t : h = q(h[e]) : h) : h) : h) : h);
        };
    }
    function yf(b, a) {
        return function(c, d) {
            return b(c, d, ma, a);
        };
    }
    function zf(b, a, c) {
        var d = a.expensiveChecks, e = d ? Af : Bf, f = e[b];
        if (f) return f;
        var g = b.split("."), h = g.length;
        if (a.csp) f = 6 > h ? ed(g[0], g[1], g[2], g[3], g[4], c, d) : function(a, b) {
            var f, e = 0;
            do f = ed(g[e++], g[e++], g[e++], g[e++], g[e++], c, d)(a, b), b = t, a = f; while (h > e);
            return f;
        }; else {
            var l = "";
            d && (l += "s = eso(s, fe);\nl = eso(l, fe);\n");
            var k = d;
            s(g, function(a, b) {
                ta(a, c);
                var e = (b ? "s" : '((l&&l.hasOwnProperty("' + a + '"))?l:s)') + "." + a;
                (d || Qa(a)) && (e = "eso(" + e + ", fe)", k = !0), l += "if(s == null) return undefined;\ns=" + e + ";\n";
            }), l += "return s;", a = new Function("s", "l", "eso", "fe", l), a.toString = da(l), 
            k && (a = yf(a, c)), f = a;
        }
        return f.sharedGetter = !0, f.assign = function(a, c, d) {
            return gb(a, d, b, c, b);
        }, e[b] = f;
    }
    function fc(b) {
        return G(b.valueOf) ? b.valueOf() : Cf.call(b);
    }
    function Oe() {
        var b = ha(), a = ha();
        this.$get = [ "$filter", "$sniffer", function(c, d) {
            function e(a) {
                var b = a;
                return a.sharedGetter && (b = function(b, c) {
                    return a(b, c);
                }, b.literal = a.literal, b.constant = a.constant, b.assign = a.assign), b;
            }
            function f(a, b) {
                for (var c = 0, d = a.length; d > c; c++) {
                    var e = a[c];
                    e.constant || (e.inputs ? f(e.inputs, b) : -1 === b.indexOf(e) && b.push(e));
                }
                return b;
            }
            function g(a, b) {
                return null == a || null == b ? a === b : "object" == typeof a && (a = fc(a), "object" == typeof a) ? !1 : a === b || a !== a && b !== b;
            }
            function h(a, b, c, d) {
                var h, e = d.$$inputs || (d.$$inputs = f(d.inputs, []));
                if (1 === e.length) {
                    var l = g, e = e[0];
                    return a.$watch(function(a) {
                        var b = e(a);
                        return g(b, l) || (h = d(a), l = b && fc(b)), h;
                    }, b, c);
                }
                for (var k = [], q = 0, n = e.length; n > q; q++) k[q] = g;
                return a.$watch(function(a) {
                    for (var b = !1, c = 0, f = e.length; f > c; c++) {
                        var l = e[c](a);
                        (b || (b = !g(l, k[c]))) && (k[c] = l && fc(l));
                    }
                    return b && (h = d(a)), h;
                }, b, c);
            }
            function l(a, b, c, d) {
                var e, f;
                return e = a.$watch(function(a) {
                    return d(a);
                }, function(a, c, d) {
                    f = a, G(b) && b.apply(this, arguments), y(a) && d.$$postDigest(function() {
                        y(f) && e();
                    });
                }, c);
            }
            function k(a, b, c, d) {
                function e(a) {
                    var b = !0;
                    return s(a, function(a) {
                        y(a) || (b = !1);
                    }), b;
                }
                var f, g;
                return f = a.$watch(function(a) {
                    return d(a);
                }, function(a, c, d) {
                    g = a, G(b) && b.call(this, a, c, d), e(a) && d.$$postDigest(function() {
                        e(g) && f();
                    });
                }, c);
            }
            function m(a, b, c, d) {
                var e;
                return e = a.$watch(function(a) {
                    return d(a);
                }, function() {
                    G(b) && b.apply(this, arguments), e();
                }, c);
            }
            function n(a, b) {
                if (!b) return a;
                var c = a.$$watchDelegate, c = c !== k && c !== l ? function(c, d) {
                    var e = a(c, d);
                    return b(e, c, d);
                } : function(c, d) {
                    var e = a(c, d), f = b(e, c, d);
                    return y(e) ? f : e;
                };
                return a.$$watchDelegate && a.$$watchDelegate !== h ? c.$$watchDelegate = a.$$watchDelegate : b.$stateful || (c.$$watchDelegate = h, 
                c.inputs = [ a ]), c;
            }
            var q = {
                csp: d.csp,
                expensiveChecks: !1
            }, u = {
                csp: d.csp,
                expensiveChecks: !0
            };
            return function(d, f, g) {
                var v, w, L;
                switch (typeof d) {
                  case "string":
                    L = d = d.trim();
                    var C = g ? a : b;
                    return v = C[L], v || (":" === d.charAt(0) && ":" === d.charAt(1) && (w = !0, d = d.substring(2)), 
                    g = g ? u : q, v = new gc(g), v = new hb(v, c, g).parse(d), v.constant ? v.$$watchDelegate = m : w ? (v = e(v), 
                    v.$$watchDelegate = v.literal ? k : l) : v.inputs && (v.$$watchDelegate = h), C[L] = v), 
                    n(v, f);

                  case "function":
                    return n(d, f);

                  default:
                    return n(H, f);
                }
            };
        } ];
    }
    function Qe() {
        this.$get = [ "$rootScope", "$exceptionHandler", function(b, a) {
            return fd(function(a) {
                b.$evalAsync(a);
            }, a);
        } ];
    }
    function Re() {
        this.$get = [ "$browser", "$exceptionHandler", function(b, a) {
            return fd(function(a) {
                b.defer(a);
            }, a);
        } ];
    }
    function fd(b, a) {
        function c(a, b, c) {
            function d(b) {
                return function(c) {
                    e || (e = !0, b.call(a, c));
                };
            }
            var e = !1;
            return [ d(b), d(c) ];
        }
        function d() {
            this.$$state = {
                status: 0
            };
        }
        function e(a, b) {
            return function(c) {
                b.call(a, c);
            };
        }
        function f(c) {
            !c.processScheduled && c.pending && (c.processScheduled = !0, b(function() {
                var b, d, e;
                e = c.pending, c.processScheduled = !1, c.pending = t;
                for (var f = 0, g = e.length; g > f; ++f) {
                    d = e[f][0], b = e[f][c.status];
                    try {
                        G(b) ? d.resolve(b(c.value)) : 1 === c.status ? d.resolve(c.value) : d.reject(c.value);
                    } catch (h) {
                        d.reject(h), a(h);
                    }
                }
            }));
        }
        function g() {
            this.promise = new d(), this.resolve = e(this, this.resolve), this.reject = e(this, this.reject), 
            this.notify = e(this, this.notify);
        }
        var h = T("$q", TypeError);
        d.prototype = {
            then: function(a, b, c) {
                var d = new g();
                return this.$$state.pending = this.$$state.pending || [], this.$$state.pending.push([ d, a, b, c ]), 
                0 < this.$$state.status && f(this.$$state), d.promise;
            },
            "catch": function(a) {
                return this.then(null, a);
            },
            "finally": function(a, b) {
                return this.then(function(b) {
                    return k(b, !0, a);
                }, function(b) {
                    return k(b, !1, a);
                }, b);
            }
        }, g.prototype = {
            resolve: function(a) {
                this.promise.$$state.status || (a === this.promise ? this.$$reject(h("qcycle", a)) : this.$$resolve(a));
            },
            $$resolve: function(b) {
                var d, e;
                e = c(this, this.$$resolve, this.$$reject);
                try {
                    (I(b) || G(b)) && (d = b && b.then), G(d) ? (this.promise.$$state.status = -1, d.call(b, e[0], e[1], this.notify)) : (this.promise.$$state.value = b, 
                    this.promise.$$state.status = 1, f(this.promise.$$state));
                } catch (g) {
                    e[1](g), a(g);
                }
            },
            reject: function(a) {
                this.promise.$$state.status || this.$$reject(a);
            },
            $$reject: function(a) {
                this.promise.$$state.value = a, this.promise.$$state.status = 2, f(this.promise.$$state);
            },
            notify: function(c) {
                var d = this.promise.$$state.pending;
                0 >= this.promise.$$state.status && d && d.length && b(function() {
                    for (var b, e, f = 0, g = d.length; g > f; f++) {
                        e = d[f][0], b = d[f][3];
                        try {
                            e.notify(G(b) ? b(c) : c);
                        } catch (h) {
                            a(h);
                        }
                    }
                });
            }
        };
        var l = function(a, b) {
            var c = new g();
            return b ? c.resolve(a) : c.reject(a), c.promise;
        }, k = function(a, b, c) {
            var d = null;
            try {
                G(c) && (d = c());
            } catch (e) {
                return l(e, !1);
            }
            return d && G(d.then) ? d.then(function() {
                return l(a, b);
            }, function(a) {
                return l(a, !1);
            }) : l(a, b);
        }, m = function(a, b, c, d) {
            var e = new g();
            return e.resolve(a), e.promise.then(b, c, d);
        }, n = function u(a) {
            if (!G(a)) throw h("norslvr", a);
            if (!(this instanceof u)) return new u(a);
            var b = new g();
            return a(function(a) {
                b.resolve(a);
            }, function(a) {
                b.reject(a);
            }), b.promise;
        };
        return n.defer = function() {
            return new g();
        }, n.reject = function(a) {
            var b = new g();
            return b.reject(a), b.promise;
        }, n.when = m, n.all = function(a) {
            var b = new g(), c = 0, d = D(a) ? [] : {};
            return s(a, function(a, e) {
                c++, m(a).then(function(a) {
                    d.hasOwnProperty(e) || (d[e] = a, --c || b.resolve(d));
                }, function(a) {
                    d.hasOwnProperty(e) || b.reject(a);
                });
            }), 0 === c && b.resolve(d), b.promise;
        }, n;
    }
    function $e() {
        this.$get = [ "$window", "$timeout", function(b, a) {
            var c = b.requestAnimationFrame || b.webkitRequestAnimationFrame, d = b.cancelAnimationFrame || b.webkitCancelAnimationFrame || b.webkitCancelRequestAnimationFrame, e = !!c, f = e ? function(a) {
                var b = c(a);
                return function() {
                    d(b);
                };
            } : function(b) {
                var c = a(b, 16.66, !1);
                return function() {
                    a.cancel(c);
                };
            };
            return f.supported = e, f;
        } ];
    }
    function Pe() {
        var b = 10, a = T("$rootScope"), c = null, d = null;
        this.digestTtl = function(a) {
            return arguments.length && (b = a), b;
        }, this.$get = [ "$injector", "$exceptionHandler", "$parse", "$browser", function(e, f, g, h) {
            function l() {
                this.$id = ++nb, this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null, 
                this.$root = this, this.$$destroyed = !1, this.$$listeners = {}, this.$$listenerCount = {}, 
                this.$$isolateBindings = null;
            }
            function k(b) {
                if (r.$$phase) throw a("inprog", r.$$phase);
                r.$$phase = b;
            }
            function m(a, b, c) {
                do a.$$listenerCount[c] -= b, 0 === a.$$listenerCount[c] && delete a.$$listenerCount[c]; while (a = a.$parent);
            }
            function n() {}
            function q() {
                for (;v.length; ) try {
                    v.shift()();
                } catch (a) {
                    f(a);
                }
                d = null;
            }
            function u() {
                null === d && (d = h.defer(function() {
                    r.$apply(q);
                }));
            }
            l.prototype = {
                constructor: l,
                $new: function(a, b) {
                    function c() {
                        d.$$destroyed = !0;
                    }
                    var d;
                    return b = b || this, a ? (d = new l(), d.$root = this.$root) : (this.$$ChildScope || (this.$$ChildScope = function() {
                        this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null, 
                        this.$$listeners = {}, this.$$listenerCount = {}, this.$id = ++nb, this.$$ChildScope = null;
                    }, this.$$ChildScope.prototype = this), d = new this.$$ChildScope()), d.$parent = b, 
                    d.$$prevSibling = b.$$childTail, b.$$childHead ? (b.$$childTail.$$nextSibling = d, 
                    b.$$childTail = d) : b.$$childHead = b.$$childTail = d, (a || b != this) && d.$on("$destroy", c), 
                    d;
                },
                $watch: function(a, b, d) {
                    var e = g(a);
                    if (e.$$watchDelegate) return e.$$watchDelegate(this, b, d, e);
                    var f = this.$$watchers, h = {
                        fn: b,
                        last: n,
                        get: e,
                        exp: a,
                        eq: !!d
                    };
                    return c = null, G(b) || (h.fn = H), f || (f = this.$$watchers = []), f.unshift(h), 
                    function() {
                        Xa(f, h), c = null;
                    };
                },
                $watchGroup: function(a, b) {
                    function c() {
                        h = !1, l ? (l = !1, b(e, e, g)) : b(e, d, g);
                    }
                    var d = Array(a.length), e = Array(a.length), f = [], g = this, h = !1, l = !0;
                    if (!a.length) {
                        var k = !0;
                        return g.$evalAsync(function() {
                            k && b(e, e, g);
                        }), function() {
                            k = !1;
                        };
                    }
                    return 1 === a.length ? this.$watch(a[0], function(a, c, f) {
                        e[0] = a, d[0] = c, b(e, a === c ? e : d, f);
                    }) : (s(a, function(a, b) {
                        var l = g.$watch(a, function(a, f) {
                            e[b] = a, d[b] = f, h || (h = !0, g.$evalAsync(c));
                        });
                        f.push(l);
                    }), function() {
                        for (;f.length; ) f.shift()();
                    });
                },
                $watchCollection: function(a, b) {
                    function c(a) {
                        e = a;
                        var b, d, g, h;
                        if (!A(e)) {
                            if (I(e)) if (Ta(e)) for (f !== q && (f = q, u = f.length = 0, k++), a = e.length, 
                            u !== a && (k++, f.length = u = a), b = 0; a > b; b++) h = f[b], g = e[b], d = h !== h && g !== g, 
                            d || h === g || (k++, f[b] = g); else {
                                f !== m && (f = m = {}, u = 0, k++), a = 0;
                                for (b in e) e.hasOwnProperty(b) && (a++, g = e[b], h = f[b], b in f ? (d = h !== h && g !== g, 
                                d || h === g || (k++, f[b] = g)) : (u++, f[b] = g, k++));
                                if (u > a) for (b in k++, f) e.hasOwnProperty(b) || (u--, delete f[b]);
                            } else f !== e && (f = e, k++);
                            return k;
                        }
                    }
                    c.$stateful = !0;
                    var e, f, h, d = this, l = 1 < b.length, k = 0, n = g(a, c), q = [], m = {}, p = !0, u = 0;
                    return this.$watch(n, function() {
                        if (p ? (p = !1, b(e, e, d)) : b(e, h, d), l) if (I(e)) if (Ta(e)) {
                            h = Array(e.length);
                            for (var a = 0; a < e.length; a++) h[a] = e[a];
                        } else for (a in h = {}, e) rc.call(e, a) && (h[a] = e[a]); else h = e;
                    });
                },
                $digest: function() {
                    var e, g, l, m, u, v, t, y, J, s = b, W = [];
                    k("$digest"), h.$$checkUrlChange(), this === r && null !== d && (h.defer.cancel(d), 
                    q()), c = null;
                    do {
                        for (v = !1, t = this; O.length; ) {
                            try {
                                J = O.shift(), J.scope.$eval(J.expression, J.locals);
                            } catch (B) {
                                f(B);
                            }
                            c = null;
                        }
                        a: do {
                            if (m = t.$$watchers) for (u = m.length; u--; ) try {
                                if (e = m[u]) if ((g = e.get(t)) === (l = e.last) || (e.eq ? fa(g, l) : "number" == typeof g && "number" == typeof l && isNaN(g) && isNaN(l))) {
                                    if (e === c) {
                                        v = !1;
                                        break a;
                                    }
                                } else v = !0, c = e, e.last = e.eq ? Ea(g, null) : g, e.fn(g, l === n ? g : l, t), 
                                5 > s && (y = 4 - s, W[y] || (W[y] = []), W[y].push({
                                    msg: G(e.exp) ? "fn: " + (e.exp.name || e.exp.toString()) : e.exp,
                                    newVal: g,
                                    oldVal: l
                                }));
                            } catch (A) {
                                f(A);
                            }
                            if (!(m = t.$$childHead || t !== this && t.$$nextSibling)) for (;t !== this && !(m = t.$$nextSibling); ) t = t.$parent;
                        } while (t = m);
                        if ((v || O.length) && !s--) throw r.$$phase = null, a("infdig", b, W);
                    } while (v || O.length);
                    for (r.$$phase = null; p.length; ) try {
                        p.shift()();
                    } catch (ca) {
                        f(ca);
                    }
                },
                $destroy: function() {
                    if (!this.$$destroyed) {
                        var a = this.$parent;
                        if (this.$broadcast("$destroy"), this.$$destroyed = !0, this !== r) {
                            for (var b in this.$$listenerCount) m(this, this.$$listenerCount[b], b);
                            a.$$childHead == this && (a.$$childHead = this.$$nextSibling), a.$$childTail == this && (a.$$childTail = this.$$prevSibling), 
                            this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling), this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling), 
                            this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = H, 
                            this.$on = this.$watch = this.$watchGroup = function() {
                                return H;
                            }, this.$$listeners = {}, this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = this.$$watchers = null;
                        }
                    }
                },
                $eval: function(a, b) {
                    return g(a)(this, b);
                },
                $evalAsync: function(a, b) {
                    r.$$phase || O.length || h.defer(function() {
                        O.length && r.$digest();
                    }), O.push({
                        scope: this,
                        expression: a,
                        locals: b
                    });
                },
                $$postDigest: function(a) {
                    p.push(a);
                },
                $apply: function(a) {
                    try {
                        return k("$apply"), this.$eval(a);
                    } catch (b) {
                        f(b);
                    } finally {
                        r.$$phase = null;
                        try {
                            r.$digest();
                        } catch (c) {
                            throw f(c), c;
                        }
                    }
                },
                $applyAsync: function(a) {
                    function b() {
                        c.$eval(a);
                    }
                    var c = this;
                    a && v.push(b), u();
                },
                $on: function(a, b) {
                    var c = this.$$listeners[a];
                    c || (this.$$listeners[a] = c = []), c.push(b);
                    var d = this;
                    do d.$$listenerCount[a] || (d.$$listenerCount[a] = 0), d.$$listenerCount[a]++; while (d = d.$parent);
                    var e = this;
                    return function() {
                        var d = c.indexOf(b);
                        -1 !== d && (c[d] = null, m(e, 1, a));
                    };
                },
                $emit: function(a) {
                    var d, k, m, c = [], e = this, g = !1, h = {
                        name: a,
                        targetScope: e,
                        stopPropagation: function() {
                            g = !0;
                        },
                        preventDefault: function() {
                            h.defaultPrevented = !0;
                        },
                        defaultPrevented: !1
                    }, l = Ya([ h ], arguments, 1);
                    do {
                        for (d = e.$$listeners[a] || c, h.currentScope = e, k = 0, m = d.length; m > k; k++) if (d[k]) try {
                            d[k].apply(null, l);
                        } catch (n) {
                            f(n);
                        } else d.splice(k, 1), k--, m--;
                        if (g) return h.currentScope = null, h;
                        e = e.$parent;
                    } while (e);
                    return h.currentScope = null, h;
                },
                $broadcast: function(a) {
                    var c = this, d = this, e = {
                        name: a,
                        targetScope: this,
                        preventDefault: function() {
                            e.defaultPrevented = !0;
                        },
                        defaultPrevented: !1
                    };
                    if (!this.$$listenerCount[a]) return e;
                    for (var h, l, g = Ya([ e ], arguments, 1); c = d; ) {
                        for (e.currentScope = c, d = c.$$listeners[a] || [], h = 0, l = d.length; l > h; h++) if (d[h]) try {
                            d[h].apply(null, g);
                        } catch (k) {
                            f(k);
                        } else d.splice(h, 1), h--, l--;
                        if (!(d = c.$$listenerCount[a] && c.$$childHead || c !== this && c.$$nextSibling)) for (;c !== this && !(d = c.$$nextSibling); ) c = c.$parent;
                    }
                    return e.currentScope = null, e;
                }
            };
            var r = new l(), O = r.$$asyncQueue = [], p = r.$$postDigestQueue = [], v = r.$$applyAsyncQueue = [];
            return r;
        } ];
    }
    function Sd() {
        var b = /^\s*(https?|ftp|mailto|tel|file):/, a = /^\s*((https?|ftp|file|blob):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function(a) {
            return y(a) ? (b = a, this) : b;
        }, this.imgSrcSanitizationWhitelist = function(b) {
            return y(b) ? (a = b, this) : a;
        }, this.$get = function() {
            return function(c, d) {
                var f, e = d ? a : b;
                return f = Ba(c).href, "" === f || f.match(e) ? c : "unsafe:" + f;
            };
        };
    }
    function Df(b) {
        if ("self" === b) return b;
        if (F(b)) {
            if (-1 < b.indexOf("***")) throw Ca("iwcard", b);
            return b = gd(b).replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*"), new RegExp("^" + b + "$");
        }
        if (ob(b)) return new RegExp("^" + b.source + "$");
        throw Ca("imatcher");
    }
    function hd(b) {
        var a = [];
        return y(b) && s(b, function(b) {
            a.push(Df(b));
        }), a;
    }
    function Te() {
        this.SCE_CONTEXTS = na;
        var b = [ "self" ], a = [];
        this.resourceUrlWhitelist = function(a) {
            return arguments.length && (b = hd(a)), b;
        }, this.resourceUrlBlacklist = function(b) {
            return arguments.length && (a = hd(b)), a;
        }, this.$get = [ "$injector", function(c) {
            function d(a, b) {
                return "self" === a ? Zc(b) : !!a.exec(b.href);
            }
            function e(a) {
                var b = function(a) {
                    this.$$unwrapTrustedValue = function() {
                        return a;
                    };
                };
                return a && (b.prototype = new a()), b.prototype.valueOf = function() {
                    return this.$$unwrapTrustedValue();
                }, b.prototype.toString = function() {
                    return this.$$unwrapTrustedValue().toString();
                }, b;
            }
            var f = function() {
                throw Ca("unsafe");
            };
            c.has("$sanitize") && (f = c.get("$sanitize"));
            var g = e(), h = {};
            return h[na.HTML] = e(g), h[na.CSS] = e(g), h[na.URL] = e(g), h[na.JS] = e(g), h[na.RESOURCE_URL] = e(h[na.URL]), 
            {
                trustAs: function(a, b) {
                    var c = h.hasOwnProperty(a) ? h[a] : null;
                    if (!c) throw Ca("icontext", a, b);
                    if (null === b || b === t || "" === b) return b;
                    if ("string" != typeof b) throw Ca("itype", a);
                    return new c(b);
                },
                getTrusted: function(c, e) {
                    if (null === e || e === t || "" === e) return e;
                    var g = h.hasOwnProperty(c) ? h[c] : null;
                    if (g && e instanceof g) return e.$$unwrapTrustedValue();
                    if (c === na.RESOURCE_URL) {
                        var n, q, g = Ba(e.toString()), u = !1;
                        for (n = 0, q = b.length; q > n; n++) if (d(b[n], g)) {
                            u = !0;
                            break;
                        }
                        if (u) for (n = 0, q = a.length; q > n; n++) if (d(a[n], g)) {
                            u = !1;
                            break;
                        }
                        if (u) return e;
                        throw Ca("insecurl", e.toString());
                    }
                    if (c === na.HTML) return f(e);
                    throw Ca("unsafe");
                },
                valueOf: function(a) {
                    return a instanceof g ? a.$$unwrapTrustedValue() : a;
                }
            };
        } ];
    }
    function Se() {
        var b = !0;
        this.enabled = function(a) {
            return arguments.length && (b = !!a), b;
        }, this.$get = [ "$parse", "$sceDelegate", function(a, c) {
            if (b && 8 > Ra) throw Ca("iequirks");
            var d = ra(na);
            d.isEnabled = function() {
                return b;
            }, d.trustAs = c.trustAs, d.getTrusted = c.getTrusted, d.valueOf = c.valueOf, b || (d.trustAs = d.getTrusted = function(a, b) {
                return b;
            }, d.valueOf = pa), d.parseAs = function(b, c) {
                var e = a(c);
                return e.literal && e.constant ? e : a(c, function(a) {
                    return d.getTrusted(b, a);
                });
            };
            var e = d.parseAs, f = d.getTrusted, g = d.trustAs;
            return s(na, function(a, b) {
                var c = Q(b);
                d[cb("parse_as_" + c)] = function(b) {
                    return e(a, b);
                }, d[cb("get_trusted_" + c)] = function(b) {
                    return f(a, b);
                }, d[cb("trust_as_" + c)] = function(b) {
                    return g(a, b);
                };
            }), d;
        } ];
    }
    function Ue() {
        this.$get = [ "$window", "$document", function(b, a) {
            var g, c = {}, d = ba((/android (\d+)/.exec(Q((b.navigator || {}).userAgent)) || [])[1]), e = /Boxee/i.test((b.navigator || {}).userAgent), f = a[0] || {}, h = /^(Moz|webkit|ms)(?=[A-Z])/, l = f.body && f.body.style, k = !1, m = !1;
            if (l) {
                for (var n in l) if (k = h.exec(n)) {
                    g = k[0], g = g.substr(0, 1).toUpperCase() + g.substr(1);
                    break;
                }
                g || (g = "WebkitOpacity" in l && "webkit"), k = !!("transition" in l || g + "Transition" in l), 
                m = !!("animation" in l || g + "Animation" in l), !d || k && m || (k = F(f.body.style.webkitTransition), 
                m = F(f.body.style.webkitAnimation));
            }
            return {
                history: !(!b.history || !b.history.pushState || 4 > d || e),
                hasEvent: function(a) {
                    if ("input" === a && 11 >= Ra) return !1;
                    if (A(c[a])) {
                        var b = f.createElement("div");
                        c[a] = "on" + a in b;
                    }
                    return c[a];
                },
                csp: ab(),
                vendorPrefix: g,
                transitions: k,
                animations: m,
                android: d
            };
        } ];
    }
    function We() {
        this.$get = [ "$templateCache", "$http", "$q", function(b, a, c) {
            function d(e, f) {
                d.totalPendingRequests++;
                var g = a.defaults && a.defaults.transformResponse;
                return D(g) ? g = g.filter(function(a) {
                    return a !== Yb;
                }) : g === Yb && (g = null), a.get(e, {
                    cache: b,
                    transformResponse: g
                })["finally"](function() {
                    d.totalPendingRequests--;
                }).then(function(a) {
                    return a.data;
                }, function(a) {
                    if (!f) throw ja("tpload", e);
                    return c.reject(a);
                });
            }
            return d.totalPendingRequests = 0, d;
        } ];
    }
    function Xe() {
        this.$get = [ "$rootScope", "$browser", "$location", function(b, a, c) {
            return {
                findBindings: function(a, b, c) {
                    a = a.getElementsByClassName("ng-binding");
                    var g = [];
                    return s(a, function(a) {
                        var d = ga.element(a).data("$binding");
                        d && s(d, function(d) {
                            c ? new RegExp("(^|\\s)" + gd(b) + "(\\s|\\||$)").test(d) && g.push(a) : -1 != d.indexOf(b) && g.push(a);
                        });
                    }), g;
                },
                findModels: function(a, b, c) {
                    for (var g = [ "ng-", "data-ng-", "ng\\:" ], h = 0; h < g.length; ++h) {
                        var l = a.querySelectorAll("[" + g[h] + "model" + (c ? "=" : "*=") + '"' + b + '"]');
                        if (l.length) return l;
                    }
                },
                getLocation: function() {
                    return c.url();
                },
                setLocation: function(a) {
                    a !== c.url() && (c.url(a), b.$digest());
                },
                whenStable: function(b) {
                    a.notifyWhenNoOutstandingRequests(b);
                }
            };
        } ];
    }
    function Ye() {
        this.$get = [ "$rootScope", "$browser", "$q", "$$q", "$exceptionHandler", function(b, a, c, d, e) {
            function f(f, l, k) {
                var m = y(k) && !k, n = (m ? d : c).defer(), q = n.promise;
                return l = a.defer(function() {
                    try {
                        n.resolve(f());
                    } catch (a) {
                        n.reject(a), e(a);
                    } finally {
                        delete g[q.$$timeoutId];
                    }
                    m || b.$apply();
                }, l), q.$$timeoutId = l, g[l] = n, q;
            }
            var g = {};
            return f.cancel = function(b) {
                return b && b.$$timeoutId in g ? (g[b.$$timeoutId].reject("canceled"), delete g[b.$$timeoutId], 
                a.defer.cancel(b.$$timeoutId)) : !1;
            }, f;
        } ];
    }
    function Ba(b) {
        return Ra && (Z.setAttribute("href", b), b = Z.href), Z.setAttribute("href", b), 
        {
            href: Z.href,
            protocol: Z.protocol ? Z.protocol.replace(/:$/, "") : "",
            host: Z.host,
            search: Z.search ? Z.search.replace(/^\?/, "") : "",
            hash: Z.hash ? Z.hash.replace(/^#/, "") : "",
            hostname: Z.hostname,
            port: Z.port,
            pathname: "/" === Z.pathname.charAt(0) ? Z.pathname : "/" + Z.pathname
        };
    }
    function Zc(b) {
        return b = F(b) ? Ba(b) : b, b.protocol === id.protocol && b.host === id.host;
    }
    function Ze() {
        this.$get = da(M);
    }
    function Dc(b) {
        function a(c, d) {
            if (I(c)) {
                var e = {};
                return s(c, function(b, c) {
                    e[c] = a(c, b);
                }), e;
            }
            return b.factory(c + "Filter", d);
        }
        this.register = a, this.$get = [ "$injector", function(a) {
            return function(b) {
                return a.get(b + "Filter");
            };
        } ], a("currency", jd), a("date", kd), a("filter", Ef), a("json", Ff), a("limitTo", Gf), 
        a("lowercase", Hf), a("number", ld), a("orderBy", md), a("uppercase", If);
    }
    function Ef() {
        return function(b, a, c) {
            if (!D(b)) return b;
            var d;
            switch (typeof a) {
              case "function":
                break;

              case "boolean":
              case "number":
              case "string":
                d = !0;

              case "object":
                a = Jf(a, c, d);
                break;

              default:
                return b;
            }
            return b.filter(a);
        };
    }
    function Jf(b, a, c) {
        var d = I(b) && "$" in b;
        return !0 === a ? a = fa : G(a) || (a = function(a, b) {
            return I(a) || I(b) ? !1 : (a = Q("" + a), b = Q("" + b), -1 !== a.indexOf(b));
        }), function(e) {
            return d && !I(e) ? Ia(e, b.$, a, !1) : Ia(e, b, a, c);
        };
    }
    function Ia(b, a, c, d, e) {
        var f = typeof b, g = typeof a;
        if ("string" === g && "!" === a.charAt(0)) return !Ia(b, a.substring(1), c, d);
        if (D(b)) return b.some(function(b) {
            return Ia(b, a, c, d);
        });
        switch (f) {
          case "object":
            var h;
            if (d) {
                for (h in b) if ("$" !== h.charAt(0) && Ia(b[h], a, c, !0)) return !0;
                return e ? !1 : Ia(b, a, c, !1);
            }
            if ("object" === g) {
                for (h in a) if (e = a[h], !G(e) && (f = "$" === h, !Ia(f ? b : b[h], e, c, f, f))) return !1;
                return !0;
            }
            return c(b, a);

          case "function":
            return !1;

          default:
            return c(b, a);
        }
    }
    function jd(b) {
        var a = b.NUMBER_FORMATS;
        return function(b, d, e) {
            return A(d) && (d = a.CURRENCY_SYM), A(e) && (e = a.PATTERNS[1].maxFrac), null == b ? b : nd(b, a.PATTERNS[1], a.GROUP_SEP, a.DECIMAL_SEP, e).replace(/\u00A4/g, d);
        };
    }
    function ld(b) {
        var a = b.NUMBER_FORMATS;
        return function(b, d) {
            return null == b ? b : nd(b, a.PATTERNS[0], a.GROUP_SEP, a.DECIMAL_SEP, d);
        };
    }
    function nd(b, a, c, d, e) {
        if (!isFinite(b) || I(b)) return "";
        var f = 0 > b;
        b = Math.abs(b);
        var g = b + "", h = "", l = [], k = !1;
        if (-1 !== g.indexOf("e")) {
            var m = g.match(/([\d\.]+)e(-?)(\d+)/);
            m && "-" == m[2] && m[3] > e + 1 ? b = 0 : (h = g, k = !0);
        }
        if (k) e > 0 && 1 > b && (h = b.toFixed(e), b = parseFloat(h)); else {
            g = (g.split(od)[1] || "").length, A(e) && (e = Math.min(Math.max(a.minFrac, g), a.maxFrac)), 
            b = +(Math.round(+(b.toString() + "e" + e)).toString() + "e" + -e);
            var g = ("" + b).split(od), k = g[0], g = g[1] || "", n = 0, q = a.lgSize, u = a.gSize;
            if (k.length >= q + u) for (n = k.length - q, m = 0; n > m; m++) 0 === (n - m) % u && 0 !== m && (h += c), 
            h += k.charAt(m);
            for (m = n; m < k.length; m++) 0 === (k.length - m) % q && 0 !== m && (h += c), 
            h += k.charAt(m);
            for (;g.length < e; ) g += "0";
            e && "0" !== e && (h += d + g.substr(0, e));
        }
        return 0 === b && (f = !1), l.push(f ? a.negPre : a.posPre, h, f ? a.negSuf : a.posSuf), 
        l.join("");
    }
    function Hb(b, a, c) {
        var d = "";
        for (0 > b && (d = "-", b = -b), b = "" + b; b.length < a; ) b = "0" + b;
        return c && (b = b.substr(b.length - a)), d + b;
    }
    function $(b, a, c, d) {
        return c = c || 0, function(e) {
            return e = e["get" + b](), (c > 0 || e > -c) && (e += c), 0 === e && -12 == c && (e = 12), 
            Hb(e, a, d);
        };
    }
    function Ib(b, a) {
        return function(c, d) {
            var e = c["get" + b](), f = ub(a ? "SHORT" + b : b);
            return d[f][e];
        };
    }
    function pd(b) {
        var a = new Date(b, 0, 1).getDay();
        return new Date(b, 0, (4 >= a ? 5 : 12) - a);
    }
    function qd(b) {
        return function(a) {
            var c = pd(a.getFullYear());
            return a = +new Date(a.getFullYear(), a.getMonth(), a.getDate() + (4 - a.getDay())) - +c, 
            a = 1 + Math.round(a / 6048e5), Hb(a, b);
        };
    }
    function kd(b) {
        function a(a) {
            var b;
            if (b = a.match(c)) {
                a = new Date(0);
                var f = 0, g = 0, h = b[8] ? a.setUTCFullYear : a.setFullYear, l = b[8] ? a.setUTCHours : a.setHours;
                b[9] && (f = ba(b[9] + b[10]), g = ba(b[9] + b[11])), h.call(a, ba(b[1]), ba(b[2]) - 1, ba(b[3])), 
                f = ba(b[4] || 0) - f, g = ba(b[5] || 0) - g, h = ba(b[6] || 0), b = Math.round(1e3 * parseFloat("0." + (b[7] || 0))), 
                l.call(a, f, g, h, b);
            }
            return a;
        }
        var c = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        return function(c, e, f) {
            var l, k, g = "", h = [];
            if (e = e || "mediumDate", e = b.DATETIME_FORMATS[e] || e, F(c) && (c = Kf.test(c) ? ba(c) : a(c)), 
            V(c) && (c = new Date(c)), !qa(c)) return c;
            for (;e; ) (k = Lf.exec(e)) ? (h = Ya(h, k, 1), e = h.pop()) : (h.push(e), e = null);
            return f && "UTC" === f && (c = new Date(c.getTime()), c.setMinutes(c.getMinutes() + c.getTimezoneOffset())), 
            s(h, function(a) {
                l = Mf[a], g += l ? l(c, b.DATETIME_FORMATS) : a.replace(/(^'|'$)/g, "").replace(/''/g, "'");
            }), g;
        };
    }
    function Ff() {
        return function(b, a) {
            return A(a) && (a = 2), $a(b, a);
        };
    }
    function Gf() {
        return function(b, a) {
            return V(b) && (b = b.toString()), D(b) || F(b) ? (a = 1/0 === Math.abs(Number(a)) ? Number(a) : ba(a)) ? a > 0 ? b.slice(0, a) : b.slice(a) : F(b) ? "" : [] : b;
        };
    }
    function md(b) {
        return function(a, c, d) {
            function e(a, b) {
                return b ? function(b, c) {
                    return a(c, b);
                } : a;
            }
            function f(a) {
                switch (typeof a) {
                  case "number":
                  case "boolean":
                  case "string":
                    return !0;

                  default:
                    return !1;
                }
            }
            function g(a) {
                return null === a ? "null" : "function" == typeof a.valueOf && (a = a.valueOf(), 
                f(a)) || "function" == typeof a.toString && (a = a.toString(), f(a)) ? a : "";
            }
            function h(a, b) {
                var c = typeof a, d = typeof b;
                return c === d && "object" === c && (a = g(a), b = g(b)), c === d ? ("string" === c && (a = a.toLowerCase(), 
                b = b.toLowerCase()), a === b ? 0 : b > a ? -1 : 1) : d > c ? -1 : 1;
            }
            return Ta(a) ? (c = D(c) ? c : [ c ], 0 === c.length && (c = [ "+" ]), c = c.map(function(a) {
                var c = !1, d = a || pa;
                if (F(a)) {
                    if (("+" == a.charAt(0) || "-" == a.charAt(0)) && (c = "-" == a.charAt(0), a = a.substring(1)), 
                    "" === a) return e(h, c);
                    if (d = b(a), d.constant) {
                        var f = d();
                        return e(function(a, b) {
                            return h(a[f], b[f]);
                        }, c);
                    }
                }
                return e(function(a, b) {
                    return h(d(a), d(b));
                }, c);
            }), Za.call(a).sort(e(function(a, b) {
                for (var d = 0; d < c.length; d++) {
                    var e = c[d](a, b);
                    if (0 !== e) return e;
                }
                return 0;
            }, d))) : a;
        };
    }
    function Ja(b) {
        return G(b) && (b = {
            link: b
        }), b.restrict = b.restrict || "AC", da(b);
    }
    function rd(b, a, c, d, e) {
        var f = this, g = [], h = f.$$parentForm = b.parent().controller("form") || Jb;
        f.$error = {}, f.$$success = {}, f.$pending = t, f.$name = e(a.name || a.ngForm || "")(c), 
        f.$dirty = !1, f.$pristine = !0, f.$valid = !0, f.$invalid = !1, f.$submitted = !1, 
        h.$addControl(f), f.$rollbackViewValue = function() {
            s(g, function(a) {
                a.$rollbackViewValue();
            });
        }, f.$commitViewValue = function() {
            s(g, function(a) {
                a.$commitViewValue();
            });
        }, f.$addControl = function(a) {
            Ma(a.$name, "input"), g.push(a), a.$name && (f[a.$name] = a);
        }, f.$$renameControl = function(a, b) {
            var c = a.$name;
            f[c] === a && delete f[c], f[b] = a, a.$name = b;
        }, f.$removeControl = function(a) {
            a.$name && f[a.$name] === a && delete f[a.$name], s(f.$pending, function(b, c) {
                f.$setValidity(c, null, a);
            }), s(f.$error, function(b, c) {
                f.$setValidity(c, null, a);
            }), s(f.$$success, function(b, c) {
                f.$setValidity(c, null, a);
            }), Xa(g, a);
        }, sd({
            ctrl: this,
            $element: b,
            set: function(a, b, c) {
                var d = a[b];
                d ? -1 === d.indexOf(c) && d.push(c) : a[b] = [ c ];
            },
            unset: function(a, b, c) {
                var d = a[b];
                d && (Xa(d, c), 0 === d.length && delete a[b]);
            },
            parentForm: h,
            $animate: d
        }), f.$setDirty = function() {
            d.removeClass(b, Sa), d.addClass(b, Kb), f.$dirty = !0, f.$pristine = !1, h.$setDirty();
        }, f.$setPristine = function() {
            d.setClass(b, Sa, Kb + " ng-submitted"), f.$dirty = !1, f.$pristine = !0, f.$submitted = !1, 
            s(g, function(a) {
                a.$setPristine();
            });
        }, f.$setUntouched = function() {
            s(g, function(a) {
                a.$setUntouched();
            });
        }, f.$setSubmitted = function() {
            d.addClass(b, "ng-submitted"), f.$submitted = !0, h.$setSubmitted();
        };
    }
    function hc(b) {
        b.$formatters.push(function(a) {
            return b.$isEmpty(a) ? a : a.toString();
        });
    }
    function ib(b, a, c, d, e, f) {
        var g = Q(a[0].type);
        if (!e.android) {
            var h = !1;
            a.on("compositionstart", function() {
                h = !0;
            }), a.on("compositionend", function() {
                h = !1, l();
            });
        }
        var l = function(b) {
            if (k && (f.defer.cancel(k), k = null), !h) {
                var e = a.val();
                b = b && b.type, "password" === g || c.ngTrim && "false" === c.ngTrim || (e = U(e)), 
                (d.$viewValue !== e || "" === e && d.$$hasNativeValidators) && d.$setViewValue(e, b);
            }
        };
        if (e.hasEvent("input")) a.on("input", l); else {
            var k, m = function(a, b, c) {
                k || (k = f.defer(function() {
                    k = null, b && b.value === c || l(a);
                }));
            };
            a.on("keydown", function(a) {
                var b = a.keyCode;
                91 === b || b > 15 && 19 > b || b >= 37 && 40 >= b || m(a, this, this.value);
            }), e.hasEvent("paste") && a.on("paste cut", m);
        }
        a.on("change", l), d.$render = function() {
            a.val(d.$isEmpty(d.$viewValue) ? "" : d.$viewValue);
        };
    }
    function Lb(b, a) {
        return function(c, d) {
            var e, f;
            if (qa(c)) return c;
            if (F(c)) {
                if ('"' == c.charAt(0) && '"' == c.charAt(c.length - 1) && (c = c.substring(1, c.length - 1)), 
                Nf.test(c)) return new Date(c);
                if (b.lastIndex = 0, e = b.exec(c)) return e.shift(), f = d ? {
                    yyyy: d.getFullYear(),
                    MM: d.getMonth() + 1,
                    dd: d.getDate(),
                    HH: d.getHours(),
                    mm: d.getMinutes(),
                    ss: d.getSeconds(),
                    sss: d.getMilliseconds() / 1e3
                } : {
                    yyyy: 1970,
                    MM: 1,
                    dd: 1,
                    HH: 0,
                    mm: 0,
                    ss: 0,
                    sss: 0
                }, s(e, function(b, c) {
                    c < a.length && (f[a[c]] = +b);
                }), new Date(f.yyyy, f.MM - 1, f.dd, f.HH, f.mm, f.ss || 0, 1e3 * f.sss || 0);
            }
            return 0/0;
        };
    }
    function jb(b, a, c, d) {
        return function(e, f, g, h, l, k, m) {
            function n(a) {
                return a && !(a.getTime && a.getTime() !== a.getTime());
            }
            function q(a) {
                return y(a) ? qa(a) ? a : c(a) : t;
            }
            td(e, f, g, h), ib(e, f, g, h, l, k);
            var r, u = h && h.$options && h.$options.timezone;
            if (h.$$parserName = b, h.$parsers.push(function(b) {
                return h.$isEmpty(b) ? null : a.test(b) ? (b = c(b, r), "UTC" === u && b.setMinutes(b.getMinutes() - b.getTimezoneOffset()), 
                b) : t;
            }), h.$formatters.push(function(a) {
                if (a && !qa(a)) throw Mb("datefmt", a);
                if (n(a)) {
                    if ((r = a) && "UTC" === u) {
                        var b = 6e4 * r.getTimezoneOffset();
                        r = new Date(r.getTime() + b);
                    }
                    return m("date")(a, d, u);
                }
                return r = null, "";
            }), y(g.min) || g.ngMin) {
                var s;
                h.$validators.min = function(a) {
                    return !n(a) || A(s) || c(a) >= s;
                }, g.$observe("min", function(a) {
                    s = q(a), h.$validate();
                });
            }
            if (y(g.max) || g.ngMax) {
                var p;
                h.$validators.max = function(a) {
                    return !n(a) || A(p) || c(a) <= p;
                }, g.$observe("max", function(a) {
                    p = q(a), h.$validate();
                });
            }
        };
    }
    function td(b, a, c, d) {
        (d.$$hasNativeValidators = I(a[0].validity)) && d.$parsers.push(function(b) {
            var c = a.prop("validity") || {};
            return c.badInput && !c.typeMismatch ? t : b;
        });
    }
    function ud(b, a, c, d, e) {
        if (y(d)) {
            if (b = b(d), !b.constant) throw T("ngModel")("constexpr", c, d);
            return b(a);
        }
        return e;
    }
    function ic(b, a) {
        return b = "ngClass" + b, [ "$animate", function(c) {
            function d(a, b) {
                var c = [], d = 0;
                a: for (;d < a.length; d++) {
                    for (var e = a[d], m = 0; m < b.length; m++) if (e == b[m]) continue a;
                    c.push(e);
                }
                return c;
            }
            function e(a) {
                if (!D(a)) {
                    if (F(a)) return a.split(" ");
                    if (I(a)) {
                        var b = [];
                        return s(a, function(a, c) {
                            a && (b = b.concat(c.split(" ")));
                        }), b;
                    }
                }
                return a;
            }
            return {
                restrict: "AC",
                link: function(f, g, h) {
                    function l(a, b) {
                        var c = g.data("$classCounts") || {}, d = [];
                        return s(a, function(a) {
                            (b > 0 || c[a]) && (c[a] = (c[a] || 0) + b, c[a] === +(b > 0) && d.push(a));
                        }), g.data("$classCounts", c), d.join(" ");
                    }
                    function k(b) {
                        if (!0 === a || f.$index % 2 === a) {
                            var k = e(b || []);
                            if (m) {
                                if (!fa(b, m)) {
                                    var r = e(m), u = d(k, r), k = d(r, k), u = l(u, 1), k = l(k, -1);
                                    u && u.length && c.addClass(g, u), k && k.length && c.removeClass(g, k);
                                }
                            } else {
                                var u = l(k, 1);
                                h.$addClass(u);
                            }
                        }
                        m = ra(b);
                    }
                    var m;
                    f.$watch(h[b], k, !0), h.$observe("class", function() {
                        k(f.$eval(h[b]));
                    }), "ngClass" !== b && f.$watch("$index", function(c, d) {
                        var g = 1 & c;
                        if (g !== (1 & d)) {
                            var k = e(f.$eval(h[b]));
                            g === a ? (g = l(k, 1), h.$addClass(g)) : (g = l(k, -1), h.$removeClass(g));
                        }
                    });
                }
            };
        } ];
    }
    function sd(b) {
        function a(a, b) {
            b && !f[a] ? (k.addClass(e, a), f[a] = !0) : !b && f[a] && (k.removeClass(e, a), 
            f[a] = !1);
        }
        function c(b, c) {
            b = b ? "-" + tc(b, "-") : "", a(kb + b, !0 === c), a(vd + b, !1 === c);
        }
        var d = b.ctrl, e = b.$element, f = {}, g = b.set, h = b.unset, l = b.parentForm, k = b.$animate;
        f[vd] = !(f[kb] = e.hasClass(kb)), d.$setValidity = function(b, e, f) {
            e === t ? (d.$pending || (d.$pending = {}), g(d.$pending, b, f)) : (d.$pending && h(d.$pending, b, f), 
            wd(d.$pending) && (d.$pending = t)), Wa(e) ? e ? (h(d.$error, b, f), g(d.$$success, b, f)) : (g(d.$error, b, f), 
            h(d.$$success, b, f)) : (h(d.$error, b, f), h(d.$$success, b, f)), d.$pending ? (a(xd, !0), 
            d.$valid = d.$invalid = t, c("", null)) : (a(xd, !1), d.$valid = wd(d.$error), d.$invalid = !d.$valid, 
            c("", d.$valid)), e = d.$pending && d.$pending[b] ? t : d.$error[b] ? !1 : d.$$success[b] ? !0 : null, 
            c(b, e), l.$setValidity(b, e, d);
        };
    }
    function wd(b) {
        if (b) for (var a in b) return !1;
        return !0;
    }
    var Ra, B, sa, bb, Of = /^\/(.+)\/([a-z]*)$/, Q = function(b) {
        return F(b) ? b.toLowerCase() : b;
    }, rc = Object.prototype.hasOwnProperty, ub = function(b) {
        return F(b) ? b.toUpperCase() : b;
    }, Za = [].slice, rf = [].splice, Pf = [].push, Da = Object.prototype.toString, Ka = T("ng"), ga = M.angular || (M.angular = {}), nb = 0;
    Ra = Y.documentMode, H.$inject = [], pa.$inject = [];
    var Pb, D = Array.isArray, U = function(b) {
        return F(b) ? b.trim() : b;
    }, gd = function(b) {
        return b.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
    }, ab = function() {
        if (y(ab.isActive_)) return ab.isActive_;
        var b = !(!Y.querySelector("[ng-csp]") && !Y.querySelector("[data-ng-csp]"));
        if (!b) try {
            new Function("");
        } catch (a) {
            b = !0;
        }
        return ab.isActive_ = b;
    }, rb = [ "ng-", "data-ng-", "ng:", "x-ng-" ], Md = /[A-Z]/g, uc = !1, oa = 1, pb = 3, Qd = {
        full: "1.3.11",
        major: 1,
        minor: 3,
        dot: 11,
        codeName: "spiffy-manatee"
    };
    R.expando = "ng339";
    var zb = R.cache = {}, hf = 1;
    R._data = function(b) {
        return this.cache[b[this.expando]] || {};
    };
    var cf = /([\:\-\_]+(.))/g, df = /^moz([A-Z])/, Qf = {
        mouseleave: "mouseout",
        mouseenter: "mouseover"
    }, Sb = T("jqLite"), gf = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, Rb = /<|&#?\w+;/, ef = /<([\w:]+)/, ff = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, ia = {
        option: [ 1, '<select multiple="multiple">', "</select>" ],
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    ia.optgroup = ia.option, ia.tbody = ia.tfoot = ia.colgroup = ia.caption = ia.thead, 
    ia.th = ia.td;
    var La = R.prototype = {
        ready: function(b) {
            function a() {
                c || (c = !0, b());
            }
            var c = !1;
            "complete" === Y.readyState ? setTimeout(a) : (this.on("DOMContentLoaded", a), R(M).on("load", a));
        },
        toString: function() {
            var b = [];
            return s(this, function(a) {
                b.push("" + a);
            }), "[" + b.join(", ") + "]";
        },
        eq: function(b) {
            return B(b >= 0 ? this[b] : this[this.length + b]);
        },
        length: 0,
        push: Pf,
        sort: [].sort,
        splice: [].splice
    }, Eb = {};
    s("multiple selected checked disabled readOnly required open".split(" "), function(b) {
        Eb[Q(b)] = b;
    });
    var Mc = {};
    s("input select option textarea button form details".split(" "), function(b) {
        Mc[b] = !0;
    });
    var Nc = {
        ngMinlength: "minlength",
        ngMaxlength: "maxlength",
        ngMin: "min",
        ngMax: "max",
        ngPattern: "pattern"
    };
    s({
        data: Ub,
        removeData: xb
    }, function(b, a) {
        R[a] = b;
    }), s({
        data: Ub,
        inheritedData: Db,
        scope: function(b) {
            return B.data(b, "$scope") || Db(b.parentNode || b, [ "$isolateScope", "$scope" ]);
        },
        isolateScope: function(b) {
            return B.data(b, "$isolateScope") || B.data(b, "$isolateScopeNoTemplate");
        },
        controller: Ic,
        injector: function(b) {
            return Db(b, "$injector");
        },
        removeAttr: function(b, a) {
            b.removeAttribute(a);
        },
        hasClass: Ab,
        css: function(b, a, c) {
            return a = cb(a), y(c) ? void (b.style[a] = c) : b.style[a];
        },
        attr: function(b, a, c) {
            var d = Q(a);
            if (Eb[d]) {
                if (!y(c)) return b[a] || (b.attributes.getNamedItem(a) || H).specified ? d : t;
                c ? (b[a] = !0, b.setAttribute(a, d)) : (b[a] = !1, b.removeAttribute(d));
            } else if (y(c)) b.setAttribute(a, c); else if (b.getAttribute) return b = b.getAttribute(a, 2), 
            null === b ? t : b;
        },
        prop: function(b, a, c) {
            return y(c) ? void (b[a] = c) : b[a];
        },
        text: function() {
            function b(a, b) {
                if (A(b)) {
                    var d = a.nodeType;
                    return d === oa || d === pb ? a.textContent : "";
                }
                a.textContent = b;
            }
            return b.$dv = "", b;
        }(),
        val: function(b, a) {
            if (A(a)) {
                if (b.multiple && "select" === ua(b)) {
                    var c = [];
                    return s(b.options, function(a) {
                        a.selected && c.push(a.value || a.text);
                    }), 0 === c.length ? null : c;
                }
                return b.value;
            }
            b.value = a;
        },
        html: function(b, a) {
            return A(a) ? b.innerHTML : (wb(b, !0), void (b.innerHTML = a));
        },
        empty: Jc
    }, function(b, a) {
        R.prototype[a] = function(a, d) {
            var e, f, g = this.length;
            if (b !== Jc && (2 == b.length && b !== Ab && b !== Ic ? a : d) === t) {
                if (I(a)) {
                    for (e = 0; g > e; e++) if (b === Ub) b(this[e], a); else for (f in a) b(this[e], f, a[f]);
                    return this;
                }
                for (e = b.$dv, g = e === t ? Math.min(g, 1) : g, f = 0; g > f; f++) {
                    var h = b(this[f], a, d);
                    e = e ? e + h : h;
                }
                return e;
            }
            for (e = 0; g > e; e++) b(this[e], a, d);
            return this;
        };
    }), s({
        removeData: xb,
        on: function a(c, d, e, f) {
            if (y(f)) throw Sb("onargs");
            if (Ec(c)) {
                var g = yb(c, !0);
                f = g.events;
                var h = g.handle;
                h || (h = g.handle = lf(c, f));
                for (var g = 0 <= d.indexOf(" ") ? d.split(" ") : [ d ], l = g.length; l--; ) {
                    d = g[l];
                    var k = f[d];
                    k || (f[d] = [], "mouseenter" === d || "mouseleave" === d ? a(c, Qf[d], function(a) {
                        var c = a.relatedTarget;
                        c && (c === this || this.contains(c)) || h(a, d);
                    }) : "$destroy" !== d && c.addEventListener(d, h, !1), k = f[d]), k.push(e);
                }
            }
        },
        off: Hc,
        one: function(a, c, d) {
            a = B(a), a.on(c, function f() {
                a.off(c, d), a.off(c, f);
            }), a.on(c, d);
        },
        replaceWith: function(a, c) {
            var d, e = a.parentNode;
            wb(a), s(new R(c), function(c) {
                d ? e.insertBefore(c, d.nextSibling) : e.replaceChild(c, a), d = c;
            });
        },
        children: function(a) {
            var c = [];
            return s(a.childNodes, function(a) {
                a.nodeType === oa && c.push(a);
            }), c;
        },
        contents: function(a) {
            return a.contentDocument || a.childNodes || [];
        },
        append: function(a, c) {
            var d = a.nodeType;
            if (d === oa || 11 === d) {
                c = new R(c);
                for (var d = 0, e = c.length; e > d; d++) a.appendChild(c[d]);
            }
        },
        prepend: function(a, c) {
            if (a.nodeType === oa) {
                var d = a.firstChild;
                s(new R(c), function(c) {
                    a.insertBefore(c, d);
                });
            }
        },
        wrap: function(a, c) {
            c = B(c).eq(0).clone()[0];
            var d = a.parentNode;
            d && d.replaceChild(c, a), c.appendChild(a);
        },
        remove: Kc,
        detach: function(a) {
            Kc(a, !0);
        },
        after: function(a, c) {
            var d = a, e = a.parentNode;
            c = new R(c);
            for (var f = 0, g = c.length; g > f; f++) {
                var h = c[f];
                e.insertBefore(h, d.nextSibling), d = h;
            }
        },
        addClass: Cb,
        removeClass: Bb,
        toggleClass: function(a, c, d) {
            c && s(c.split(" "), function(c) {
                var f = d;
                A(f) && (f = !Ab(a, c)), (f ? Cb : Bb)(a, c);
            });
        },
        parent: function(a) {
            return (a = a.parentNode) && 11 !== a.nodeType ? a : null;
        },
        next: function(a) {
            return a.nextElementSibling;
        },
        find: function(a, c) {
            return a.getElementsByTagName ? a.getElementsByTagName(c) : [];
        },
        clone: Tb,
        triggerHandler: function(a, c, d) {
            var e, f, g = c.type || c, h = yb(a);
            (h = (h = h && h.events) && h[g]) && (e = {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                },
                isDefaultPrevented: function() {
                    return !0 === this.defaultPrevented;
                },
                stopImmediatePropagation: function() {
                    this.immediatePropagationStopped = !0;
                },
                isImmediatePropagationStopped: function() {
                    return !0 === this.immediatePropagationStopped;
                },
                stopPropagation: H,
                type: g,
                target: a
            }, c.type && (e = z(e, c)), c = ra(h), f = d ? [ e ].concat(d) : [ e ], s(c, function(c) {
                e.isImmediatePropagationStopped() || c.apply(a, f);
            }));
        }
    }, function(a, c) {
        R.prototype[c] = function(c, e, f) {
            for (var g, h = 0, l = this.length; l > h; h++) A(g) ? (g = a(this[h], c, e, f), 
            y(g) && (g = B(g))) : Gc(g, a(this[h], c, e, f));
            return y(g) ? g : this;
        }, R.prototype.bind = R.prototype.on, R.prototype.unbind = R.prototype.off;
    }), db.prototype = {
        put: function(a, c) {
            this[Na(a, this.nextUid)] = c;
        },
        get: function(a) {
            return this[Na(a, this.nextUid)];
        },
        remove: function(a) {
            var c = this[a = Na(a, this.nextUid)];
            return delete this[a], c;
        }
    };
    var Pc = /^function\s*[^\(]*\(\s*([^\)]*)\)/m, nf = /,/, of = /^\s*(_?)(\S+?)\1\s*$/, Oc = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm, Ga = T("$injector");
    Ob.$$annotate = Vb;
    var Rf = T("$animate"), Ce = [ "$provide", function(a) {
        this.$$selectors = {}, this.register = function(c, d) {
            var e = c + "-animation";
            if (c && "." != c.charAt(0)) throw Rf("notcsel", c);
            this.$$selectors[c.substr(1)] = e, a.factory(e, d);
        }, this.classNameFilter = function(a) {
            return 1 === arguments.length && (this.$$classNameFilter = a instanceof RegExp ? a : null), 
            this.$$classNameFilter;
        }, this.$get = [ "$$q", "$$asyncCallback", "$rootScope", function(a, d, e) {
            function f(d) {
                var f, g = a.defer();
                return g.promise.$$cancelFn = function() {
                    f && f();
                }, e.$$postDigest(function() {
                    f = d(function() {
                        g.resolve();
                    });
                }), g.promise;
            }
            function g(a, c) {
                var d = [], e = [], f = ha();
                return s((a.attr("class") || "").split(/\s+/), function(a) {
                    f[a] = !0;
                }), s(c, function(a, c) {
                    var g = f[c];
                    !1 === a && g ? e.push(c) : !0 !== a || g || d.push(c);
                }), 0 < d.length + e.length && [ d.length ? d : null, e.length ? e : null ];
            }
            function h(a, c, d) {
                for (var e = 0, f = c.length; f > e; ++e) a[c[e]] = d;
            }
            function l() {
                return m || (m = a.defer(), d(function() {
                    m.resolve(), m = null;
                })), m.promise;
            }
            function k(a, c) {
                if (ga.isObject(c)) {
                    var d = z(c.from || {}, c.to || {});
                    a.css(d);
                }
            }
            var m;
            return {
                animate: function(a, c, d) {
                    return k(a, {
                        from: c,
                        to: d
                    }), l();
                },
                enter: function(a, c, d, e) {
                    return k(a, e), d ? d.after(a) : c.prepend(a), l();
                },
                leave: function(a) {
                    return a.remove(), l();
                },
                move: function(a, c, d, e) {
                    return this.enter(a, c, d, e);
                },
                addClass: function(a, c, d) {
                    return this.setClass(a, c, [], d);
                },
                $$addClassImmediately: function(a, c, d) {
                    return a = B(a), c = F(c) ? c : D(c) ? c.join(" ") : "", s(a, function(a) {
                        Cb(a, c);
                    }), k(a, d), l();
                },
                removeClass: function(a, c, d) {
                    return this.setClass(a, [], c, d);
                },
                $$removeClassImmediately: function(a, c, d) {
                    return a = B(a), c = F(c) ? c : D(c) ? c.join(" ") : "", s(a, function(a) {
                        Bb(a, c);
                    }), k(a, d), l();
                },
                setClass: function(a, c, d, e) {
                    var k = this, l = !1;
                    a = B(a);
                    var m = a.data("$$animateClasses");
                    return m ? e && m.options && (m.options = ga.extend(m.options || {}, e)) : (m = {
                        classes: {},
                        options: e
                    }, l = !0), e = m.classes, c = D(c) ? c : c.split(" "), d = D(d) ? d : d.split(" "), 
                    h(e, c, !0), h(e, d, !1), l && (m.promise = f(function(c) {
                        var d = a.data("$$animateClasses");
                        if (a.removeData("$$animateClasses"), d) {
                            var e = g(a, d.classes);
                            e && k.$$setClassImmediately(a, e[0], e[1], d.options);
                        }
                        c();
                    }), a.data("$$animateClasses", m)), m.promise;
                },
                $$setClassImmediately: function(a, c, d, e) {
                    return c && this.$$addClassImmediately(a, c), d && this.$$removeClassImmediately(a, d), 
                    k(a, e), l();
                },
                enabled: H,
                cancel: H
            };
        } ];
    } ], ja = T("$compile");
    wc.$inject = [ "$provide", "$$sanitizeUriProvider" ];
    var Rc = /^((?:x|data)[\:\-_])/i, Vc = "application/json", Zb = {
        "Content-Type": Vc + ";charset=utf-8"
    }, tf = /^\[|^\{(?!\{)/, uf = {
        "[": /]$/,
        "{": /}$/
    }, sf = /^\)\]\}',?\n/, $b = T("$interpolate"), Sf = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/, xf = {
        http: 80,
        https: 443,
        ftp: 21
    }, Fb = T("$location"), Tf = {
        $$html5: !1,
        $$replace: !1,
        absUrl: Gb("$$absUrl"),
        url: function(a) {
            if (A(a)) return this.$$url;
            var c = Sf.exec(a);
            return (c[1] || "" === a) && this.path(decodeURIComponent(c[1])), (c[2] || c[1] || "" === a) && this.search(c[3] || ""), 
            this.hash(c[5] || ""), this;
        },
        protocol: Gb("$$protocol"),
        host: Gb("$$host"),
        port: Gb("$$port"),
        path: dd("$$path", function(a) {
            return a = null !== a ? a.toString() : "", "/" == a.charAt(0) ? a : "/" + a;
        }),
        search: function(a, c) {
            switch (arguments.length) {
              case 0:
                return this.$$search;

              case 1:
                if (F(a) || V(a)) a = a.toString(), this.$$search = qc(a); else {
                    if (!I(a)) throw Fb("isrcharg");
                    a = Ea(a, {}), s(a, function(c, e) {
                        null == c && delete a[e];
                    }), this.$$search = a;
                }
                break;

              default:
                A(c) || null === c ? delete this.$$search[a] : this.$$search[a] = c;
            }
            return this.$$compose(), this;
        },
        hash: dd("$$hash", function(a) {
            return null !== a ? a.toString() : "";
        }),
        replace: function() {
            return this.$$replace = !0, this;
        }
    };
    s([ cd, dc, cc ], function(a) {
        a.prototype = Object.create(Tf), a.prototype.state = function(c) {
            if (!arguments.length) return this.$$state;
            if (a !== cc || !this.$$html5) throw Fb("nostate");
            return this.$$state = A(c) ? null : c, this;
        };
    });
    var la = T("$parse"), Uf = Function.prototype.call, Vf = Function.prototype.apply, Wf = Function.prototype.bind, lb = ha();
    s({
        "null": function() {
            return null;
        },
        "true": function() {
            return !0;
        },
        "false": function() {
            return !1;
        },
        undefined: function() {}
    }, function(a, c) {
        a.constant = a.literal = a.sharedGetter = !0, lb[c] = a;
    }), lb["this"] = function(a) {
        return a;
    }, lb["this"].sharedGetter = !0;
    var mb = z(ha(), {
        "+": function(a, c, d, e) {
            return d = d(a, c), e = e(a, c), y(d) ? y(e) ? d + e : d : y(e) ? e : t;
        },
        "-": function(a, c, d, e) {
            return d = d(a, c), e = e(a, c), (y(d) ? d : 0) - (y(e) ? e : 0);
        },
        "*": function(a, c, d, e) {
            return d(a, c) * e(a, c);
        },
        "/": function(a, c, d, e) {
            return d(a, c) / e(a, c);
        },
        "%": function(a, c, d, e) {
            return d(a, c) % e(a, c);
        },
        "===": function(a, c, d, e) {
            return d(a, c) === e(a, c);
        },
        "!==": function(a, c, d, e) {
            return d(a, c) !== e(a, c);
        },
        "==": function(a, c, d, e) {
            return d(a, c) == e(a, c);
        },
        "!=": function(a, c, d, e) {
            return d(a, c) != e(a, c);
        },
        "<": function(a, c, d, e) {
            return d(a, c) < e(a, c);
        },
        ">": function(a, c, d, e) {
            return d(a, c) > e(a, c);
        },
        "<=": function(a, c, d, e) {
            return d(a, c) <= e(a, c);
        },
        ">=": function(a, c, d, e) {
            return d(a, c) >= e(a, c);
        },
        "&&": function(a, c, d, e) {
            return d(a, c) && e(a, c);
        },
        "||": function(a, c, d, e) {
            return d(a, c) || e(a, c);
        },
        "!": function(a, c, d) {
            return !d(a, c);
        },
        "=": !0,
        "|": !0
    }), Xf = {
        n: "\n",
        f: "\f",
        r: "\r",
        t: "	",
        v: "",
        "'": "'",
        '"': '"'
    }, gc = function(a) {
        this.options = a;
    };
    gc.prototype = {
        constructor: gc,
        lex: function(a) {
            for (this.text = a, this.index = 0, this.tokens = []; this.index < this.text.length; ) if (a = this.text.charAt(this.index), 
            '"' === a || "'" === a) this.readString(a); else if (this.isNumber(a) || "." === a && this.isNumber(this.peek())) this.readNumber(); else if (this.isIdent(a)) this.readIdent(); else if (this.is(a, "(){}[].,;:?")) this.tokens.push({
                index: this.index,
                text: a
            }), this.index++; else if (this.isWhitespace(a)) this.index++; else {
                var c = a + this.peek(), d = c + this.peek(2), e = mb[c], f = mb[d];
                mb[a] || e || f ? (a = f ? d : e ? c : a, this.tokens.push({
                    index: this.index,
                    text: a,
                    operator: !0
                }), this.index += a.length) : this.throwError("Unexpected next character ", this.index, this.index + 1);
            }
            return this.tokens;
        },
        is: function(a, c) {
            return -1 !== c.indexOf(a);
        },
        peek: function(a) {
            return a = a || 1, this.index + a < this.text.length ? this.text.charAt(this.index + a) : !1;
        },
        isNumber: function(a) {
            return a >= "0" && "9" >= a && "string" == typeof a;
        },
        isWhitespace: function(a) {
            return " " === a || "\r" === a || "	" === a || "\n" === a || "" === a || " " === a;
        },
        isIdent: function(a) {
            return a >= "a" && "z" >= a || a >= "A" && "Z" >= a || "_" === a || "$" === a;
        },
        isExpOperator: function(a) {
            return "-" === a || "+" === a || this.isNumber(a);
        },
        throwError: function(a, c, d) {
            throw d = d || this.index, c = y(c) ? "s " + c + "-" + this.index + " [" + this.text.substring(c, d) + "]" : " " + d, 
            la("lexerr", a, c, this.text);
        },
        readNumber: function() {
            for (var a = "", c = this.index; this.index < this.text.length; ) {
                var d = Q(this.text.charAt(this.index));
                if ("." == d || this.isNumber(d)) a += d; else {
                    var e = this.peek();
                    if ("e" == d && this.isExpOperator(e)) a += d; else if (this.isExpOperator(d) && e && this.isNumber(e) && "e" == a.charAt(a.length - 1)) a += d; else {
                        if (!this.isExpOperator(d) || e && this.isNumber(e) || "e" != a.charAt(a.length - 1)) break;
                        this.throwError("Invalid exponent");
                    }
                }
                this.index++;
            }
            this.tokens.push({
                index: c,
                text: a,
                constant: !0,
                value: Number(a)
            });
        },
        readIdent: function() {
            for (var a = this.index; this.index < this.text.length; ) {
                var c = this.text.charAt(this.index);
                if (!this.isIdent(c) && !this.isNumber(c)) break;
                this.index++;
            }
            this.tokens.push({
                index: a,
                text: this.text.slice(a, this.index),
                identifier: !0
            });
        },
        readString: function(a) {
            var c = this.index;
            this.index++;
            for (var d = "", e = a, f = !1; this.index < this.text.length; ) {
                var g = this.text.charAt(this.index), e = e + g;
                if (f) "u" === g ? (f = this.text.substring(this.index + 1, this.index + 5), f.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + f + "]"), 
                this.index += 4, d += String.fromCharCode(parseInt(f, 16))) : d += Xf[g] || g, f = !1; else if ("\\" === g) f = !0; else {
                    if (g === a) return this.index++, void this.tokens.push({
                        index: c,
                        text: e,
                        constant: !0,
                        value: d
                    });
                    d += g;
                }
                this.index++;
            }
            this.throwError("Unterminated quote", c);
        }
    };
    var hb = function(a, c, d) {
        this.lexer = a, this.$filter = c, this.options = d;
    };
    hb.ZERO = z(function() {
        return 0;
    }, {
        sharedGetter: !0,
        constant: !0
    }), hb.prototype = {
        constructor: hb,
        parse: function(a) {
            return this.text = a, this.tokens = this.lexer.lex(a), a = this.statements(), 0 !== this.tokens.length && this.throwError("is an unexpected token", this.tokens[0]), 
            a.literal = !!a.literal, a.constant = !!a.constant, a;
        },
        primary: function() {
            var a;
            this.expect("(") ? (a = this.filterChain(), this.consume(")")) : this.expect("[") ? a = this.arrayDeclaration() : this.expect("{") ? a = this.object() : this.peek().identifier && this.peek().text in lb ? a = lb[this.consume().text] : this.peek().identifier ? a = this.identifier() : this.peek().constant ? a = this.constant() : this.throwError("not a primary expression", this.peek());
            for (var c, d; c = this.expect("(", "[", "."); ) "(" === c.text ? (a = this.functionCall(a, d), 
            d = null) : "[" === c.text ? (d = a, a = this.objectIndex(a)) : "." === c.text ? (d = a, 
            a = this.fieldAccess(a)) : this.throwError("IMPOSSIBLE");
            return a;
        },
        throwError: function(a, c) {
            throw la("syntax", c.text, a, c.index + 1, this.text, this.text.substring(c.index));
        },
        peekToken: function() {
            if (0 === this.tokens.length) throw la("ueoe", this.text);
            return this.tokens[0];
        },
        peek: function(a, c, d, e) {
            return this.peekAhead(0, a, c, d, e);
        },
        peekAhead: function(a, c, d, e, f) {
            if (this.tokens.length > a) {
                a = this.tokens[a];
                var g = a.text;
                if (g === c || g === d || g === e || g === f || !(c || d || e || f)) return a;
            }
            return !1;
        },
        expect: function(a, c, d, e) {
            return (a = this.peek(a, c, d, e)) ? (this.tokens.shift(), a) : !1;
        },
        consume: function(a) {
            if (0 === this.tokens.length) throw la("ueoe", this.text);
            var c = this.expect(a);
            return c || this.throwError("is unexpected, expecting [" + a + "]", this.peek()), 
            c;
        },
        unaryFn: function(a, c) {
            var d = mb[a];
            return z(function(a, f) {
                return d(a, f, c);
            }, {
                constant: c.constant,
                inputs: [ c ]
            });
        },
        binaryFn: function(a, c, d, e) {
            var f = mb[c];
            return z(function(c, e) {
                return f(c, e, a, d);
            }, {
                constant: a.constant && d.constant,
                inputs: !e && [ a, d ]
            });
        },
        identifier: function() {
            for (var a = this.consume().text; this.peek(".") && this.peekAhead(1).identifier && !this.peekAhead(2, "("); ) a += this.consume().text + this.consume().text;
            return zf(a, this.options, this.text);
        },
        constant: function() {
            var a = this.consume().value;
            return z(function() {
                return a;
            }, {
                constant: !0,
                literal: !0
            });
        },
        statements: function() {
            for (var a = []; ;) if (0 < this.tokens.length && !this.peek("}", ")", ";", "]") && a.push(this.filterChain()), 
            !this.expect(";")) return 1 === a.length ? a[0] : function(c, d) {
                for (var e, f = 0, g = a.length; g > f; f++) e = a[f](c, d);
                return e;
            };
        },
        filterChain: function() {
            for (var a = this.expression(); this.expect("|"); ) a = this.filter(a);
            return a;
        },
        filter: function(a) {
            var d, e, c = this.$filter(this.consume().text);
            if (this.peek(":")) for (d = [], e = []; this.expect(":"); ) d.push(this.expression());
            var f = [ a ].concat(d || []);
            return z(function(f, h) {
                var l = a(f, h);
                if (e) {
                    for (e[0] = l, l = d.length; l--; ) e[l + 1] = d[l](f, h);
                    return c.apply(t, e);
                }
                return c(l);
            }, {
                constant: !c.$stateful && f.every(ec),
                inputs: !c.$stateful && f
            });
        },
        expression: function() {
            return this.assignment();
        },
        assignment: function() {
            var c, d, a = this.ternary();
            return (d = this.expect("=")) ? (a.assign || this.throwError("implies assignment but [" + this.text.substring(0, d.index) + "] can not be assigned to", d), 
            c = this.ternary(), z(function(d, f) {
                return a.assign(d, c(d, f), f);
            }, {
                inputs: [ a, c ]
            })) : a;
        },
        ternary: function() {
            var c, a = this.logicalOR();
            if (this.expect("?") && (c = this.assignment(), this.consume(":"))) {
                var d = this.assignment();
                return z(function(e, f) {
                    return a(e, f) ? c(e, f) : d(e, f);
                }, {
                    constant: a.constant && c.constant && d.constant
                });
            }
            return a;
        },
        logicalOR: function() {
            for (var c, a = this.logicalAND(); c = this.expect("||"); ) a = this.binaryFn(a, c.text, this.logicalAND(), !0);
            return a;
        },
        logicalAND: function() {
            for (var c, a = this.equality(); c = this.expect("&&"); ) a = this.binaryFn(a, c.text, this.equality(), !0);
            return a;
        },
        equality: function() {
            for (var c, a = this.relational(); c = this.expect("==", "!=", "===", "!=="); ) a = this.binaryFn(a, c.text, this.relational());
            return a;
        },
        relational: function() {
            for (var c, a = this.additive(); c = this.expect("<", ">", "<=", ">="); ) a = this.binaryFn(a, c.text, this.additive());
            return a;
        },
        additive: function() {
            for (var c, a = this.multiplicative(); c = this.expect("+", "-"); ) a = this.binaryFn(a, c.text, this.multiplicative());
            return a;
        },
        multiplicative: function() {
            for (var c, a = this.unary(); c = this.expect("*", "/", "%"); ) a = this.binaryFn(a, c.text, this.unary());
            return a;
        },
        unary: function() {
            var a;
            return this.expect("+") ? this.primary() : (a = this.expect("-")) ? this.binaryFn(hb.ZERO, a.text, this.unary()) : (a = this.expect("!")) ? this.unaryFn(a.text, this.unary()) : this.primary();
        },
        fieldAccess: function(a) {
            var c = this.identifier();
            return z(function(d, e, f) {
                return d = f || a(d, e), null == d ? t : c(d);
            }, {
                assign: function(d, e, f) {
                    var g = a(d, f);
                    return g || a.assign(d, g = {}, f), c.assign(g, e);
                }
            });
        },
        objectIndex: function(a) {
            var c = this.text, d = this.expression();
            return this.consume("]"), z(function(e, f) {
                var g = a(e, f), h = d(e, f);
                return ta(h, c), g ? ma(g[h], c) : t;
            }, {
                assign: function(e, f, g) {
                    var h = ta(d(e, g), c), l = ma(a(e, g), c);
                    return l || a.assign(e, l = {}, g), l[h] = f;
                }
            });
        },
        functionCall: function(a, c) {
            var d = [];
            if (")" !== this.peekToken().text) do d.push(this.expression()); while (this.expect(","));
            this.consume(")");
            var e = this.text, f = d.length ? [] : null;
            return function(g, h) {
                var l = c ? c(g, h) : y(c) ? t : g, k = a(g, h, l) || H;
                if (f) for (var m = d.length; m--; ) f[m] = ma(d[m](g, h), e);
                if (ma(l, e), k) {
                    if (k.constructor === k) throw la("isecfn", e);
                    if (k === Uf || k === Vf || k === Wf) throw la("isecff", e);
                }
                return l = k.apply ? k.apply(l, f) : k(f[0], f[1], f[2], f[3], f[4]), ma(l, e);
            };
        },
        arrayDeclaration: function() {
            var a = [];
            if ("]" !== this.peekToken().text) do {
                if (this.peek("]")) break;
                a.push(this.expression());
            } while (this.expect(","));
            return this.consume("]"), z(function(c, d) {
                for (var e = [], f = 0, g = a.length; g > f; f++) e.push(a[f](c, d));
                return e;
            }, {
                literal: !0,
                constant: a.every(ec),
                inputs: a
            });
        },
        object: function() {
            var a = [], c = [];
            if ("}" !== this.peekToken().text) do {
                if (this.peek("}")) break;
                var d = this.consume();
                d.constant ? a.push(d.value) : d.identifier ? a.push(d.text) : this.throwError("invalid key", d), 
                this.consume(":"), c.push(this.expression());
            } while (this.expect(","));
            return this.consume("}"), z(function(d, f) {
                for (var g = {}, h = 0, l = c.length; l > h; h++) g[a[h]] = c[h](d, f);
                return g;
            }, {
                literal: !0,
                constant: c.every(ec),
                inputs: c
            });
        }
    };
    var Bf = ha(), Af = ha(), Cf = Object.prototype.valueOf, Ca = T("$sce"), na = {
        HTML: "html",
        CSS: "css",
        URL: "url",
        RESOURCE_URL: "resourceUrl",
        JS: "js"
    }, ja = T("$compile"), Z = Y.createElement("a"), id = Ba(M.location.href);
    Dc.$inject = [ "$provide" ], jd.$inject = [ "$locale" ], ld.$inject = [ "$locale" ];
    var od = ".", Mf = {
        yyyy: $("FullYear", 4),
        yy: $("FullYear", 2, 0, !0),
        y: $("FullYear", 1),
        MMMM: Ib("Month"),
        MMM: Ib("Month", !0),
        MM: $("Month", 2, 1),
        M: $("Month", 1, 1),
        dd: $("Date", 2),
        d: $("Date", 1),
        HH: $("Hours", 2),
        H: $("Hours", 1),
        hh: $("Hours", 2, -12),
        h: $("Hours", 1, -12),
        mm: $("Minutes", 2),
        m: $("Minutes", 1),
        ss: $("Seconds", 2),
        s: $("Seconds", 1),
        sss: $("Milliseconds", 3),
        EEEE: Ib("Day"),
        EEE: Ib("Day", !0),
        a: function(a, c) {
            return 12 > a.getHours() ? c.AMPMS[0] : c.AMPMS[1];
        },
        Z: function(a) {
            return a = -1 * a.getTimezoneOffset(), a = (a >= 0 ? "+" : "") + (Hb(Math[a > 0 ? "floor" : "ceil"](a / 60), 2) + Hb(Math.abs(a % 60), 2));
        },
        ww: qd(2),
        w: qd(1)
    }, Lf = /((?:[^yMdHhmsaZEw']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|w+))(.*)/, Kf = /^\-?\d+$/;
    kd.$inject = [ "$locale" ];
    var Hf = da(Q), If = da(ub);
    md.$inject = [ "$parse" ];
    var Td = da({
        restrict: "E",
        compile: function(a, c) {
            return c.href || c.xlinkHref || c.name ? void 0 : function(a, c) {
                if ("a" === c[0].nodeName.toLowerCase()) {
                    var f = "[object SVGAnimatedString]" === Da.call(c.prop("href")) ? "xlink:href" : "href";
                    c.on("click", function(a) {
                        c.attr(f) || a.preventDefault();
                    });
                }
            };
        }
    }), vb = {};
    s(Eb, function(a, c) {
        if ("multiple" != a) {
            var d = ya("ng-" + c);
            vb[d] = function() {
                return {
                    restrict: "A",
                    priority: 100,
                    link: function(a, f, g) {
                        a.$watch(g[d], function(a) {
                            g.$set(c, !!a);
                        });
                    }
                };
            };
        }
    }), s(Nc, function(a, c) {
        vb[c] = function() {
            return {
                priority: 100,
                link: function(a, e, f) {
                    return "ngPattern" === c && "/" == f.ngPattern.charAt(0) && (e = f.ngPattern.match(Of)) ? void f.$set("ngPattern", new RegExp(e[1], e[2])) : void a.$watch(f[c], function(a) {
                        f.$set(c, a);
                    });
                }
            };
        };
    }), s([ "src", "srcset", "href" ], function(a) {
        var c = ya("ng-" + a);
        vb[c] = function() {
            return {
                priority: 99,
                link: function(d, e, f) {
                    var g = a, h = a;
                    "href" === a && "[object SVGAnimatedString]" === Da.call(e.prop("href")) && (h = "xlinkHref", 
                    f.$attr[h] = "xlink:href", g = null), f.$observe(c, function(c) {
                        c ? (f.$set(h, c), Ra && g && e.prop(g, f[h])) : "href" === a && f.$set(h, null);
                    });
                }
            };
        };
    });
    var Jb = {
        $addControl: H,
        $$renameControl: function(a, c) {
            a.$name = c;
        },
        $removeControl: H,
        $setValidity: H,
        $setDirty: H,
        $setPristine: H,
        $setSubmitted: H
    };
    rd.$inject = [ "$element", "$attrs", "$scope", "$animate", "$interpolate" ];
    var yd = function(a) {
        return [ "$timeout", function(c) {
            return {
                name: "form",
                restrict: a ? "EAC" : "E",
                controller: rd,
                compile: function(a) {
                    return a.addClass(Sa).addClass(kb), {
                        pre: function(a, d, g, h) {
                            if (!("action" in g)) {
                                var l = function(c) {
                                    a.$apply(function() {
                                        h.$commitViewValue(), h.$setSubmitted();
                                    }), c.preventDefault();
                                };
                                d[0].addEventListener("submit", l, !1), d.on("$destroy", function() {
                                    c(function() {
                                        d[0].removeEventListener("submit", l, !1);
                                    }, 0, !1);
                                });
                            }
                            var k = h.$$parentForm, m = h.$name;
                            m && (gb(a, null, m, h, m), g.$observe(g.name ? "name" : "ngForm", function(c) {
                                m !== c && (gb(a, null, m, t, m), m = c, gb(a, null, m, h, m), k.$$renameControl(h, m));
                            })), d.on("$destroy", function() {
                                k.$removeControl(h), m && gb(a, null, m, t, m), z(h, Jb);
                            });
                        }
                    };
                }
            };
        } ];
    }, Ud = yd(), ge = yd(!0), Nf = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/, Yf = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/, Zf = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i, $f = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/, zd = /^(\d{4})-(\d{2})-(\d{2})$/, Ad = /^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/, jc = /^(\d{4})-W(\d\d)$/, Bd = /^(\d{4})-(\d\d)$/, Cd = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/, Dd = {
        text: function(a, c, d, e, f, g) {
            ib(a, c, d, e, f, g), hc(e);
        },
        date: jb("date", zd, Lb(zd, [ "yyyy", "MM", "dd" ]), "yyyy-MM-dd"),
        "datetime-local": jb("datetimelocal", Ad, Lb(Ad, "yyyy MM dd HH mm ss sss".split(" ")), "yyyy-MM-ddTHH:mm:ss.sss"),
        time: jb("time", Cd, Lb(Cd, [ "HH", "mm", "ss", "sss" ]), "HH:mm:ss.sss"),
        week: jb("week", jc, function(a, c) {
            if (qa(a)) return a;
            if (F(a)) {
                jc.lastIndex = 0;
                var d = jc.exec(a);
                if (d) {
                    var e = +d[1], f = +d[2], g = d = 0, h = 0, l = 0, k = pd(e), f = 7 * (f - 1);
                    return c && (d = c.getHours(), g = c.getMinutes(), h = c.getSeconds(), l = c.getMilliseconds()), 
                    new Date(e, 0, k.getDate() + f, d, g, h, l);
                }
            }
            return 0/0;
        }, "yyyy-Www"),
        month: jb("month", Bd, Lb(Bd, [ "yyyy", "MM" ]), "yyyy-MM"),
        number: function(a, c, d, e, f, g) {
            if (td(a, c, d, e), ib(a, c, d, e, f, g), e.$$parserName = "number", e.$parsers.push(function(a) {
                return e.$isEmpty(a) ? null : $f.test(a) ? parseFloat(a) : t;
            }), e.$formatters.push(function(a) {
                if (!e.$isEmpty(a)) {
                    if (!V(a)) throw Mb("numfmt", a);
                    a = a.toString();
                }
                return a;
            }), d.min || d.ngMin) {
                var h;
                e.$validators.min = function(a) {
                    return e.$isEmpty(a) || A(h) || a >= h;
                }, d.$observe("min", function(a) {
                    y(a) && !V(a) && (a = parseFloat(a, 10)), h = V(a) && !isNaN(a) ? a : t, e.$validate();
                });
            }
            if (d.max || d.ngMax) {
                var l;
                e.$validators.max = function(a) {
                    return e.$isEmpty(a) || A(l) || l >= a;
                }, d.$observe("max", function(a) {
                    y(a) && !V(a) && (a = parseFloat(a, 10)), l = V(a) && !isNaN(a) ? a : t, e.$validate();
                });
            }
        },
        url: function(a, c, d, e, f, g) {
            ib(a, c, d, e, f, g), hc(e), e.$$parserName = "url", e.$validators.url = function(a, c) {
                var d = a || c;
                return e.$isEmpty(d) || Yf.test(d);
            };
        },
        email: function(a, c, d, e, f, g) {
            ib(a, c, d, e, f, g), hc(e), e.$$parserName = "email", e.$validators.email = function(a, c) {
                var d = a || c;
                return e.$isEmpty(d) || Zf.test(d);
            };
        },
        radio: function(a, c, d, e) {
            A(d.name) && c.attr("name", ++nb), c.on("click", function(a) {
                c[0].checked && e.$setViewValue(d.value, a && a.type);
            }), e.$render = function() {
                c[0].checked = d.value == e.$viewValue;
            }, d.$observe("value", e.$render);
        },
        checkbox: function(a, c, d, e, f, g, h, l) {
            var k = ud(l, a, "ngTrueValue", d.ngTrueValue, !0), m = ud(l, a, "ngFalseValue", d.ngFalseValue, !1);
            c.on("click", function(a) {
                e.$setViewValue(c[0].checked, a && a.type);
            }), e.$render = function() {
                c[0].checked = e.$viewValue;
            }, e.$isEmpty = function(a) {
                return !1 === a;
            }, e.$formatters.push(function(a) {
                return fa(a, k);
            }), e.$parsers.push(function(a) {
                return a ? k : m;
            });
        },
        hidden: H,
        button: H,
        submit: H,
        reset: H,
        file: H
    }, xc = [ "$browser", "$sniffer", "$filter", "$parse", function(a, c, d, e) {
        return {
            restrict: "E",
            require: [ "?ngModel" ],
            link: {
                pre: function(f, g, h, l) {
                    l[0] && (Dd[Q(h.type)] || Dd.text)(f, g, h, l[0], c, a, d, e);
                }
            }
        };
    } ], ag = /^(true|false|\d+)$/, ye = function() {
        return {
            restrict: "A",
            priority: 100,
            compile: function(a, c) {
                return ag.test(c.ngValue) ? function(a, c, f) {
                    f.$set("value", a.$eval(f.ngValue));
                } : function(a, c, f) {
                    a.$watch(f.ngValue, function(a) {
                        f.$set("value", a);
                    });
                };
            }
        };
    }, Zd = [ "$compile", function(a) {
        return {
            restrict: "AC",
            compile: function(c) {
                return a.$$addBindingClass(c), function(c, e, f) {
                    a.$$addBindingInfo(e, f.ngBind), e = e[0], c.$watch(f.ngBind, function(a) {
                        e.textContent = a === t ? "" : a;
                    });
                };
            }
        };
    } ], ae = [ "$interpolate", "$compile", function(a, c) {
        return {
            compile: function(d) {
                return c.$$addBindingClass(d), function(d, f, g) {
                    d = a(f.attr(g.$attr.ngBindTemplate)), c.$$addBindingInfo(f, d.expressions), f = f[0], 
                    g.$observe("ngBindTemplate", function(a) {
                        f.textContent = a === t ? "" : a;
                    });
                };
            }
        };
    } ], $d = [ "$sce", "$parse", "$compile", function(a, c, d) {
        return {
            restrict: "A",
            compile: function(e, f) {
                var g = c(f.ngBindHtml), h = c(f.ngBindHtml, function(a) {
                    return (a || "").toString();
                });
                return d.$$addBindingClass(e), function(c, e, f) {
                    d.$$addBindingInfo(e, f.ngBindHtml), c.$watch(h, function() {
                        e.html(a.getTrustedHtml(g(c)) || "");
                    });
                };
            }
        };
    } ], xe = da({
        restrict: "A",
        require: "ngModel",
        link: function(a, c, d, e) {
            e.$viewChangeListeners.push(function() {
                a.$eval(d.ngChange);
            });
        }
    }), be = ic("", !0), de = ic("Odd", 0), ce = ic("Even", 1), ee = Ja({
        compile: function(a, c) {
            c.$set("ngCloak", t), a.removeClass("ng-cloak");
        }
    }), fe = [ function() {
        return {
            restrict: "A",
            scope: !0,
            controller: "@",
            priority: 500
        };
    } ], Cc = {}, bg = {
        blur: !0,
        focus: !0
    };
    s("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(a) {
        var c = ya("ng-" + a);
        Cc[c] = [ "$parse", "$rootScope", function(d, e) {
            return {
                restrict: "A",
                compile: function(f, g) {
                    var h = d(g[c], null, !0);
                    return function(c, d) {
                        d.on(a, function(d) {
                            var f = function() {
                                h(c, {
                                    $event: d
                                });
                            };
                            bg[a] && e.$$phase ? c.$evalAsync(f) : c.$apply(f);
                        });
                    };
                }
            };
        } ];
    });
    var ie = [ "$animate", function(a) {
        return {
            multiElement: !0,
            transclude: "element",
            priority: 600,
            terminal: !0,
            restrict: "A",
            $$tlb: !0,
            link: function(c, d, e, f, g) {
                var h, l, k;
                c.$watch(e.ngIf, function(c) {
                    c ? l || g(function(c, f) {
                        l = f, c[c.length++] = Y.createComment(" end ngIf: " + e.ngIf + " "), h = {
                            clone: c
                        }, a.enter(c, d.parent(), d);
                    }) : (k && (k.remove(), k = null), l && (l.$destroy(), l = null), h && (k = tb(h.clone), 
                    a.leave(k).then(function() {
                        k = null;
                    }), h = null));
                });
            }
        };
    } ], je = [ "$templateRequest", "$anchorScroll", "$animate", "$sce", function(a, c, d, e) {
        return {
            restrict: "ECA",
            priority: 400,
            terminal: !0,
            transclude: "element",
            controller: ga.noop,
            compile: function(f, g) {
                var h = g.ngInclude || g.src, l = g.onload || "", k = g.autoscroll;
                return function(f, g, q, s, r) {
                    var p, v, w, t = 0, L = function() {
                        v && (v.remove(), v = null), p && (p.$destroy(), p = null), w && (d.leave(w).then(function() {
                            v = null;
                        }), v = w, w = null);
                    };
                    f.$watch(e.parseAsResourceUrl(h), function(e) {
                        var h = function() {
                            !y(k) || k && !f.$eval(k) || c();
                        }, q = ++t;
                        e ? (a(e, !0).then(function(a) {
                            if (q === t) {
                                var c = f.$new();
                                s.template = a, a = r(c, function(a) {
                                    L(), d.enter(a, null, g).then(h);
                                }), p = c, w = a, p.$emit("$includeContentLoaded", e), f.$eval(l);
                            }
                        }, function() {
                            q === t && (L(), f.$emit("$includeContentError", e));
                        }), f.$emit("$includeContentRequested", e)) : (L(), s.template = null);
                    });
                };
            }
        };
    } ], Ae = [ "$compile", function(a) {
        return {
            restrict: "ECA",
            priority: -400,
            require: "ngInclude",
            link: function(c, d, e, f) {
                /SVG/.test(d[0].toString()) ? (d.empty(), a(Fc(f.template, Y).childNodes)(c, function(a) {
                    d.append(a);
                }, {
                    futureParentElement: d
                })) : (d.html(f.template), a(d.contents())(c));
            }
        };
    } ], ke = Ja({
        priority: 450,
        compile: function() {
            return {
                pre: function(a, c, d) {
                    a.$eval(d.ngInit);
                }
            };
        }
    }), we = function() {
        return {
            restrict: "A",
            priority: 100,
            require: "ngModel",
            link: function(a, c, d, e) {
                var f = c.attr(d.$attr.ngList) || ", ", g = "false" !== d.ngTrim, h = g ? U(f) : f;
                e.$parsers.push(function(a) {
                    if (!A(a)) {
                        var c = [];
                        return a && s(a.split(h), function(a) {
                            a && c.push(g ? U(a) : a);
                        }), c;
                    }
                }), e.$formatters.push(function(a) {
                    return D(a) ? a.join(f) : t;
                }), e.$isEmpty = function(a) {
                    return !a || !a.length;
                };
            }
        };
    }, kb = "ng-valid", vd = "ng-invalid", Sa = "ng-pristine", Kb = "ng-dirty", xd = "ng-pending", Mb = new T("ngModel"), cg = [ "$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", "$timeout", "$rootScope", "$q", "$interpolate", function(a, c, d, e, f, g, h, l, k, m) {
        this.$modelValue = this.$viewValue = Number.NaN, this.$$rawModelValue = t, this.$validators = {}, 
        this.$asyncValidators = {}, this.$parsers = [], this.$formatters = [], this.$viewChangeListeners = [], 
        this.$untouched = !0, this.$touched = !1, this.$pristine = !0, this.$dirty = !1, 
        this.$valid = !0, this.$invalid = !1, this.$error = {}, this.$$success = {}, this.$pending = t, 
        this.$name = m(d.name || "", !1)(a);
        var n = f(d.ngModel), q = n.assign, u = n, r = q, O = null, p = this;
        this.$$setOptions = function(a) {
            if ((p.$options = a) && a.getterSetter) {
                var c = f(d.ngModel + "()"), g = f(d.ngModel + "($$$p)");
                u = function(a) {
                    var d = n(a);
                    return G(d) && (d = c(a)), d;
                }, r = function(a) {
                    G(n(a)) ? g(a, {
                        $$$p: p.$modelValue
                    }) : q(a, p.$modelValue);
                };
            } else if (!n.assign) throw Mb("nonassign", d.ngModel, va(e));
        }, this.$render = H, this.$isEmpty = function(a) {
            return A(a) || "" === a || null === a || a !== a;
        };
        var v = e.inheritedData("$formController") || Jb, w = 0;
        sd({
            ctrl: this,
            $element: e,
            set: function(a, c) {
                a[c] = !0;
            },
            unset: function(a, c) {
                delete a[c];
            },
            parentForm: v,
            $animate: g
        }), this.$setPristine = function() {
            p.$dirty = !1, p.$pristine = !0, g.removeClass(e, Kb), g.addClass(e, Sa);
        }, this.$setDirty = function() {
            p.$dirty = !0, p.$pristine = !1, g.removeClass(e, Sa), g.addClass(e, Kb), v.$setDirty();
        }, this.$setUntouched = function() {
            p.$touched = !1, p.$untouched = !0, g.setClass(e, "ng-untouched", "ng-touched");
        }, this.$setTouched = function() {
            p.$touched = !0, p.$untouched = !1, g.setClass(e, "ng-touched", "ng-untouched");
        }, this.$rollbackViewValue = function() {
            h.cancel(O), p.$viewValue = p.$$lastCommittedViewValue, p.$render();
        }, this.$validate = function() {
            if (!V(p.$modelValue) || !isNaN(p.$modelValue)) {
                var a = p.$$rawModelValue, c = p.$valid, d = p.$modelValue, e = p.$options && p.$options.allowInvalid;
                p.$$runValidators(p.$error[p.$$parserName || "parse"] ? !1 : t, a, p.$$lastCommittedViewValue, function(f) {
                    e || c === f || (p.$modelValue = f ? a : t, p.$modelValue !== d && p.$$writeModelToScope());
                });
            }
        }, this.$$runValidators = function(a, c, d, e) {
            function f() {
                var a = !0;
                return s(p.$validators, function(e, f) {
                    var g = e(c, d);
                    a = a && g, h(f, g);
                }), a ? !0 : (s(p.$asyncValidators, function(a, c) {
                    h(c, null);
                }), !1);
            }
            function g() {
                var a = [], e = !0;
                s(p.$asyncValidators, function(f, g) {
                    var l = f(c, d);
                    if (!l || !G(l.then)) throw Mb("$asyncValidators", l);
                    h(g, t), a.push(l.then(function() {
                        h(g, !0);
                    }, function() {
                        e = !1, h(g, !1);
                    }));
                }), a.length ? k.all(a).then(function() {
                    l(e);
                }, H) : l(!0);
            }
            function h(a, c) {
                m === w && p.$setValidity(a, c);
            }
            function l(a) {
                m === w && e(a);
            }
            w++;
            var m = w;
            (function(a) {
                var c = p.$$parserName || "parse";
                if (a === t) h(c, null); else if (h(c, a), !a) return s(p.$validators, function(a, c) {
                    h(c, null);
                }), s(p.$asyncValidators, function(a, c) {
                    h(c, null);
                }), !1;
                return !0;
            })(a) && f() ? g() : l(!1);
        }, this.$commitViewValue = function() {
            var a = p.$viewValue;
            h.cancel(O), (p.$$lastCommittedViewValue !== a || "" === a && p.$$hasNativeValidators) && (p.$$lastCommittedViewValue = a, 
            p.$pristine && this.$setDirty(), this.$$parseAndValidate());
        }, this.$$parseAndValidate = function() {
            var c = p.$$lastCommittedViewValue, d = A(c) ? t : !0;
            if (d) for (var e = 0; e < p.$parsers.length; e++) if (c = p.$parsers[e](c), A(c)) {
                d = !1;
                break;
            }
            V(p.$modelValue) && isNaN(p.$modelValue) && (p.$modelValue = u(a));
            var f = p.$modelValue, g = p.$options && p.$options.allowInvalid;
            p.$$rawModelValue = c, g && (p.$modelValue = c, p.$modelValue !== f && p.$$writeModelToScope()), 
            p.$$runValidators(d, c, p.$$lastCommittedViewValue, function(a) {
                g || (p.$modelValue = a ? c : t, p.$modelValue !== f && p.$$writeModelToScope());
            });
        }, this.$$writeModelToScope = function() {
            r(a, p.$modelValue), s(p.$viewChangeListeners, function(a) {
                try {
                    a();
                } catch (d) {
                    c(d);
                }
            });
        }, this.$setViewValue = function(a, c) {
            p.$viewValue = a, p.$options && !p.$options.updateOnDefault || p.$$debounceViewValueCommit(c);
        }, this.$$debounceViewValueCommit = function(c) {
            var d = 0, e = p.$options;
            e && y(e.debounce) && (e = e.debounce, V(e) ? d = e : V(e[c]) ? d = e[c] : V(e["default"]) && (d = e["default"])), 
            h.cancel(O), d ? O = h(function() {
                p.$commitViewValue();
            }, d) : l.$$phase ? p.$commitViewValue() : a.$apply(function() {
                p.$commitViewValue();
            });
        }, a.$watch(function() {
            var c = u(a);
            if (c !== p.$modelValue) {
                p.$modelValue = p.$$rawModelValue = c;
                for (var d = p.$formatters, e = d.length, f = c; e--; ) f = d[e](f);
                p.$viewValue !== f && (p.$viewValue = p.$$lastCommittedViewValue = f, p.$render(), 
                p.$$runValidators(t, c, f, H));
            }
            return c;
        });
    } ], ve = [ "$rootScope", function(a) {
        return {
            restrict: "A",
            require: [ "ngModel", "^?form", "^?ngModelOptions" ],
            controller: cg,
            priority: 1,
            compile: function(c) {
                return c.addClass(Sa).addClass("ng-untouched").addClass(kb), {
                    pre: function(a, c, f, g) {
                        var h = g[0], l = g[1] || Jb;
                        h.$$setOptions(g[2] && g[2].$options), l.$addControl(h), f.$observe("name", function(a) {
                            h.$name !== a && l.$$renameControl(h, a);
                        }), a.$on("$destroy", function() {
                            l.$removeControl(h);
                        });
                    },
                    post: function(c, e, f, g) {
                        var h = g[0];
                        h.$options && h.$options.updateOn && e.on(h.$options.updateOn, function(a) {
                            h.$$debounceViewValueCommit(a && a.type);
                        }), e.on("blur", function() {
                            h.$touched || (a.$$phase ? c.$evalAsync(h.$setTouched) : c.$apply(h.$setTouched));
                        });
                    }
                };
            }
        };
    } ], dg = /(\s+|^)default(\s+|$)/, ze = function() {
        return {
            restrict: "A",
            controller: [ "$scope", "$attrs", function(a, c) {
                var d = this;
                this.$options = a.$eval(c.ngModelOptions), this.$options.updateOn !== t ? (this.$options.updateOnDefault = !1, 
                this.$options.updateOn = U(this.$options.updateOn.replace(dg, function() {
                    return d.$options.updateOnDefault = !0, " ";
                }))) : this.$options.updateOnDefault = !0;
            } ]
        };
    }, le = Ja({
        terminal: !0,
        priority: 1e3
    }), me = [ "$locale", "$interpolate", function(a, c) {
        var d = /{}/g, e = /^when(Minus)?(.+)$/;
        return {
            restrict: "EA",
            link: function(f, g, h) {
                function l(a) {
                    g.text(a || "");
                }
                var v, k = h.count, m = h.$attr.when && g.attr(h.$attr.when), n = h.offset || 0, q = f.$eval(m) || {}, u = {}, m = c.startSymbol(), r = c.endSymbol(), t = m + k + "-" + n + r, p = ga.noop;
                s(h, function(a, c) {
                    var d = e.exec(c);
                    d && (d = (d[1] ? "-" : "") + Q(d[2]), q[d] = g.attr(h.$attr[c]));
                }), s(q, function(a, e) {
                    u[e] = c(a.replace(d, t));
                }), f.$watch(k, function(c) {
                    c = parseFloat(c);
                    var d = isNaN(c);
                    d || c in q || (c = a.pluralCat(c - n)), c === v || d && isNaN(v) || (p(), p = f.$watch(u[c], l), 
                    v = c);
                });
            }
        };
    } ], ne = [ "$parse", "$animate", function(a, c) {
        var d = T("ngRepeat"), e = function(a, c, d, e, k, m, n) {
            a[d] = e, k && (a[k] = m), a.$index = c, a.$first = 0 === c, a.$last = c === n - 1, 
            a.$middle = !(a.$first || a.$last), a.$odd = !(a.$even = 0 === (1 & c));
        };
        return {
            restrict: "A",
            multiElement: !0,
            transclude: "element",
            priority: 1e3,
            terminal: !0,
            $$tlb: !0,
            compile: function(f, g) {
                var h = g.ngRepeat, l = Y.createComment(" end ngRepeat: " + h + " "), k = h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
                if (!k) throw d("iexp", h);
                var m = k[1], n = k[2], q = k[3], u = k[4], k = m.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);
                if (!k) throw d("iidexp", m);
                var r = k[3] || k[1], y = k[2];
                if (q && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(q) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(q))) throw d("badident", q);
                var p, v, w, A, z = {
                    $id: Na
                };
                return u ? p = a(u) : (w = function(a, c) {
                    return Na(c);
                }, A = function(a) {
                    return a;
                }), function(a, f, g, k, m) {
                    p && (v = function(c, d, e) {
                        return y && (z[y] = c), z[r] = d, z.$index = e, p(a, z);
                    });
                    var u = ha();
                    a.$watchCollection(n, function(g) {
                        var k, p, E, H, S, N, D, G, C, I, n = f[0], z = ha();
                        if (q && (a[q] = g), Ta(g)) G = g, p = v || w; else {
                            p = v || A, G = [];
                            for (I in g) g.hasOwnProperty(I) && "$" != I.charAt(0) && G.push(I);
                            G.sort();
                        }
                        for (H = G.length, I = Array(H), k = 0; H > k; k++) if (S = g === G ? k : G[k], 
                        N = g[S], D = p(S, N, k), u[D]) C = u[D], delete u[D], z[D] = C, I[k] = C; else {
                            if (z[D]) throw s(I, function(a) {
                                a && a.scope && (u[a.id] = a);
                            }), d("dupes", h, D, N);
                            I[k] = {
                                id: D,
                                scope: t,
                                clone: t
                            }, z[D] = !0;
                        }
                        for (E in u) {
                            if (C = u[E], D = tb(C.clone), c.leave(D), D[0].parentNode) for (k = 0, p = D.length; p > k; k++) D[k].$$NG_REMOVED = !0;
                            C.scope.$destroy();
                        }
                        for (k = 0; H > k; k++) if (S = g === G ? k : G[k], N = g[S], C = I[k], C.scope) {
                            E = n;
                            do E = E.nextSibling; while (E && E.$$NG_REMOVED);
                            C.clone[0] != E && c.move(tb(C.clone), null, B(n)), n = C.clone[C.clone.length - 1], 
                            e(C.scope, k, r, N, y, S, H);
                        } else m(function(a, d) {
                            C.scope = d;
                            var f = l.cloneNode(!1);
                            a[a.length++] = f, c.enter(a, null, B(n)), n = f, C.clone = a, z[C.id] = C, e(C.scope, k, r, N, y, S, H);
                        });
                        u = z;
                    });
                };
            }
        };
    } ], oe = [ "$animate", function(a) {
        return {
            restrict: "A",
            multiElement: !0,
            link: function(c, d, e) {
                c.$watch(e.ngShow, function(c) {
                    a[c ? "removeClass" : "addClass"](d, "ng-hide", {
                        tempClasses: "ng-hide-animate"
                    });
                });
            }
        };
    } ], he = [ "$animate", function(a) {
        return {
            restrict: "A",
            multiElement: !0,
            link: function(c, d, e) {
                c.$watch(e.ngHide, function(c) {
                    a[c ? "addClass" : "removeClass"](d, "ng-hide", {
                        tempClasses: "ng-hide-animate"
                    });
                });
            }
        };
    } ], pe = Ja(function(a, c, d) {
        a.$watchCollection(d.ngStyle, function(a, d) {
            d && a !== d && s(d, function(a, d) {
                c.css(d, "");
            }), a && c.css(a);
        });
    }), qe = [ "$animate", function(a) {
        return {
            restrict: "EA",
            require: "ngSwitch",
            controller: [ "$scope", function() {
                this.cases = {};
            } ],
            link: function(c, d, e, f) {
                var g = [], h = [], l = [], k = [], m = function(a, c) {
                    return function() {
                        a.splice(c, 1);
                    };
                };
                c.$watch(e.ngSwitch || e.on, function(c) {
                    var d, e;
                    for (d = 0, e = l.length; e > d; ++d) a.cancel(l[d]);
                    for (d = l.length = 0, e = k.length; e > d; ++d) {
                        var r = tb(h[d].clone);
                        k[d].$destroy(), (l[d] = a.leave(r)).then(m(l, d));
                    }
                    h.length = 0, k.length = 0, (g = f.cases["!" + c] || f.cases["?"]) && s(g, function(c) {
                        c.transclude(function(d, e) {
                            k.push(e);
                            var f = c.element;
                            d[d.length++] = Y.createComment(" end ngSwitchWhen: "), h.push({
                                clone: d
                            }), a.enter(d, f.parent(), f);
                        });
                    });
                });
            }
        };
    } ], re = Ja({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: !0,
        link: function(a, c, d, e, f) {
            e.cases["!" + d.ngSwitchWhen] = e.cases["!" + d.ngSwitchWhen] || [], e.cases["!" + d.ngSwitchWhen].push({
                transclude: f,
                element: c
            });
        }
    }), se = Ja({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: !0,
        link: function(a, c, d, e, f) {
            e.cases["?"] = e.cases["?"] || [], e.cases["?"].push({
                transclude: f,
                element: c
            });
        }
    }), ue = Ja({
        restrict: "EAC",
        link: function(a, c, d, e, f) {
            if (!f) throw T("ngTransclude")("orphan", va(c));
            f(function(a) {
                c.empty(), c.append(a);
            });
        }
    }), Vd = [ "$templateCache", function(a) {
        return {
            restrict: "E",
            terminal: !0,
            compile: function(c, d) {
                "text/ng-template" == d.type && a.put(d.id, c[0].text);
            }
        };
    } ], eg = T("ngOptions"), te = da({
        restrict: "A",
        terminal: !0
    }), Wd = [ "$compile", "$parse", function(a, c) {
        var d = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/, e = {
            $setViewValue: H
        };
        return {
            restrict: "E",
            require: [ "select", "?ngModel" ],
            controller: [ "$element", "$scope", "$attrs", function(a, c, d) {
                var n, l = this, k = {}, m = e;
                l.databound = d.ngModel, l.init = function(a, c, d) {
                    m = a, n = d;
                }, l.addOption = function(c, d) {
                    Ma(c, '"option value"'), k[c] = !0, m.$viewValue == c && (a.val(c), n.parent() && n.remove()), 
                    d && d[0].hasAttribute("selected") && (d[0].selected = !0);
                }, l.removeOption = function(a) {
                    this.hasOption(a) && (delete k[a], m.$viewValue === a && this.renderUnknownOption(a));
                }, l.renderUnknownOption = function(c) {
                    c = "? " + Na(c) + " ?", n.val(c), a.prepend(n), a.val(c), n.prop("selected", !0);
                }, l.hasOption = function(a) {
                    return k.hasOwnProperty(a);
                }, c.$on("$destroy", function() {
                    l.renderUnknownOption = H;
                });
            } ],
            link: function(e, g, h, l) {
                function k(a, c, d, e) {
                    d.$render = function() {
                        var a = d.$viewValue;
                        e.hasOption(a) ? (C.parent() && C.remove(), c.val(a), "" === a && p.prop("selected", !0)) : A(a) && p ? c.val("") : e.renderUnknownOption(a);
                    }, c.on("change", function() {
                        a.$apply(function() {
                            C.parent() && C.remove(), d.$setViewValue(c.val());
                        });
                    });
                }
                function m(a, c, d) {
                    var e;
                    d.$render = function() {
                        var a = new db(d.$viewValue);
                        s(c.find("option"), function(c) {
                            c.selected = y(a.get(c.value));
                        });
                    }, a.$watch(function() {
                        fa(e, d.$viewValue) || (e = ra(d.$viewValue), d.$render());
                    }), c.on("change", function() {
                        a.$apply(function() {
                            var a = [];
                            s(c.find("option"), function(c) {
                                c.selected && a.push(c.value);
                            }), d.$setViewValue(a);
                        });
                    });
                }
                function n(e, f, g) {
                    function h(a, c, d) {
                        return T[x] = d, G && (T[G] = c), a(e, T);
                    }
                    function k(a) {
                        var c;
                        if (u) if (M && D(a)) {
                            c = new db([]);
                            for (var d = 0; d < a.length; d++) c.put(h(M, null, a[d]), !0);
                        } else c = new db(a); else M && (a = h(M, null, a));
                        return function(d, e) {
                            var f;
                            return f = M ? M : B ? B : F, u ? y(c.remove(h(f, d, e))) : a === h(f, d, e);
                        };
                    }
                    function l() {
                        v || (e.$$postDigest(p), v = !0);
                    }
                    function m(a, c, d) {
                        a[c] = a[c] || 0, a[c] += d ? 1 : -1;
                    }
                    function p() {
                        v = !1;
                        var d, l, n, r, t, a = {
                            "": []
                        }, c = [ "" ];
                        n = g.$viewValue, r = P(e) || [];
                        var x, A, D, F, B = G ? Object.keys(r).sort() : r, N = {};
                        t = k(n);
                        var U, V, J = !1;
                        for (Q = {}, F = 0; D = B.length, D > F; F++) x = F, G && (x = B[F], "$" === x.charAt(0)) || (A = r[x], 
                        d = h(I, x, A) || "", (l = a[d]) || (l = a[d] = [], c.push(d)), d = t(x, A), J = J || d, 
                        A = h(C, x, A), A = y(A) ? A : "", V = M ? M(e, T) : G ? B[F] : F, M && (Q[V] = x), 
                        l.push({
                            id: V,
                            label: A,
                            selected: d
                        }));
                        for (u || (z || null === n ? a[""].unshift({
                            id: "",
                            label: "",
                            selected: !J
                        }) : J || a[""].unshift({
                            id: "?",
                            label: "",
                            selected: !0
                        })), x = 0, B = c.length; B > x; x++) {
                            for (d = c[x], l = a[d], R.length <= x ? (n = {
                                element: H.clone().attr("label", d),
                                label: l.label
                            }, r = [ n ], R.push(r), f.append(n.element)) : (r = R[x], n = r[0], n.label != d && n.element.attr("label", n.label = d)), 
                            J = null, F = 0, D = l.length; D > F; F++) d = l[F], (t = r[F + 1]) ? (J = t.element, 
                            t.label !== d.label && (m(N, t.label, !1), m(N, d.label, !0), J.text(t.label = d.label), 
                            J.prop("label", t.label)), t.id !== d.id && J.val(t.id = d.id), J[0].selected !== d.selected && (J.prop("selected", t.selected = d.selected), 
                            Ra && J.prop("selected", t.selected))) : ("" === d.id && z ? U = z : (U = w.clone()).val(d.id).prop("selected", d.selected).attr("selected", d.selected).prop("label", d.label).text(d.label), 
                            r.push(t = {
                                element: U,
                                label: d.label,
                                id: d.id,
                                selected: d.selected
                            }), m(N, d.label, !0), J ? J.after(U) : n.element.append(U), J = U);
                            for (F++; r.length > F; ) d = r.pop(), m(N, d.label, !1), d.element.remove();
                        }
                        for (;R.length > x; ) {
                            for (l = R.pop(), F = 1; F < l.length; ++F) m(N, l[F].label, !1);
                            l[0].element.remove();
                        }
                        s(N, function(a, c) {
                            a > 0 ? q.addOption(c) : 0 > a && q.removeOption(c);
                        });
                    }
                    var n;
                    if (!(n = r.match(d))) throw eg("iexp", r, va(f));
                    var C = c(n[2] || n[1]), x = n[4] || n[6], A = / as /.test(n[0]) && n[1], B = A ? c(A) : null, G = n[5], I = c(n[3] || ""), F = c(n[2] ? n[1] : x), P = c(n[7]), M = n[8] ? c(n[8]) : null, Q = {}, R = [ [ {
                        element: f,
                        label: ""
                    } ] ], T = {};
                    z && (a(z)(e), z.removeClass("ng-scope"), z.remove()), f.empty(), f.on("change", function() {
                        e.$apply(function() {
                            var c, a = P(e) || [];
                            if (u) c = [], s(f.val(), function(d) {
                                d = M ? Q[d] : d, c.push("?" === d ? t : "" === d ? null : h(B ? B : F, d, a[d]));
                            }); else {
                                var d = M ? Q[f.val()] : f.val();
                                c = "?" === d ? t : "" === d ? null : h(B ? B : F, d, a[d]);
                            }
                            g.$setViewValue(c), p();
                        });
                    }), g.$render = p, e.$watchCollection(P, l), e.$watchCollection(function() {
                        var c, a = P(e);
                        if (a && D(a)) {
                            c = Array(a.length);
                            for (var d = 0, f = a.length; f > d; d++) c[d] = h(C, d, a[d]);
                        } else if (a) for (d in c = {}, a) a.hasOwnProperty(d) && (c[d] = h(C, d, a[d]));
                        return c;
                    }, l), u && e.$watchCollection(function() {
                        return g.$modelValue;
                    }, l);
                }
                if (l[1]) {
                    var q = l[0];
                    l = l[1];
                    var p, u = h.multiple, r = h.ngOptions, z = !1, v = !1, w = B(Y.createElement("option")), H = B(Y.createElement("optgroup")), C = w.clone();
                    h = 0;
                    for (var x = g.children(), G = x.length; G > h; h++) if ("" === x[h].value) {
                        p = z = x.eq(h);
                        break;
                    }
                    q.init(l, z, C), u && (l.$isEmpty = function(a) {
                        return !a || 0 === a.length;
                    }), r ? n(e, g, l) : u ? m(e, g, l) : k(e, g, l, q);
                }
            }
        };
    } ], Yd = [ "$interpolate", function(a) {
        var c = {
            addOption: H,
            removeOption: H
        };
        return {
            restrict: "E",
            priority: 100,
            compile: function(d, e) {
                if (A(e.value)) {
                    var f = a(d.text(), !0);
                    f || e.$set("value", d.text());
                }
                return function(a, d, e) {
                    var k = d.parent(), m = k.data("$selectController") || k.parent().data("$selectController");
                    m && m.databound || (m = c), f ? a.$watch(f, function(a, c) {
                        e.$set("value", a), c !== a && m.removeOption(c), m.addOption(a, d);
                    }) : m.addOption(e.value, d), d.on("$destroy", function() {
                        m.removeOption(e.value);
                    });
                };
            }
        };
    } ], Xd = da({
        restrict: "E",
        terminal: !1
    }), zc = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                e && (d.required = !0, e.$validators.required = function(a, c) {
                    return !d.required || !e.$isEmpty(c);
                }, d.$observe("required", function() {
                    e.$validate();
                }));
            }
        };
    }, yc = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                if (e) {
                    var f, g = d.ngPattern || d.pattern;
                    d.$observe("pattern", function(a) {
                        if (F(a) && 0 < a.length && (a = new RegExp("^" + a + "$")), a && !a.test) throw T("ngPattern")("noregexp", g, a, va(c));
                        f = a || t, e.$validate();
                    }), e.$validators.pattern = function(a) {
                        return e.$isEmpty(a) || A(f) || f.test(a);
                    };
                }
            }
        };
    }, Bc = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                if (e) {
                    var f = -1;
                    d.$observe("maxlength", function(a) {
                        a = ba(a), f = isNaN(a) ? -1 : a, e.$validate();
                    }), e.$validators.maxlength = function(a, c) {
                        return 0 > f || e.$isEmpty(a) || c.length <= f;
                    };
                }
            }
        };
    }, Ac = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                if (e) {
                    var f = 0;
                    d.$observe("minlength", function(a) {
                        f = ba(a) || 0, e.$validate();
                    }), e.$validators.minlength = function(a, c) {
                        return e.$isEmpty(c) || c.length >= f;
                    };
                }
            }
        };
    };
    M.angular.bootstrap ? console.log("WARNING: Tried to load angular more than once.") : (Nd(), 
    Pd(ga), B(Y).ready(function() {
        Jd(Y, sc);
    }));
}(window, document), !window.angular.$$csp() && window.angular.element(document).find("head").prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}</style>'), 
function(p, d) {
    "use strict";
    function v(r, h, g) {
        return {
            restrict: "ECA",
            terminal: !0,
            priority: 400,
            transclude: "element",
            link: function(a, c, b, f, y) {
                function z() {
                    k && (g.cancel(k), k = null), l && (l.$destroy(), l = null), m && (k = g.leave(m), 
                    k.then(function() {
                        k = null;
                    }), m = null);
                }
                function x() {
                    var b = r.current && r.current.locals;
                    if (d.isDefined(b && b.$template)) {
                        var b = a.$new(), f = r.current;
                        m = y(b, function(b) {
                            g.enter(b, null, m || c).then(function() {
                                !d.isDefined(t) || t && !a.$eval(t) || h();
                            }), z();
                        }), l = f.scope = b, l.$emit("$viewContentLoaded"), l.$eval(w);
                    } else z();
                }
                var l, m, k, t = b.autoscroll, w = b.onload || "";
                a.$on("$routeChangeSuccess", x), x();
            }
        };
    }
    function A(d, h, g) {
        return {
            restrict: "ECA",
            priority: -400,
            link: function(a, c) {
                var b = g.current, f = b.locals;
                c.html(f.$template);
                var y = d(c.contents());
                b.controller && (f.$scope = a, f = h(b.controller, f), b.controllerAs && (a[b.controllerAs] = f), 
                c.data("$ngControllerController", f), c.children().data("$ngControllerController", f)), 
                y(a);
            }
        };
    }
    p = d.module("ngRoute", [ "ng" ]).provider("$route", function() {
        function r(a, c) {
            return d.extend(Object.create(a), c);
        }
        function h(a, d) {
            var b = d.caseInsensitiveMatch, f = {
                originalPath: a,
                regexp: a
            }, g = f.keys = [];
            return a = a.replace(/([().])/g, "\\$1").replace(/(\/)?:(\w+)([\?\*])?/g, function(a, d, b, c) {
                return a = "?" === c ? c : null, c = "*" === c ? c : null, g.push({
                    name: b,
                    optional: !!a
                }), d = d || "", "" + (a ? "" : d) + "(?:" + (a ? d : "") + (c && "(.+?)" || "([^/]+)") + (a || "") + ")" + (a || "");
            }).replace(/([\/$\*])/g, "\\$1"), f.regexp = new RegExp("^" + a + "$", b ? "i" : ""), 
            f;
        }
        var g = {};
        this.when = function(a, c) {
            var b = d.copy(c);
            if (d.isUndefined(b.reloadOnSearch) && (b.reloadOnSearch = !0), d.isUndefined(b.caseInsensitiveMatch) && (b.caseInsensitiveMatch = this.caseInsensitiveMatch), 
            g[a] = d.extend(b, a && h(a, b)), a) {
                var f = "/" == a[a.length - 1] ? a.substr(0, a.length - 1) : a + "/";
                g[f] = d.extend({
                    redirectTo: a
                }, h(f, b));
            }
            return this;
        }, this.caseInsensitiveMatch = !1, this.otherwise = function(a) {
            return "string" == typeof a && (a = {
                redirectTo: a
            }), this.when(null, a), this;
        }, this.$get = [ "$rootScope", "$location", "$routeParams", "$q", "$injector", "$templateRequest", "$sce", function(a, c, b, f, h, p, x) {
            function l(b) {
                var e = s.current;
                (v = (n = k()) && e && n.$$route === e.$$route && d.equals(n.pathParams, e.pathParams) && !n.reloadOnSearch && !w) || !e && !n || a.$broadcast("$routeChangeStart", n, e).defaultPrevented && b && b.preventDefault();
            }
            function m() {
                var u = s.current, e = n;
                v ? (u.params = e.params, d.copy(u.params, b), a.$broadcast("$routeUpdate", u)) : (e || u) && (w = !1, 
                (s.current = e) && e.redirectTo && (d.isString(e.redirectTo) ? c.path(t(e.redirectTo, e.params)).search(e.params).replace() : c.url(e.redirectTo(e.pathParams, c.path(), c.search())).replace()), 
                f.when(e).then(function() {
                    if (e) {
                        var b, c, a = d.extend({}, e.resolve);
                        return d.forEach(a, function(b, e) {
                            a[e] = d.isString(b) ? h.get(b) : h.invoke(b, null, null, e);
                        }), d.isDefined(b = e.template) ? d.isFunction(b) && (b = b(e.params)) : d.isDefined(c = e.templateUrl) && (d.isFunction(c) && (c = c(e.params)), 
                        c = x.getTrustedResourceUrl(c), d.isDefined(c) && (e.loadedTemplateUrl = c, b = p(c))), 
                        d.isDefined(b) && (a.$template = b), f.all(a);
                    }
                }).then(function(c) {
                    e == s.current && (e && (e.locals = c, d.copy(e.params, b)), a.$broadcast("$routeChangeSuccess", e, u));
                }, function(b) {
                    e == s.current && a.$broadcast("$routeChangeError", e, u, b);
                }));
            }
            function k() {
                var a, b;
                return d.forEach(g, function(f) {
                    var q;
                    if (q = !b) {
                        var h = c.path();
                        q = f.keys;
                        var l = {};
                        if (f.regexp) if (h = f.regexp.exec(h)) {
                            for (var k = 1, m = h.length; m > k; ++k) {
                                var n = q[k - 1], p = h[k];
                                n && p && (l[n.name] = p);
                            }
                            q = l;
                        } else q = null; else q = null;
                        q = a = q;
                    }
                    q && (b = r(f, {
                        params: d.extend({}, c.search(), a),
                        pathParams: a
                    }), b.$$route = f);
                }), b || g[null] && r(g[null], {
                    params: {},
                    pathParams: {}
                });
            }
            function t(a, b) {
                var c = [];
                return d.forEach((a || "").split(":"), function(a, d) {
                    if (0 === d) c.push(a); else {
                        var f = a.match(/(\w+)(?:[?*])?(.*)/), g = f[1];
                        c.push(b[g]), c.push(f[2] || ""), delete b[g];
                    }
                }), c.join("");
            }
            var n, v, w = !1, s = {
                routes: g,
                reload: function() {
                    w = !0, a.$evalAsync(function() {
                        l(), m();
                    });
                },
                updateParams: function(a) {
                    if (!this.current || !this.current.$$route) throw B("norout");
                    var b = {}, f = this;
                    d.forEach(Object.keys(a), function(c) {
                        f.current.pathParams[c] || (b[c] = a[c]);
                    }), a = d.extend({}, this.current.params, a), c.path(t(this.current.$$route.originalPath, a)), 
                    c.search(d.extend({}, c.search(), b));
                }
            };
            return a.$on("$locationChangeStart", l), a.$on("$locationChangeSuccess", m), s;
        } ];
    });
    var B = d.$$minErr("ngRoute");
    p.provider("$routeParams", function() {
        this.$get = function() {
            return {};
        };
    }), p.directive("ngView", v), p.directive("ngView", A), v.$inject = [ "$route", "$anchorScroll", "$animate" ], 
    A.$inject = [ "$compile", "$controller", "$route" ];
}(window, window.angular), function(I, d, B) {
    "use strict";
    function D(f, q) {
        q = q || {}, d.forEach(q, function(d, h) {
            delete q[h];
        });
        for (var h in f) !f.hasOwnProperty(h) || "$" === h.charAt(0) && "$" === h.charAt(1) || (q[h] = f[h]);
        return q;
    }
    var w = d.$$minErr("$resource"), C = /^(\.[a-zA-Z_$][0-9a-zA-Z_$]*)+$/;
    d.module("ngResource", [ "ng" ]).provider("$resource", function() {
        var f = this;
        this.defaults = {
            stripTrailingSlashes: !0,
            actions: {
                get: {
                    method: "GET"
                },
                save: {
                    method: "POST"
                },
                query: {
                    method: "GET",
                    isArray: !0
                },
                remove: {
                    method: "DELETE"
                },
                "delete": {
                    method: "DELETE"
                }
            }
        }, this.$get = [ "$http", "$q", function(q, h) {
            function t(d, g) {
                this.template = d, this.defaults = s({}, f.defaults, g), this.urlParams = {};
            }
            function v(x, g, l, m) {
                function c(b, k) {
                    var c = {};
                    return k = s({}, g, k), r(k, function(a, k) {
                        u(a) && (a = a());
                        var d;
                        if (a && a.charAt && "@" == a.charAt(0)) {
                            d = b;
                            var e = a.substr(1);
                            if (null == e || "" === e || "hasOwnProperty" === e || !C.test("." + e)) throw w("badmember", e);
                            for (var e = e.split("."), n = 0, g = e.length; g > n && d !== B; n++) {
                                var h = e[n];
                                d = null !== d ? d[h] : B;
                            }
                        } else d = a;
                        c[k] = d;
                    }), c;
                }
                function F(b) {
                    return b.resource;
                }
                function e(b) {
                    D(b || {}, this);
                }
                var G = new t(x, m);
                return l = s({}, f.defaults.actions, l), e.prototype.toJSON = function() {
                    var b = s({}, this);
                    return delete b.$promise, delete b.$resolved, b;
                }, r(l, function(b, k) {
                    var g = /^(POST|PUT|PATCH)$/i.test(b.method);
                    e[k] = function(a, y, m, x) {
                        var f, l, z, n = {};
                        switch (arguments.length) {
                          case 4:
                            z = x, l = m;

                          case 3:
                          case 2:
                            if (!u(y)) {
                                n = a, f = y, l = m;
                                break;
                            }
                            if (u(a)) {
                                l = a, z = y;
                                break;
                            }
                            l = y, z = m;

                          case 1:
                            u(a) ? l = a : g ? f = a : n = a;
                            break;

                          case 0:
                            break;

                          default:
                            throw w("badargs", arguments.length);
                        }
                        var t = this instanceof e, p = t ? f : b.isArray ? [] : new e(f), A = {}, v = b.interceptor && b.interceptor.response || F, C = b.interceptor && b.interceptor.responseError || B;
                        return r(b, function(b, a) {
                            "params" != a && "isArray" != a && "interceptor" != a && (A[a] = H(b));
                        }), g && (A.data = f), G.setUrlParams(A, s({}, c(f, b.params || {}), n), b.url), 
                        n = q(A).then(function(a) {
                            var c = a.data, g = p.$promise;
                            if (c) {
                                if (d.isArray(c) !== !!b.isArray) throw w("badcfg", k, b.isArray ? "array" : "object", d.isArray(c) ? "array" : "object");
                                b.isArray ? (p.length = 0, r(c, function(a) {
                                    p.push("object" == typeof a ? new e(a) : a);
                                })) : (D(c, p), p.$promise = g);
                            }
                            return p.$resolved = !0, a.resource = p, a;
                        }, function(a) {
                            return p.$resolved = !0, (z || E)(a), h.reject(a);
                        }), n = n.then(function(a) {
                            var b = v(a);
                            return (l || E)(b, a.headers), b;
                        }, C), t ? n : (p.$promise = n, p.$resolved = !1, p);
                    }, e.prototype["$" + k] = function(a, b, c) {
                        return u(a) && (c = b, b = a, a = {}), a = e[k].call(this, a, this, b, c), a.$promise || a;
                    };
                }), e.bind = function(b) {
                    return v(x, s({}, g, b), l);
                }, e;
            }
            var E = d.noop, r = d.forEach, s = d.extend, H = d.copy, u = d.isFunction;
            return t.prototype = {
                setUrlParams: function(f, g, l) {
                    var h, e, m = this, c = l || m.template, q = m.urlParams = {};
                    r(c.split(/\W/), function(b) {
                        if ("hasOwnProperty" === b) throw w("badname");
                        !/^\d+$/.test(b) && b && new RegExp("(^|[^\\\\]):" + b + "(\\W|$)").test(c) && (q[b] = !0);
                    }), c = c.replace(/\\:/g, ":"), g = g || {}, r(m.urlParams, function(b, k) {
                        h = g.hasOwnProperty(k) ? g[k] : m.defaults[k], d.isDefined(h) && null !== h ? (e = encodeURIComponent(h).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "%20").replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+"), 
                        c = c.replace(new RegExp(":" + k + "(\\W|$)", "g"), function(b, a) {
                            return e + a;
                        })) : c = c.replace(new RegExp("(/?):" + k + "(\\W|$)", "g"), function(b, a, c) {
                            return "/" == c.charAt(0) ? c : a + c;
                        });
                    }), m.defaults.stripTrailingSlashes && (c = c.replace(/\/+$/, "") || "/"), c = c.replace(/\/\.(?=\w+($|\?))/, "."), 
                    f.url = c.replace(/\/\\\./, "/."), r(g, function(b, c) {
                        m.urlParams[c] || (f.params = f.params || {}, f.params[c] = b);
                    });
                }
            }, v;
        } ];
    });
}(window, window.angular), function(N, f, W) {
    "use strict";
    f.module("ngAnimate", [ "ng" ]).directive("ngAnimateChildren", function() {
        return function(X, C, g) {
            g = g.ngAnimateChildren, f.isString(g) && 0 === g.length ? C.data("$$ngAnimateChildren", !0) : X.$watch(g, function(f) {
                C.data("$$ngAnimateChildren", !!f);
            });
        };
    }).factory("$$animateReflow", [ "$$rAF", "$document", function(f) {
        return function(g) {
            return f(function() {
                g();
            });
        };
    } ]).config([ "$provide", "$animateProvider", function(X, C) {
        function g(f) {
            for (var n = 0; n < f.length; n++) {
                var g = f[n];
                if (1 == g.nodeType) return g;
            }
        }
        function ba(f, n) {
            return g(f) == g(n);
        }
        var u, t = f.noop, n = f.forEach, da = C.$$selectors, aa = f.isArray, ea = f.isString, ga = f.isObject, r = {
            running: !0
        };
        X.decorator("$animate", [ "$delegate", "$$q", "$injector", "$sniffer", "$rootElement", "$$asyncCallback", "$rootScope", "$document", "$templateRequest", "$$jqLite", function(O, N, M, Y, y, H, P, W, Z, Q) {
            function R(a, c) {
                var b = a.data("$$ngAnimateState") || {};
                return c && (b.running = !0, b.structural = !0, a.data("$$ngAnimateState", b)), 
                b.disabled || b.running && b.structural;
            }
            function D(a) {
                var c, b = N.defer();
                return b.promise.$$cancelFn = function() {
                    c && c();
                }, P.$$postDigest(function() {
                    c = a(function() {
                        b.resolve();
                    });
                }), b.promise;
            }
            function I(a) {
                return ga(a) ? (a.tempClasses && ea(a.tempClasses) && (a.tempClasses = a.tempClasses.split(/\s+/)), 
                a) : void 0;
            }
            function S(a, c, b) {
                b = b || {};
                var d = {};
                n(b, function(e, a) {
                    n(a.split(" "), function(a) {
                        d[a] = e;
                    });
                });
                var h = Object.create(null);
                n((a.attr("class") || "").split(/\s+/), function(e) {
                    h[e] = !0;
                });
                var f = [], l = [];
                return n(c && c.classes || [], function(e, a) {
                    var b = h[a], c = d[a] || {};
                    !1 === e ? (b || "addClass" == c.event) && l.push(a) : !0 === e && (b && "removeClass" != c.event || f.push(a));
                }), 0 < f.length + l.length && [ f.join(" "), l.join(" ") ];
            }
            function T(a) {
                if (a) {
                    var c = [], b = {};
                    a = a.substr(1).split("."), (Y.transitions || Y.animations) && c.push(M.get(da[""]));
                    for (var d = 0; d < a.length; d++) {
                        var f = a[d], k = da[f];
                        k && !b[f] && (c.push(M.get(k)), b[f] = !0);
                    }
                    return c;
                }
            }
            function U(a, c, b, d) {
                function h(e, a) {
                    var b = e[a], c = e["before" + a.charAt(0).toUpperCase() + a.substr(1)];
                    return b || c ? ("leave" == a && (c = b, b = null), u.push({
                        event: a,
                        fn: b
                    }), J.push({
                        event: a,
                        fn: c
                    }), !0) : void 0;
                }
                function k(c, l, w) {
                    var E = [];
                    n(c, function(a) {
                        a.fn && E.push(a);
                    });
                    var m = 0;
                    n(E, function(c, f) {
                        var p = function() {
                            a: {
                                if (l) {
                                    if ((l[f] || t)(), ++m < E.length) break a;
                                    l = null;
                                }
                                w();
                            }
                        };
                        switch (c.event) {
                          case "setClass":
                            l.push(c.fn(a, e, A, p, d));
                            break;

                          case "animate":
                            l.push(c.fn(a, b, d.from, d.to, p));
                            break;

                          case "addClass":
                            l.push(c.fn(a, e || b, p, d));
                            break;

                          case "removeClass":
                            l.push(c.fn(a, A || b, p, d));
                            break;

                          default:
                            l.push(c.fn(a, p, d));
                        }
                    }), l && 0 === l.length && w();
                }
                var l = a[0];
                if (l) {
                    d && (d.to = d.to || {}, d.from = d.from || {});
                    var e, A;
                    aa(b) && (e = b[0], A = b[1], e ? A ? b = e + " " + A : (b = e, c = "addClass") : (b = A, 
                    c = "removeClass"));
                    var w = "setClass" == c, E = w || "addClass" == c || "removeClass" == c || "animate" == c, p = a.attr("class") + " " + b;
                    if (x(p)) {
                        var ca = t, m = [], J = [], g = t, s = [], u = [], p = (" " + p).replace(/\s+/g, ".");
                        return n(T(p), function(a) {
                            !h(a, c) && w && (h(a, "addClass"), h(a, "removeClass"));
                        }), {
                            node: l,
                            event: c,
                            className: b,
                            isClassBased: E,
                            isSetClassOperation: w,
                            applyStyles: function() {
                                d && a.css(f.extend(d.from || {}, d.to || {}));
                            },
                            before: function(a) {
                                ca = a, k(J, m, function() {
                                    ca = t, a();
                                });
                            },
                            after: function(a) {
                                g = a, k(u, s, function() {
                                    g = t, a();
                                });
                            },
                            cancel: function() {
                                m && (n(m, function(a) {
                                    (a || t)(!0);
                                }), ca(!0)), s && (n(s, function(a) {
                                    (a || t)(!0);
                                }), g(!0));
                            }
                        };
                    }
                }
            }
            function G(a, c, b, d, h, k, l, e) {
                function A(e) {
                    var l = "$animate:" + e;
                    J && J[l] && 0 < J[l].length && H(function() {
                        b.triggerHandler(l, {
                            event: a,
                            className: c
                        });
                    });
                }
                function w() {
                    A("before");
                }
                function E() {
                    A("after");
                }
                function p() {
                    p.hasBeenRun || (p.hasBeenRun = !0, k());
                }
                function g() {
                    if (!g.hasBeenRun) {
                        m && m.applyStyles(), g.hasBeenRun = !0, l && l.tempClasses && n(l.tempClasses, function(a) {
                            u.removeClass(b, a);
                        });
                        var w = b.data("$$ngAnimateState");
                        w && (m && m.isClassBased ? B(b, c) : (H(function() {
                            var e = b.data("$$ngAnimateState") || {};
                            fa == e.index && B(b, c, a);
                        }), b.data("$$ngAnimateState", w))), A("close"), e();
                    }
                }
                var m = U(b, a, c, l);
                if (!m) return p(), w(), E(), g(), t;
                a = m.event, c = m.className;
                var J = f.element._data(m.node), J = J && J.events;
                if (d || (d = h ? h.parent() : b.parent()), z(b, d)) return p(), w(), E(), g(), 
                t;
                d = b.data("$$ngAnimateState") || {};
                var L = d.active || {}, s = d.totalActive || 0, q = d.last;
                if (h = !1, s > 0) {
                    if (s = [], m.isClassBased) "setClass" == q.event ? (s.push(q), B(b, c)) : L[c] && (v = L[c], 
                    v.event == a ? h = !0 : (s.push(v), B(b, c))); else if ("leave" == a && L["ng-leave"]) h = !0; else {
                        for (var v in L) s.push(L[v]);
                        d = {}, B(b, !0);
                    }
                    0 < s.length && n(s, function(a) {
                        a.cancel();
                    });
                }
                if (!m.isClassBased || m.isSetClassOperation || "animate" == a || h || (h = "addClass" == a == b.hasClass(c)), 
                h) return p(), w(), E(), A("close"), e(), t;
                L = d.active || {}, s = d.totalActive || 0, "leave" == a && b.one("$destroy", function(a) {
                    a = f.element(this);
                    var e = a.data("$$ngAnimateState");
                    e && (e = e.active["ng-leave"]) && (e.cancel(), B(a, "ng-leave"));
                }), u.addClass(b, "ng-animate"), l && l.tempClasses && n(l.tempClasses, function(a) {
                    u.addClass(b, a);
                });
                var fa = K++;
                return s++, L[c] = m, b.data("$$ngAnimateState", {
                    last: m,
                    active: L,
                    index: fa,
                    totalActive: s
                }), w(), m.before(function(e) {
                    var l = b.data("$$ngAnimateState");
                    e = e || !l || !l.active[c] || m.isClassBased && l.active[c].event != a, p(), !0 === e ? g() : (E(), 
                    m.after(g));
                }), m.cancel;
            }
            function q(a) {
                (a = g(a)) && (a = f.isFunction(a.getElementsByClassName) ? a.getElementsByClassName("ng-animate") : a.querySelectorAll(".ng-animate"), 
                n(a, function(a) {
                    a = f.element(a), (a = a.data("$$ngAnimateState")) && a.active && n(a.active, function(a) {
                        a.cancel();
                    });
                }));
            }
            function B(a, c) {
                if (ba(a, y)) r.disabled || (r.running = !1, r.structural = !1); else if (c) {
                    var b = a.data("$$ngAnimateState") || {}, d = !0 === c;
                    !d && b.active && b.active[c] && (b.totalActive--, delete b.active[c]), (d || !b.totalActive) && (u.removeClass(a, "ng-animate"), 
                    a.removeData("$$ngAnimateState"));
                }
            }
            function z(a, c) {
                if (r.disabled) return !0;
                if (ba(a, y)) return r.running;
                var b, d, g;
                do {
                    if (0 === c.length) break;
                    var k = ba(c, y), l = k ? r : c.data("$$ngAnimateState") || {};
                    if (l.disabled) return !0;
                    k && (g = !0), !1 !== b && (k = c.data("$$ngAnimateChildren"), f.isDefined(k) && (b = k)), 
                    d = d || l.running || l.last && !l.last.isClassBased;
                } while (c = c.parent());
                return !g || !b && d;
            }
            u = Q, y.data("$$ngAnimateState", r);
            var $ = P.$watch(function() {
                return Z.totalPendingRequests;
            }, function(a) {
                0 === a && ($(), P.$$postDigest(function() {
                    P.$$postDigest(function() {
                        r.running = !1;
                    });
                }));
            }), K = 0, V = C.classNameFilter(), x = V ? function(a) {
                return V.test(a);
            } : function() {
                return !0;
            };
            return {
                animate: function(a, c, b, d, h) {
                    return d = d || "ng-inline-animate", h = I(h) || {}, h.from = b ? c : null, h.to = b ? b : c, 
                    D(function(b) {
                        return G("animate", d, f.element(g(a)), null, null, t, h, b);
                    });
                },
                enter: function(a, c, b, d) {
                    return d = I(d), a = f.element(a), c = c && f.element(c), b = b && f.element(b), 
                    R(a, !0), O.enter(a, c, b), D(function(h) {
                        return G("enter", "ng-enter", f.element(g(a)), c, b, t, d, h);
                    });
                },
                leave: function(a, c) {
                    return c = I(c), a = f.element(a), q(a), R(a, !0), D(function(b) {
                        return G("leave", "ng-leave", f.element(g(a)), null, null, function() {
                            O.leave(a);
                        }, c, b);
                    });
                },
                move: function(a, c, b, d) {
                    return d = I(d), a = f.element(a), c = c && f.element(c), b = b && f.element(b), 
                    q(a), R(a, !0), O.move(a, c, b), D(function(h) {
                        return G("move", "ng-move", f.element(g(a)), c, b, t, d, h);
                    });
                },
                addClass: function(a, c, b) {
                    return this.setClass(a, c, [], b);
                },
                removeClass: function(a, c, b) {
                    return this.setClass(a, [], c, b);
                },
                setClass: function(a, c, b, d) {
                    if (d = I(d), a = f.element(a), a = f.element(g(a)), R(a)) return O.$$setClassImmediately(a, c, b, d);
                    var h, k = a.data("$$animateClasses"), l = !!k;
                    return k || (k = {
                        classes: {}
                    }), h = k.classes, c = aa(c) ? c : c.split(" "), n(c, function(a) {
                        a && a.length && (h[a] = !0);
                    }), b = aa(b) ? b : b.split(" "), n(b, function(a) {
                        a && a.length && (h[a] = !1);
                    }), l ? (d && k.options && (k.options = f.extend(k.options || {}, d)), k.promise) : (a.data("$$animateClasses", k = {
                        classes: h,
                        options: d
                    }), k.promise = D(function(e) {
                        var l = a.parent(), b = g(a), c = b.parentNode;
                        if (c && !c.$$NG_REMOVED && !b.$$NG_REMOVED) {
                            b = a.data("$$animateClasses"), a.removeData("$$animateClasses");
                            var c = a.data("$$ngAnimateState") || {}, d = S(a, b, c.active);
                            return d ? G("setClass", d, a, l, null, function() {
                                d[0] && O.$$addClassImmediately(a, d[0]), d[1] && O.$$removeClassImmediately(a, d[1]);
                            }, b.options, e) : e();
                        }
                        e();
                    }));
                },
                cancel: function(a) {
                    a.$$cancelFn();
                },
                enabled: function(a, c) {
                    switch (arguments.length) {
                      case 2:
                        if (a) B(c); else {
                            var b = c.data("$$ngAnimateState") || {};
                            b.disabled = !0, c.data("$$ngAnimateState", b);
                        }
                        break;

                      case 1:
                        r.disabled = !a;
                        break;

                      default:
                        a = !r.disabled;
                    }
                    return !!a;
                }
            };
        } ]), C.register("", [ "$window", "$sniffer", "$timeout", "$$animateReflow", function(r, C, M, Y) {
            function y() {
                b || (b = Y(function() {
                    c = [], b = null, x = {};
                }));
            }
            function H(a, e) {
                b && b(), c.push(e), b = Y(function() {
                    n(c, function(a) {
                        a();
                    }), c = [], b = null, x = {};
                });
            }
            function P(a, e) {
                var b = g(a);
                a = f.element(b), k.push(a), b = Date.now() + e, h >= b || (M.cancel(d), h = b, 
                d = M(function() {
                    X(k), k = [];
                }, e, !1));
            }
            function X(a) {
                n(a, function(a) {
                    (a = a.data("$$ngAnimateCSS3Data")) && n(a.closeAnimationFns, function(a) {
                        a();
                    });
                });
            }
            function Z(a, e) {
                var b = e ? x[e] : null;
                if (!b) {
                    var c = 0, d = 0, f = 0, g = 0;
                    n(a, function(a) {
                        if (1 == a.nodeType) {
                            a = r.getComputedStyle(a) || {}, c = Math.max(Q(a[z + "Duration"]), c), d = Math.max(Q(a[z + "Delay"]), d), 
                            g = Math.max(Q(a[K + "Delay"]), g);
                            var e = Q(a[K + "Duration"]);
                            e > 0 && (e *= parseInt(a[K + "IterationCount"], 10) || 1), f = Math.max(e, f);
                        }
                    }), b = {
                        total: 0,
                        transitionDelay: d,
                        transitionDuration: c,
                        animationDelay: g,
                        animationDuration: f
                    }, e && (x[e] = b);
                }
                return b;
            }
            function Q(a) {
                var e = 0;
                return a = ea(a) ? a.split(/\s*,\s*/) : [], n(a, function(a) {
                    e = Math.max(parseFloat(a) || 0, e);
                }), e;
            }
            function R(b, e, c, d) {
                b = 0 <= [ "ng-enter", "ng-leave", "ng-move" ].indexOf(c);
                var f, p = e.parent(), h = p.data("$$ngAnimateKey");
                h || (p.data("$$ngAnimateKey", ++a), h = a), f = h + "-" + g(e).getAttribute("class");
                var p = f + " " + c, h = x[p] ? ++x[p].total : 0, m = {};
                if (h > 0) {
                    var n = c + "-stagger", m = f + " " + n;
                    (f = !x[m]) && u.addClass(e, n), m = Z(e, m), f && u.removeClass(e, n);
                }
                u.addClass(e, c);
                var n = e.data("$$ngAnimateCSS3Data") || {}, k = Z(e, p);
                return f = k.transitionDuration, k = k.animationDuration, b && 0 === f && 0 === k ? (u.removeClass(e, c), 
                !1) : (c = d || b && f > 0, b = k > 0 && 0 < m.animationDelay && 0 === m.animationDuration, 
                e.data("$$ngAnimateCSS3Data", {
                    stagger: m,
                    cacheKey: p,
                    running: n.running || 0,
                    itemIndex: h,
                    blockTransition: c,
                    closeAnimationFns: n.closeAnimationFns || []
                }), p = g(e), c && (I(p, !0), d && e.css(d)), b && (p.style[K + "PlayState"] = "paused"), 
                !0);
            }
            function D(a, e, b, c, d) {
                function f() {
                    e.off(D, h), u.removeClass(e, k), u.removeClass(e, t), z && M.cancel(z), G(e, b);
                    var c, a = g(e);
                    for (c in s) a.style.removeProperty(s[c]);
                }
                function h(a) {
                    a.stopPropagation();
                    var b = a.originalEvent || a;
                    a = b.$manualTimeStamp || b.timeStamp || Date.now(), b = parseFloat(b.elapsedTime.toFixed(3)), 
                    Math.max(a - H, 0) >= C && b >= x && c();
                }
                var m = g(e);
                if (a = e.data("$$ngAnimateCSS3Data"), -1 != m.getAttribute("class").indexOf(b) && a) {
                    var k = "", t = "";
                    n(b.split(" "), function(a, b) {
                        var e = (b > 0 ? " " : "") + a;
                        k += e + "-active", t += e + "-pending";
                    });
                    var s = [], q = a.itemIndex, v = a.stagger, r = 0;
                    if (q > 0) {
                        r = 0, 0 < v.transitionDelay && 0 === v.transitionDuration && (r = v.transitionDelay * q);
                        var y = 0;
                        0 < v.animationDelay && 0 === v.animationDuration && (y = v.animationDelay * q, 
                        s.push(B + "animation-play-state")), r = Math.round(100 * Math.max(r, y)) / 100;
                    }
                    r || (u.addClass(e, k), a.blockTransition && I(m, !1));
                    var F = Z(e, a.cacheKey + " " + k), x = Math.max(F.transitionDuration, F.animationDuration);
                    if (0 !== x) {
                        !r && d && 0 < Object.keys(d).length && (F.transitionDuration || (e.css("transition", F.animationDuration + "s linear all"), 
                        s.push("transition")), e.css(d));
                        var q = Math.max(F.transitionDelay, F.animationDelay), C = 1e3 * q;
                        0 < s.length && (v = m.getAttribute("style") || "", ";" !== v.charAt(v.length - 1) && (v += ";"), 
                        m.setAttribute("style", v + " "));
                        var z, H = Date.now(), D = V + " " + $, q = 1e3 * (r + 1.5 * (q + x));
                        return r > 0 && (u.addClass(e, t), z = M(function() {
                            z = null, 0 < F.transitionDuration && I(m, !1), 0 < F.animationDuration && (m.style[K + "PlayState"] = ""), 
                            u.addClass(e, k), u.removeClass(e, t), d && (0 === F.transitionDuration && e.css("transition", F.animationDuration + "s linear all"), 
                            e.css(d), s.push("transition"));
                        }, 1e3 * r, !1)), e.on(D, h), a.closeAnimationFns.push(function() {
                            f(), c();
                        }), a.running++, P(e, q), f;
                    }
                    u.removeClass(e, k), G(e, b), c();
                } else c();
            }
            function I(a, b) {
                a.style[z + "Property"] = b ? "none" : "";
            }
            function S(a, b, c, d) {
                return R(a, b, c, d) ? function(a) {
                    a && G(b, c);
                } : void 0;
            }
            function T(a, b, c, d, f) {
                return b.data("$$ngAnimateCSS3Data") ? D(a, b, c, d, f) : (G(b, c), void d());
            }
            function U(a, b, c, d, f) {
                var g = S(a, b, c, f.from);
                if (g) {
                    var h = g;
                    return H(b, function() {
                        h = T(a, b, c, d, f.to);
                    }), function(a) {
                        (h || t)(a);
                    };
                }
                y(), d();
            }
            function G(a, b) {
                u.removeClass(a, b);
                var c = a.data("$$ngAnimateCSS3Data");
                c && (c.running && c.running--, c.running && 0 !== c.running || a.removeData("$$ngAnimateCSS3Data"));
            }
            function q(a, b) {
                var c = "";
                return a = aa(a) ? a : a.split(/\s+/), n(a, function(a, d) {
                    a && 0 < a.length && (c += (d > 0 ? " " : "") + a + b);
                }), c;
            }
            var z, $, K, V, B = "";
            N.ontransitionend === W && N.onwebkittransitionend !== W ? (B = "-webkit-", z = "WebkitTransition", 
            $ = "webkitTransitionEnd transitionend") : (z = "transition", $ = "transitionend"), 
            N.onanimationend === W && N.onwebkitanimationend !== W ? (B = "-webkit-", K = "WebkitAnimation", 
            V = "webkitAnimationEnd animationend") : (K = "animation", V = "animationend");
            var b, x = {}, a = 0, c = [], d = null, h = 0, k = [];
            return {
                animate: function(a, b, c, d, f, g) {
                    return g = g || {}, g.from = c, g.to = d, U("animate", a, b, f, g);
                },
                enter: function(a, b, c) {
                    return c = c || {}, U("enter", a, "ng-enter", b, c);
                },
                leave: function(a, b, c) {
                    return c = c || {}, U("leave", a, "ng-leave", b, c);
                },
                move: function(a, b, c) {
                    return c = c || {}, U("move", a, "ng-move", b, c);
                },
                beforeSetClass: function(a, b, c, d, f) {
                    return f = f || {}, b = q(c, "-remove") + " " + q(b, "-add"), (f = S("setClass", a, b, f.from)) ? (H(a, d), 
                    f) : (y(), void d());
                },
                beforeAddClass: function(a, b, c, d) {
                    return d = d || {}, (b = S("addClass", a, q(b, "-add"), d.from)) ? (H(a, c), b) : (y(), 
                    void c());
                },
                beforeRemoveClass: function(a, b, c, d) {
                    return d = d || {}, (b = S("removeClass", a, q(b, "-remove"), d.from)) ? (H(a, c), 
                    b) : (y(), void c());
                },
                setClass: function(a, b, c, d, f) {
                    return f = f || {}, c = q(c, "-remove"), b = q(b, "-add"), T("setClass", a, c + " " + b, d, f.to);
                },
                addClass: function(a, b, c, d) {
                    return d = d || {}, T("addClass", a, q(b, "-add"), c, d.to);
                },
                removeClass: function(a, b, c, d) {
                    return d = d || {}, T("removeClass", a, q(b, "-remove"), c, d.to);
                }
            };
        } ]);
    } ]);
}(window, window.angular), function(p, k) {
    "use strict";
    k.module("ngAria", [ "ng" ]).provider("$aria", function() {
        function b(b, e, c) {
            return function(d, h, f) {
                var l = f.$normalize(e);
                a[l] && !f[l] && d.$watch(f[b], function(d) {
                    c && (d = !d), h.attr(e, d);
                });
            };
        }
        var a = {
            ariaHidden: !0,
            ariaChecked: !0,
            ariaDisabled: !0,
            ariaRequired: !0,
            ariaInvalid: !0,
            ariaMultiline: !0,
            ariaValue: !0,
            tabindex: !0,
            bindKeypress: !0
        };
        this.config = function(b) {
            a = k.extend(a, b);
        }, this.$get = function() {
            return {
                config: function(b) {
                    return a[b];
                },
                $$watchExpr: b
            };
        };
    }).directive("ngShow", [ "$aria", function(b) {
        return b.$$watchExpr("ngShow", "aria-hidden", !0);
    } ]).directive("ngHide", [ "$aria", function(b) {
        return b.$$watchExpr("ngHide", "aria-hidden", !1);
    } ]).directive("ngModel", [ "$aria", function(b) {
        function a(a, c, d) {
            return b.config(c) && !d.attr(a);
        }
        function g(b, c) {
            var d = b.type, a = b.role;
            return "checkbox" === (d || a) || "menuitemcheckbox" === a ? "checkbox" : "radio" === (d || a) || "menuitemradio" === a ? "radio" : "range" === d || "progressbar" === a || "slider" === a ? "range" : "textbox" === (d || a) || "TEXTAREA" === c[0].nodeName ? "multiline" : "";
        }
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(e, c, d, h) {
                function f() {
                    return h.$modelValue;
                }
                function l() {
                    return m ? (m = !1, function(a) {
                        a = a === d.value, c.attr("aria-checked", a), c.attr("tabindex", 0 - !a);
                    }) : function(a) {
                        c.attr("aria-checked", a === d.value);
                    };
                }
                function n(a) {
                    c.attr("aria-checked", !!a);
                }
                var k = g(d, c), m = a("tabindex", "tabindex", c);
                switch (k) {
                  case "radio":
                  case "checkbox":
                    a("aria-checked", "ariaChecked", c) && e.$watch(f, "radio" === k ? l() : n);
                    break;

                  case "range":
                    b.config("ariaValue") && (d.min && !c.attr("aria-valuemin") && c.attr("aria-valuemin", d.min), 
                    d.max && !c.attr("aria-valuemax") && c.attr("aria-valuemax", d.max), c.attr("aria-valuenow") || e.$watch(f, function(a) {
                        c.attr("aria-valuenow", a);
                    }));
                    break;

                  case "multiline":
                    a("aria-multiline", "ariaMultiline", c) && c.attr("aria-multiline", !0);
                }
                m && c.attr("tabindex", 0), h.$validators.required && a("aria-required", "ariaRequired", c) && e.$watch(function() {
                    return h.$error.required;
                }, function(a) {
                    c.attr("aria-required", !!a);
                }), a("aria-invalid", "ariaInvalid", c) && e.$watch(function() {
                    return h.$invalid;
                }, function(a) {
                    c.attr("aria-invalid", !!a);
                });
            }
        };
    } ]).directive("ngDisabled", [ "$aria", function(b) {
        return b.$$watchExpr("ngDisabled", "aria-disabled");
    } ]).directive("ngMessages", function() {
        return {
            restrict: "A",
            require: "?ngMessages",
            link: function(b, a) {
                a.attr("aria-live") || a.attr("aria-live", "assertive");
            }
        };
    }).directive("ngClick", [ "$aria", "$parse", function(b, a) {
        return {
            restrict: "A",
            compile: function(g, e) {
                var c = a(e.ngClick, null, !0);
                return function(a, e, f) {
                    b.config("tabindex") && !e.attr("tabindex") && e.attr("tabindex", 0), b.config("bindKeypress") && !f.ngKeypress && e.on("keypress", function(b) {
                        function e() {
                            c(a, {
                                $event: b
                            });
                        }
                        32 !== b.keyCode && 13 !== b.keyCode || a.$apply(e);
                    });
                };
            }
        };
    } ]).directive("ngDblclick", [ "$aria", function(b) {
        return function(a, g) {
            b.config("tabindex") && !g.attr("tabindex") && g.attr("tabindex", 0);
        };
    } ]);
}(window, window.angular), /*! Hammer.JS - v2.0.4 - 2014-09-28
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2014 Jorik Tangelder;
 * Licensed under the MIT license */
!function(a, b, c, d) {
    "use strict";
    function e(a, b, c) {
        return setTimeout(k(a, c), b);
    }
    function f(a, b, c) {
        return Array.isArray(a) ? (g(a, c[b], c), !0) : !1;
    }
    function g(a, b, c) {
        var e;
        if (a) if (a.forEach) a.forEach(b, c); else if (a.length !== d) for (e = 0; e < a.length; ) b.call(c, a[e], e, a), 
        e++; else for (e in a) a.hasOwnProperty(e) && b.call(c, a[e], e, a);
    }
    function h(a, b, c) {
        for (var e = Object.keys(b), f = 0; f < e.length; ) (!c || c && a[e[f]] === d) && (a[e[f]] = b[e[f]]), 
        f++;
        return a;
    }
    function i(a, b) {
        return h(a, b, !0);
    }
    function j(a, b, c) {
        var d, e = b.prototype;
        d = a.prototype = Object.create(e), d.constructor = a, d._super = e, c && h(d, c);
    }
    function k(a, b) {
        return function() {
            return a.apply(b, arguments);
        };
    }
    function l(a, b) {
        return typeof a == kb ? a.apply(b ? b[0] || d : d, b) : a;
    }
    function m(a, b) {
        return a === d ? b : a;
    }
    function n(a, b, c) {
        g(r(b), function(b) {
            a.addEventListener(b, c, !1);
        });
    }
    function o(a, b, c) {
        g(r(b), function(b) {
            a.removeEventListener(b, c, !1);
        });
    }
    function p(a, b) {
        for (;a; ) {
            if (a == b) return !0;
            a = a.parentNode;
        }
        return !1;
    }
    function q(a, b) {
        return a.indexOf(b) > -1;
    }
    function r(a) {
        return a.trim().split(/\s+/g);
    }
    function s(a, b, c) {
        if (a.indexOf && !c) return a.indexOf(b);
        for (var d = 0; d < a.length; ) {
            if (c && a[d][c] == b || !c && a[d] === b) return d;
            d++;
        }
        return -1;
    }
    function t(a) {
        return Array.prototype.slice.call(a, 0);
    }
    function u(a, b, c) {
        for (var d = [], e = [], f = 0; f < a.length; ) {
            var g = b ? a[f][b] : a[f];
            s(e, g) < 0 && d.push(a[f]), e[f] = g, f++;
        }
        return c && (d = b ? d.sort(function(a, c) {
            return a[b] > c[b];
        }) : d.sort()), d;
    }
    function v(a, b) {
        for (var c, e, f = b[0].toUpperCase() + b.slice(1), g = 0; g < ib.length; ) {
            if (c = ib[g], e = c ? c + f : b, e in a) return e;
            g++;
        }
        return d;
    }
    function w() {
        return ob++;
    }
    function x(a) {
        var b = a.ownerDocument;
        return b.defaultView || b.parentWindow;
    }
    function y(a, b) {
        var c = this;
        this.manager = a, this.callback = b, this.element = a.element, this.target = a.options.inputTarget, 
        this.domHandler = function(b) {
            l(a.options.enable, [ a ]) && c.handler(b);
        }, this.init();
    }
    function z(a) {
        var b, c = a.options.inputClass;
        return new (b = c ? c : rb ? N : sb ? Q : qb ? S : M)(a, A);
    }
    function A(a, b, c) {
        var d = c.pointers.length, e = c.changedPointers.length, f = b & yb && d - e === 0, g = b & (Ab | Bb) && d - e === 0;
        c.isFirst = !!f, c.isFinal = !!g, f && (a.session = {}), c.eventType = b, B(a, c), 
        a.emit("hammer.input", c), a.recognize(c), a.session.prevInput = c;
    }
    function B(a, b) {
        var c = a.session, d = b.pointers, e = d.length;
        c.firstInput || (c.firstInput = E(b)), e > 1 && !c.firstMultiple ? c.firstMultiple = E(b) : 1 === e && (c.firstMultiple = !1);
        var f = c.firstInput, g = c.firstMultiple, h = g ? g.center : f.center, i = b.center = F(d);
        b.timeStamp = nb(), b.deltaTime = b.timeStamp - f.timeStamp, b.angle = J(h, i), 
        b.distance = I(h, i), C(c, b), b.offsetDirection = H(b.deltaX, b.deltaY), b.scale = g ? L(g.pointers, d) : 1, 
        b.rotation = g ? K(g.pointers, d) : 0, D(c, b);
        var j = a.element;
        p(b.srcEvent.target, j) && (j = b.srcEvent.target), b.target = j;
    }
    function C(a, b) {
        var c = b.center, d = a.offsetDelta || {}, e = a.prevDelta || {}, f = a.prevInput || {};
        (b.eventType === yb || f.eventType === Ab) && (e = a.prevDelta = {
            x: f.deltaX || 0,
            y: f.deltaY || 0
        }, d = a.offsetDelta = {
            x: c.x,
            y: c.y
        }), b.deltaX = e.x + (c.x - d.x), b.deltaY = e.y + (c.y - d.y);
    }
    function D(a, b) {
        var c, e, f, g, h = a.lastInterval || b, i = b.timeStamp - h.timeStamp;
        if (b.eventType != Bb && (i > xb || h.velocity === d)) {
            var j = h.deltaX - b.deltaX, k = h.deltaY - b.deltaY, l = G(i, j, k);
            e = l.x, f = l.y, c = mb(l.x) > mb(l.y) ? l.x : l.y, g = H(j, k), a.lastInterval = b;
        } else c = h.velocity, e = h.velocityX, f = h.velocityY, g = h.direction;
        b.velocity = c, b.velocityX = e, b.velocityY = f, b.direction = g;
    }
    function E(a) {
        for (var b = [], c = 0; c < a.pointers.length; ) b[c] = {
            clientX: lb(a.pointers[c].clientX),
            clientY: lb(a.pointers[c].clientY)
        }, c++;
        return {
            timeStamp: nb(),
            pointers: b,
            center: F(b),
            deltaX: a.deltaX,
            deltaY: a.deltaY
        };
    }
    function F(a) {
        var b = a.length;
        if (1 === b) return {
            x: lb(a[0].clientX),
            y: lb(a[0].clientY)
        };
        for (var c = 0, d = 0, e = 0; b > e; ) c += a[e].clientX, d += a[e].clientY, e++;
        return {
            x: lb(c / b),
            y: lb(d / b)
        };
    }
    function G(a, b, c) {
        return {
            x: b / a || 0,
            y: c / a || 0
        };
    }
    function H(a, b) {
        return a === b ? Cb : mb(a) >= mb(b) ? a > 0 ? Db : Eb : b > 0 ? Fb : Gb;
    }
    function I(a, b, c) {
        c || (c = Kb);
        var d = b[c[0]] - a[c[0]], e = b[c[1]] - a[c[1]];
        return Math.sqrt(d * d + e * e);
    }
    function J(a, b, c) {
        c || (c = Kb);
        var d = b[c[0]] - a[c[0]], e = b[c[1]] - a[c[1]];
        return 180 * Math.atan2(e, d) / Math.PI;
    }
    function K(a, b) {
        return J(b[1], b[0], Lb) - J(a[1], a[0], Lb);
    }
    function L(a, b) {
        return I(b[0], b[1], Lb) / I(a[0], a[1], Lb);
    }
    function M() {
        this.evEl = Nb, this.evWin = Ob, this.allow = !0, this.pressed = !1, y.apply(this, arguments);
    }
    function N() {
        this.evEl = Rb, this.evWin = Sb, y.apply(this, arguments), this.store = this.manager.session.pointerEvents = [];
    }
    function O() {
        this.evTarget = Ub, this.evWin = Vb, this.started = !1, y.apply(this, arguments);
    }
    function P(a, b) {
        var c = t(a.touches), d = t(a.changedTouches);
        return b & (Ab | Bb) && (c = u(c.concat(d), "identifier", !0)), [ c, d ];
    }
    function Q() {
        this.evTarget = Xb, this.targetIds = {}, y.apply(this, arguments);
    }
    function R(a, b) {
        var c = t(a.touches), d = this.targetIds;
        if (b & (yb | zb) && 1 === c.length) return d[c[0].identifier] = !0, [ c, c ];
        var e, f, g = t(a.changedTouches), h = [], i = this.target;
        if (f = c.filter(function(a) {
            return p(a.target, i);
        }), b === yb) for (e = 0; e < f.length; ) d[f[e].identifier] = !0, e++;
        for (e = 0; e < g.length; ) d[g[e].identifier] && h.push(g[e]), b & (Ab | Bb) && delete d[g[e].identifier], 
        e++;
        return h.length ? [ u(f.concat(h), "identifier", !0), h ] : void 0;
    }
    function S() {
        y.apply(this, arguments);
        var a = k(this.handler, this);
        this.touch = new Q(this.manager, a), this.mouse = new M(this.manager, a);
    }
    function T(a, b) {
        this.manager = a, this.set(b);
    }
    function U(a) {
        if (q(a, bc)) return bc;
        var b = q(a, cc), c = q(a, dc);
        return b && c ? cc + " " + dc : b || c ? b ? cc : dc : q(a, ac) ? ac : _b;
    }
    function V(a) {
        this.id = w(), this.manager = null, this.options = i(a || {}, this.defaults), this.options.enable = m(this.options.enable, !0), 
        this.state = ec, this.simultaneous = {}, this.requireFail = [];
    }
    function W(a) {
        return a & jc ? "cancel" : a & hc ? "end" : a & gc ? "move" : a & fc ? "start" : "";
    }
    function X(a) {
        return a == Gb ? "down" : a == Fb ? "up" : a == Db ? "left" : a == Eb ? "right" : "";
    }
    function Y(a, b) {
        var c = b.manager;
        return c ? c.get(a) : a;
    }
    function Z() {
        V.apply(this, arguments);
    }
    function $() {
        Z.apply(this, arguments), this.pX = null, this.pY = null;
    }
    function _() {
        Z.apply(this, arguments);
    }
    function ab() {
        V.apply(this, arguments), this._timer = null, this._input = null;
    }
    function bb() {
        Z.apply(this, arguments);
    }
    function cb() {
        Z.apply(this, arguments);
    }
    function db() {
        V.apply(this, arguments), this.pTime = !1, this.pCenter = !1, this._timer = null, 
        this._input = null, this.count = 0;
    }
    function eb(a, b) {
        return b = b || {}, b.recognizers = m(b.recognizers, eb.defaults.preset), new fb(a, b);
    }
    function fb(a, b) {
        b = b || {}, this.options = i(b, eb.defaults), this.options.inputTarget = this.options.inputTarget || a, 
        this.handlers = {}, this.session = {}, this.recognizers = [], this.element = a, 
        this.input = z(this), this.touchAction = new T(this, this.options.touchAction), 
        gb(this, !0), g(b.recognizers, function(a) {
            var b = this.add(new a[0](a[1]));
            a[2] && b.recognizeWith(a[2]), a[3] && b.requireFailure(a[3]);
        }, this);
    }
    function gb(a, b) {
        var c = a.element;
        g(a.options.cssProps, function(a, d) {
            c.style[v(c.style, d)] = b ? a : "";
        });
    }
    function hb(a, c) {
        var d = b.createEvent("Event");
        d.initEvent(a, !0, !0), d.gesture = c, c.target.dispatchEvent(d);
    }
    var ib = [ "", "webkit", "moz", "MS", "ms", "o" ], jb = b.createElement("div"), kb = "function", lb = Math.round, mb = Math.abs, nb = Date.now, ob = 1, pb = /mobile|tablet|ip(ad|hone|od)|android/i, qb = "ontouchstart" in a, rb = v(a, "PointerEvent") !== d, sb = qb && pb.test(navigator.userAgent), tb = "touch", ub = "pen", vb = "mouse", wb = "kinect", xb = 25, yb = 1, zb = 2, Ab = 4, Bb = 8, Cb = 1, Db = 2, Eb = 4, Fb = 8, Gb = 16, Hb = Db | Eb, Ib = Fb | Gb, Jb = Hb | Ib, Kb = [ "x", "y" ], Lb = [ "clientX", "clientY" ];
    y.prototype = {
        handler: function() {},
        init: function() {
            this.evEl && n(this.element, this.evEl, this.domHandler), this.evTarget && n(this.target, this.evTarget, this.domHandler), 
            this.evWin && n(x(this.element), this.evWin, this.domHandler);
        },
        destroy: function() {
            this.evEl && o(this.element, this.evEl, this.domHandler), this.evTarget && o(this.target, this.evTarget, this.domHandler), 
            this.evWin && o(x(this.element), this.evWin, this.domHandler);
        }
    };
    var Mb = {
        mousedown: yb,
        mousemove: zb,
        mouseup: Ab
    }, Nb = "mousedown", Ob = "mousemove mouseup";
    j(M, y, {
        handler: function(a) {
            var b = Mb[a.type];
            b & yb && 0 === a.button && (this.pressed = !0), b & zb && 1 !== a.which && (b = Ab), 
            this.pressed && this.allow && (b & Ab && (this.pressed = !1), this.callback(this.manager, b, {
                pointers: [ a ],
                changedPointers: [ a ],
                pointerType: vb,
                srcEvent: a
            }));
        }
    });
    var Pb = {
        pointerdown: yb,
        pointermove: zb,
        pointerup: Ab,
        pointercancel: Bb,
        pointerout: Bb
    }, Qb = {
        2: tb,
        3: ub,
        4: vb,
        5: wb
    }, Rb = "pointerdown", Sb = "pointermove pointerup pointercancel";
    a.MSPointerEvent && (Rb = "MSPointerDown", Sb = "MSPointerMove MSPointerUp MSPointerCancel"), 
    j(N, y, {
        handler: function(a) {
            var b = this.store, c = !1, d = a.type.toLowerCase().replace("ms", ""), e = Pb[d], f = Qb[a.pointerType] || a.pointerType, g = f == tb, h = s(b, a.pointerId, "pointerId");
            e & yb && (0 === a.button || g) ? 0 > h && (b.push(a), h = b.length - 1) : e & (Ab | Bb) && (c = !0), 
            0 > h || (b[h] = a, this.callback(this.manager, e, {
                pointers: b,
                changedPointers: [ a ],
                pointerType: f,
                srcEvent: a
            }), c && b.splice(h, 1));
        }
    });
    var Tb = {
        touchstart: yb,
        touchmove: zb,
        touchend: Ab,
        touchcancel: Bb
    }, Ub = "touchstart", Vb = "touchstart touchmove touchend touchcancel";
    j(O, y, {
        handler: function(a) {
            var b = Tb[a.type];
            if (b === yb && (this.started = !0), this.started) {
                var c = P.call(this, a, b);
                b & (Ab | Bb) && c[0].length - c[1].length === 0 && (this.started = !1), this.callback(this.manager, b, {
                    pointers: c[0],
                    changedPointers: c[1],
                    pointerType: tb,
                    srcEvent: a
                });
            }
        }
    });
    var Wb = {
        touchstart: yb,
        touchmove: zb,
        touchend: Ab,
        touchcancel: Bb
    }, Xb = "touchstart touchmove touchend touchcancel";
    j(Q, y, {
        handler: function(a) {
            var b = Wb[a.type], c = R.call(this, a, b);
            c && this.callback(this.manager, b, {
                pointers: c[0],
                changedPointers: c[1],
                pointerType: tb,
                srcEvent: a
            });
        }
    }), j(S, y, {
        handler: function(a, b, c) {
            var d = c.pointerType == tb, e = c.pointerType == vb;
            if (d) this.mouse.allow = !1; else if (e && !this.mouse.allow) return;
            b & (Ab | Bb) && (this.mouse.allow = !0), this.callback(a, b, c);
        },
        destroy: function() {
            this.touch.destroy(), this.mouse.destroy();
        }
    });
    var Yb = v(jb.style, "touchAction"), Zb = Yb !== d, $b = "compute", _b = "auto", ac = "manipulation", bc = "none", cc = "pan-x", dc = "pan-y";
    T.prototype = {
        set: function(a) {
            a == $b && (a = this.compute()), Zb && (this.manager.element.style[Yb] = a), this.actions = a.toLowerCase().trim();
        },
        update: function() {
            this.set(this.manager.options.touchAction);
        },
        compute: function() {
            var a = [];
            return g(this.manager.recognizers, function(b) {
                l(b.options.enable, [ b ]) && (a = a.concat(b.getTouchAction()));
            }), U(a.join(" "));
        },
        preventDefaults: function(a) {
            if (!Zb) {
                var b = a.srcEvent, c = a.offsetDirection;
                if (this.manager.session.prevented) return void b.preventDefault();
                var d = this.actions, e = q(d, bc), f = q(d, dc), g = q(d, cc);
                return e || f && c & Hb || g && c & Ib ? this.preventSrc(b) : void 0;
            }
        },
        preventSrc: function(a) {
            this.manager.session.prevented = !0, a.preventDefault();
        }
    };
    var ec = 1, fc = 2, gc = 4, hc = 8, ic = hc, jc = 16, kc = 32;
    V.prototype = {
        defaults: {},
        set: function(a) {
            return h(this.options, a), this.manager && this.manager.touchAction.update(), this;
        },
        recognizeWith: function(a) {
            if (f(a, "recognizeWith", this)) return this;
            var b = this.simultaneous;
            return a = Y(a, this), b[a.id] || (b[a.id] = a, a.recognizeWith(this)), this;
        },
        dropRecognizeWith: function(a) {
            return f(a, "dropRecognizeWith", this) ? this : (a = Y(a, this), delete this.simultaneous[a.id], 
            this);
        },
        requireFailure: function(a) {
            if (f(a, "requireFailure", this)) return this;
            var b = this.requireFail;
            return a = Y(a, this), -1 === s(b, a) && (b.push(a), a.requireFailure(this)), this;
        },
        dropRequireFailure: function(a) {
            if (f(a, "dropRequireFailure", this)) return this;
            a = Y(a, this);
            var b = s(this.requireFail, a);
            return b > -1 && this.requireFail.splice(b, 1), this;
        },
        hasRequireFailures: function() {
            return this.requireFail.length > 0;
        },
        canRecognizeWith: function(a) {
            return !!this.simultaneous[a.id];
        },
        emit: function(a) {
            function b(b) {
                c.manager.emit(c.options.event + (b ? W(d) : ""), a);
            }
            var c = this, d = this.state;
            hc > d && b(!0), b(), d >= hc && b(!0);
        },
        tryEmit: function(a) {
            return this.canEmit() ? this.emit(a) : void (this.state = kc);
        },
        canEmit: function() {
            for (var a = 0; a < this.requireFail.length; ) {
                if (!(this.requireFail[a].state & (kc | ec))) return !1;
                a++;
            }
            return !0;
        },
        recognize: function(a) {
            var b = h({}, a);
            return l(this.options.enable, [ this, b ]) ? (this.state & (ic | jc | kc) && (this.state = ec), 
            this.state = this.process(b), void (this.state & (fc | gc | hc | jc) && this.tryEmit(b))) : (this.reset(), 
            void (this.state = kc));
        },
        process: function() {},
        getTouchAction: function() {},
        reset: function() {}
    }, j(Z, V, {
        defaults: {
            pointers: 1
        },
        attrTest: function(a) {
            var b = this.options.pointers;
            return 0 === b || a.pointers.length === b;
        },
        process: function(a) {
            var b = this.state, c = a.eventType, d = b & (fc | gc), e = this.attrTest(a);
            return d && (c & Bb || !e) ? b | jc : d || e ? c & Ab ? b | hc : b & fc ? b | gc : fc : kc;
        }
    }), j($, Z, {
        defaults: {
            event: "pan",
            threshold: 10,
            pointers: 1,
            direction: Jb
        },
        getTouchAction: function() {
            var a = this.options.direction, b = [];
            return a & Hb && b.push(dc), a & Ib && b.push(cc), b;
        },
        directionTest: function(a) {
            var b = this.options, c = !0, d = a.distance, e = a.direction, f = a.deltaX, g = a.deltaY;
            return e & b.direction || (b.direction & Hb ? (e = 0 === f ? Cb : 0 > f ? Db : Eb, 
            c = f != this.pX, d = Math.abs(a.deltaX)) : (e = 0 === g ? Cb : 0 > g ? Fb : Gb, 
            c = g != this.pY, d = Math.abs(a.deltaY))), a.direction = e, c && d > b.threshold && e & b.direction;
        },
        attrTest: function(a) {
            return Z.prototype.attrTest.call(this, a) && (this.state & fc || !(this.state & fc) && this.directionTest(a));
        },
        emit: function(a) {
            this.pX = a.deltaX, this.pY = a.deltaY;
            var b = X(a.direction);
            b && this.manager.emit(this.options.event + b, a), this._super.emit.call(this, a);
        }
    }), j(_, Z, {
        defaults: {
            event: "pinch",
            threshold: 0,
            pointers: 2
        },
        getTouchAction: function() {
            return [ bc ];
        },
        attrTest: function(a) {
            return this._super.attrTest.call(this, a) && (Math.abs(a.scale - 1) > this.options.threshold || this.state & fc);
        },
        emit: function(a) {
            if (this._super.emit.call(this, a), 1 !== a.scale) {
                var b = a.scale < 1 ? "in" : "out";
                this.manager.emit(this.options.event + b, a);
            }
        }
    }), j(ab, V, {
        defaults: {
            event: "press",
            pointers: 1,
            time: 500,
            threshold: 5
        },
        getTouchAction: function() {
            return [ _b ];
        },
        process: function(a) {
            var b = this.options, c = a.pointers.length === b.pointers, d = a.distance < b.threshold, f = a.deltaTime > b.time;
            if (this._input = a, !d || !c || a.eventType & (Ab | Bb) && !f) this.reset(); else if (a.eventType & yb) this.reset(), 
            this._timer = e(function() {
                this.state = ic, this.tryEmit();
            }, b.time, this); else if (a.eventType & Ab) return ic;
            return kc;
        },
        reset: function() {
            clearTimeout(this._timer);
        },
        emit: function(a) {
            this.state === ic && (a && a.eventType & Ab ? this.manager.emit(this.options.event + "up", a) : (this._input.timeStamp = nb(), 
            this.manager.emit(this.options.event, this._input)));
        }
    }), j(bb, Z, {
        defaults: {
            event: "rotate",
            threshold: 0,
            pointers: 2
        },
        getTouchAction: function() {
            return [ bc ];
        },
        attrTest: function(a) {
            return this._super.attrTest.call(this, a) && (Math.abs(a.rotation) > this.options.threshold || this.state & fc);
        }
    }), j(cb, Z, {
        defaults: {
            event: "swipe",
            threshold: 10,
            velocity: .65,
            direction: Hb | Ib,
            pointers: 1
        },
        getTouchAction: function() {
            return $.prototype.getTouchAction.call(this);
        },
        attrTest: function(a) {
            var b, c = this.options.direction;
            return c & (Hb | Ib) ? b = a.velocity : c & Hb ? b = a.velocityX : c & Ib && (b = a.velocityY), 
            this._super.attrTest.call(this, a) && c & a.direction && a.distance > this.options.threshold && mb(b) > this.options.velocity && a.eventType & Ab;
        },
        emit: function(a) {
            var b = X(a.direction);
            b && this.manager.emit(this.options.event + b, a), this.manager.emit(this.options.event, a);
        }
    }), j(db, V, {
        defaults: {
            event: "tap",
            pointers: 1,
            taps: 1,
            interval: 300,
            time: 250,
            threshold: 2,
            posThreshold: 10
        },
        getTouchAction: function() {
            return [ ac ];
        },
        process: function(a) {
            var b = this.options, c = a.pointers.length === b.pointers, d = a.distance < b.threshold, f = a.deltaTime < b.time;
            if (this.reset(), a.eventType & yb && 0 === this.count) return this.failTimeout();
            if (d && f && c) {
                if (a.eventType != Ab) return this.failTimeout();
                var g = this.pTime ? a.timeStamp - this.pTime < b.interval : !0, h = !this.pCenter || I(this.pCenter, a.center) < b.posThreshold;
                this.pTime = a.timeStamp, this.pCenter = a.center, h && g ? this.count += 1 : this.count = 1, 
                this._input = a;
                var i = this.count % b.taps;
                if (0 === i) return this.hasRequireFailures() ? (this._timer = e(function() {
                    this.state = ic, this.tryEmit();
                }, b.interval, this), fc) : ic;
            }
            return kc;
        },
        failTimeout: function() {
            return this._timer = e(function() {
                this.state = kc;
            }, this.options.interval, this), kc;
        },
        reset: function() {
            clearTimeout(this._timer);
        },
        emit: function() {
            this.state == ic && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input));
        }
    }), eb.VERSION = "2.0.4", eb.defaults = {
        domEvents: !1,
        touchAction: $b,
        enable: !0,
        inputTarget: null,
        inputClass: null,
        preset: [ [ bb, {
            enable: !1
        } ], [ _, {
            enable: !1
        }, [ "rotate" ] ], [ cb, {
            direction: Hb
        } ], [ $, {
            direction: Hb
        }, [ "swipe" ] ], [ db ], [ db, {
            event: "doubletap",
            taps: 2
        }, [ "tap" ] ], [ ab ] ],
        cssProps: {
            userSelect: "none",
            touchSelect: "none",
            touchCallout: "none",
            contentZooming: "none",
            userDrag: "none",
            tapHighlightColor: "rgba(0,0,0,0)"
        }
    };
    var lc = 1, mc = 2;
    fb.prototype = {
        set: function(a) {
            return h(this.options, a), a.touchAction && this.touchAction.update(), a.inputTarget && (this.input.destroy(), 
            this.input.target = a.inputTarget, this.input.init()), this;
        },
        stop: function(a) {
            this.session.stopped = a ? mc : lc;
        },
        recognize: function(a) {
            var b = this.session;
            if (!b.stopped) {
                this.touchAction.preventDefaults(a);
                var c, d = this.recognizers, e = b.curRecognizer;
                (!e || e && e.state & ic) && (e = b.curRecognizer = null);
                for (var f = 0; f < d.length; ) c = d[f], b.stopped === mc || e && c != e && !c.canRecognizeWith(e) ? c.reset() : c.recognize(a), 
                !e && c.state & (fc | gc | hc) && (e = b.curRecognizer = c), f++;
            }
        },
        get: function(a) {
            if (a instanceof V) return a;
            for (var b = this.recognizers, c = 0; c < b.length; c++) if (b[c].options.event == a) return b[c];
            return null;
        },
        add: function(a) {
            if (f(a, "add", this)) return this;
            var b = this.get(a.options.event);
            return b && this.remove(b), this.recognizers.push(a), a.manager = this, this.touchAction.update(), 
            a;
        },
        remove: function(a) {
            if (f(a, "remove", this)) return this;
            var b = this.recognizers;
            return a = this.get(a), b.splice(s(b, a), 1), this.touchAction.update(), this;
        },
        on: function(a, b) {
            var c = this.handlers;
            return g(r(a), function(a) {
                c[a] = c[a] || [], c[a].push(b);
            }), this;
        },
        off: function(a, b) {
            var c = this.handlers;
            return g(r(a), function(a) {
                b ? c[a].splice(s(c[a], b), 1) : delete c[a];
            }), this;
        },
        emit: function(a, b) {
            this.options.domEvents && hb(a, b);
            var c = this.handlers[a] && this.handlers[a].slice();
            if (c && c.length) {
                b.type = a, b.preventDefault = function() {
                    b.srcEvent.preventDefault();
                };
                for (var d = 0; d < c.length; ) c[d](b), d++;
            }
        },
        destroy: function() {
            this.element && gb(this, !1), this.handlers = {}, this.session = {}, this.input.destroy(), 
            this.element = null;
        }
    }, h(eb, {
        INPUT_START: yb,
        INPUT_MOVE: zb,
        INPUT_END: Ab,
        INPUT_CANCEL: Bb,
        STATE_POSSIBLE: ec,
        STATE_BEGAN: fc,
        STATE_CHANGED: gc,
        STATE_ENDED: hc,
        STATE_RECOGNIZED: ic,
        STATE_CANCELLED: jc,
        STATE_FAILED: kc,
        DIRECTION_NONE: Cb,
        DIRECTION_LEFT: Db,
        DIRECTION_RIGHT: Eb,
        DIRECTION_UP: Fb,
        DIRECTION_DOWN: Gb,
        DIRECTION_HORIZONTAL: Hb,
        DIRECTION_VERTICAL: Ib,
        DIRECTION_ALL: Jb,
        Manager: fb,
        Input: y,
        TouchAction: T,
        TouchInput: Q,
        MouseInput: M,
        PointerEventInput: N,
        TouchMouseInput: S,
        SingleTouchInput: O,
        Recognizer: V,
        AttrRecognizer: Z,
        Tap: db,
        Pan: $,
        Swipe: cb,
        Pinch: _,
        Rotate: bb,
        Press: ab,
        on: n,
        off: o,
        each: g,
        merge: i,
        extend: h,
        inherit: j,
        bindFn: k,
        prefixed: v
    }), typeof define == kb && define.amd ? define(function() {
        return eb;
    }) : "undefined" != typeof module && module.exports ? module.exports = eb : a[c] = eb;
}(window, document, "Hammer"), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
angular.module("ngMaterial", [ "ng", "ngAnimate", "ngAria", "material.core", "material.core.theming.palette", "material.core.theming", "material.components.backdrop", "material.components.bottomSheet", "material.components.button", "material.components.checkbox", "material.components.card", "material.components.content", "material.components.dialog", "material.components.divider", "material.components.icon", "material.components.input", "material.components.list", "material.components.progressCircular", "material.components.progressLinear", "material.components.radioButton", "material.components.sidenav", "material.components.slider", "material.components.sticky", "material.components.subheader", "material.components.swipe", "material.components.switch", "material.components.tabs", "material.components.textField", "material.components.toast", "material.components.toolbar", "material.components.whiteframe", "material.components.tooltip" ]), 
/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdCoreInitialize() {
        if ("undefined" == typeof Hammer) throw new Error("ngMaterial requires HammerJS to be preloaded.");
        Hammer.defaults.cssProps.userSelect = "";
    }
    function MdCoreConfigure($provide, $mdThemingProvider) {
        function rAFDecorator($$rAF) {
            return $$rAF.debounce = function(cb) {
                var queueArgs, alreadyQueued, queueCb, context;
                return function() {
                    queueArgs = arguments, context = this, queueCb = cb, alreadyQueued || (alreadyQueued = !0, 
                    $$rAF(function() {
                        queueCb.apply(context, queueArgs), alreadyQueued = !1;
                    }));
                };
            }, $$rAF;
        }
        $provide.decorator("$$rAF", [ "$delegate", "$rootScope", rAFDecorator ]), $mdThemingProvider.theme("default").primaryColor("blue").accentColor("green").warnColor("red").backgroundColor("grey");
    }
    angular.module("material.core", [ "material.core.theming" ]).run(MdCoreInitialize).config(MdCoreConfigure), 
    MdCoreConfigure.$inject = [ "$provide", "$mdThemingProvider" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdConstantFactory($$rAF, $sniffer) {
        function vendorProperty(name) {
            return webkit ? "webkit" + name.charAt(0).toUpperCase() + name.substring(1) : name;
        }
        var webkit = /webkit/i.test($sniffer.vendorPrefix);
        return {
            KEY_CODE: {
                ENTER: 13,
                ESCAPE: 27,
                SPACE: 32,
                LEFT_ARROW: 37,
                UP_ARROW: 38,
                RIGHT_ARROW: 39,
                DOWN_ARROW: 40
            },
            CSS: {
                TRANSITIONEND: "transitionend" + (webkit ? " webkitTransitionEnd" : ""),
                ANIMATIONEND: "animationend" + (webkit ? " webkitAnimationEnd" : ""),
                TRANSFORM: vendorProperty("transform"),
                TRANSITION: vendorProperty("transition"),
                TRANSITION_DURATION: vendorProperty("transitionDuration"),
                ANIMATION_PLAY_STATE: vendorProperty("animationPlayState"),
                ANIMATION_DURATION: vendorProperty("animationDuration"),
                ANIMATION_NAME: vendorProperty("animationName"),
                ANIMATION_TIMING: vendorProperty("animationTimingFunction"),
                ANIMATION_DIRECTION: vendorProperty("animationDirection")
            },
            MEDIA: {
                sm: "(max-width: 600px)",
                "gt-sm": "(min-width: 600px)",
                md: "(min-width: 600px) and (max-width: 960px)",
                "gt-md": "(min-width: 960px)",
                lg: "(min-width: 960px) and (max-width: 1200px)",
                "gt-lg": "(min-width: 1200px)"
            }
        };
    }
    angular.module("material.core").factory("$mdConstant", MdConstantFactory), MdConstantFactory.$inject = [ "$$rAF", "$sniffer" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    function Iterator(items, reloop) {
        function getItems() {
            return [].concat(_items);
        }
        function count() {
            return _items.length;
        }
        function inRange(index) {
            return _items.length && index > -1 && index < _items.length;
        }
        function hasNext(item) {
            return item ? inRange(indexOf(item) + 1) : !1;
        }
        function hasPrevious(item) {
            return item ? inRange(indexOf(item) - 1) : !1;
        }
        function itemAt(index) {
            return inRange(index) ? _items[index] : null;
        }
        function findBy(key, val) {
            return _items.filter(function(item) {
                return item[key] === val;
            });
        }
        function add(item, index) {
            return item ? (angular.isNumber(index) || (index = _items.length), _items.splice(index, 0, item), 
            indexOf(item)) : -1;
        }
        function remove(item) {
            contains(item) && _items.splice(indexOf(item), 1);
        }
        function indexOf(item) {
            return _items.indexOf(item);
        }
        function contains(item) {
            return item && indexOf(item) > -1;
        }
        function first() {
            return _items.length ? _items[0] : null;
        }
        function last() {
            return _items.length ? _items[_items.length - 1] : null;
        }
        function findSubsequentItem(backwards, item, validate, limit) {
            validate = validate || trueFn;
            var curIndex = indexOf(item);
            if (!inRange(curIndex)) return null;
            var nextIndex = curIndex + (backwards ? -1 : 1), foundItem = null;
            return inRange(nextIndex) ? foundItem = _items[nextIndex] : reloop && (foundItem = backwards ? last() : first(), 
            nextIndex = indexOf(foundItem)), null === foundItem || nextIndex === limit ? null : (angular.isUndefined(limit) && (limit = nextIndex), 
            validate(foundItem) ? foundItem : findSubsequentItem(backwards, foundItem, validate, limit));
        }
        var trueFn = function() {
            return !0;
        };
        reloop = !!reloop;
        var _items = items || [];
        return {
            items: getItems,
            count: count,
            inRange: inRange,
            contains: contains,
            indexOf: indexOf,
            itemAt: itemAt,
            findBy: findBy,
            add: add,
            remove: remove,
            first: first,
            last: last,
            next: angular.bind(null, findSubsequentItem, !1),
            previous: angular.bind(null, findSubsequentItem, !0),
            hasPrevious: hasPrevious,
            hasNext: hasNext
        };
    }
    angular.module("material.core").config([ "$provide", function($provide) {
        $provide.decorator("$mdUtil", [ "$delegate", function($delegate) {
            return $delegate.iterator = Iterator, $delegate;
        } ]);
    } ]);
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
angular.module("material.core").factory("$mdMedia", mdMediaFactory), mdMediaFactory.$inject = [ "$mdConstant", "$mdUtil", "$rootScope", "$window" ], 
/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    var nextUniqueId = [ "0", "0", "0" ];
    angular.module("material.core").factory("$mdUtil", [ "$cacheFactory", "$document", "$timeout", function($cacheFactory, $document, $timeout) {
        function attachDragBehavior(scope, element) {
            function cleanup() {
                cleanup.called || (cleanup.called = !0, element.off(START_EVENTS, startDrag), $document.off(MOVE_EVENTS, doDrag).off(END_EVENTS, endDrag), 
                drag = pointerIsDown = !1);
            }
            function startDrag(ev) {
                var eventType = ev.type.charAt(0), now = Util.now();
                previousDrag && previousDrag.pointerType !== eventType && now - previousDrag.endTime < 400 || pointerIsDown || (pointerIsDown = !0, 
                drag = {
                    pointerType: eventType,
                    startX: getPosition(ev),
                    startTime: now
                }, element.one("$md.dragstart", function(ev) {
                    ev.defaultPrevented && (drag = null);
                }), element.triggerHandler("$md.dragstart", drag));
            }
            function doDrag(ev) {
                drag && isProperEventType(ev, drag) && (("t" === drag.pointerType || "p" === drag.pointerType) && ev.preventDefault(), 
                updateDragState(ev), element.triggerHandler("$md.drag", drag));
            }
            function endDrag(ev) {
                pointerIsDown = !1, drag && isProperEventType(ev, drag) && (drag.endTime = Util.now(), 
                updateDragState(ev), element.triggerHandler("$md.dragend", drag), previousDrag = drag, 
                drag = null);
            }
            function updateDragState(ev) {
                var x = getPosition(ev);
                drag.distance = drag.startX - x, drag.direction = drag.distance > 0 ? "left" : drag.distance < 0 ? "right" : "", 
                drag.duration = drag.startTime - Util.now(), drag.velocity = Math.abs(drag.duration) / drag.time;
            }
            function getPosition(ev) {
                ev = ev.originalEvent || ev;
                var point = ev.touches && ev.touches[0] || ev.changedTouches && ev.changedTouches[0] || ev;
                return point.pageX;
            }
            function isProperEventType(ev, drag) {
                return drag && ev && (ev.type || "").charAt(0) === drag.pointerType;
            }
            var drag, previousDrag, pointerIsDown, START_EVENTS = "mousedown touchstart pointerdown", MOVE_EVENTS = "mousemove touchmove pointermove", END_EVENTS = "mouseup mouseleave touchend touchcancel pointerup pointercancel";
            return element.on(START_EVENTS, startDrag), $document.on(MOVE_EVENTS, doDrag).on(END_EVENTS, endDrag), 
            scope.$on("$destroy", cleanup), cleanup;
        }
        function cacheFactory(id, options) {
            var cache = $cacheFactory(id, options), keys = {};
            return cache._put = cache.put, cache.put = function(k, v) {
                return keys[k] = !0, cache._put(k, v);
            }, cache._remove = cache.remove, cache.remove = function(k) {
                return delete keys[k], cache._remove(k);
            }, cache._removeAll = cache.removeAll, cache.removeAll = function() {
                return keys = {}, cache._removeAll();
            }, cache._destroy = cache.destroy, cache.destroy = function() {
                return keys = {}, cache._destroy();
            }, cache.keys = function() {
                return Object.keys(keys);
            }, cache;
        }
        var Util;
        return Util = {
            now: window.performance ? angular.bind(window.performance, window.performance.now) : Date.now,
            attachDragBehavior: attachDragBehavior,
            elementRect: function(element, offsetParent) {
                var node = element[0];
                offsetParent = offsetParent || node.offsetParent || document.body, offsetParent = offsetParent[0] || offsetParent;
                var nodeRect = node.getBoundingClientRect(), parentRect = offsetParent.getBoundingClientRect();
                return {
                    left: nodeRect.left - parentRect.left + offsetParent.scrollLeft,
                    top: nodeRect.top - parentRect.top + offsetParent.scrollTop,
                    width: nodeRect.width,
                    height: nodeRect.height
                };
            },
            fakeNgModel: function() {
                return {
                    $setViewValue: function(value) {
                        this.$viewValue = value, this.$render(value), this.$viewChangeListeners.forEach(function(cb) {
                            cb();
                        });
                    },
                    $parsers: [],
                    $formatters: [],
                    $viewChangeListeners: [],
                    $render: angular.noop
                };
            },
            cacheFactory: cacheFactory,
            debounce: function(func, wait, scope, invokeApply) {
                var timer;
                return function() {
                    var context = scope, args = Array.prototype.slice.call(arguments);
                    $timeout.cancel(timer), timer = $timeout(function() {
                        timer = void 0, func.apply(context, args);
                    }, wait || 10, invokeApply);
                };
            },
            throttle: function(func, delay) {
                var recent;
                return function() {
                    var context = this, args = arguments, now = Util.now();
                    (!recent || now - recent > delay) && (func.apply(context, args), recent = now);
                };
            },
            nextUid: function() {
                for (var digit, index = nextUniqueId.length; index; ) {
                    if (index--, digit = nextUniqueId[index].charCodeAt(0), 57 == digit) return nextUniqueId[index] = "A", 
                    nextUniqueId.join("");
                    if (90 != digit) return nextUniqueId[index] = String.fromCharCode(digit + 1), nextUniqueId.join("");
                    nextUniqueId[index] = "0";
                }
                return nextUniqueId.unshift("0"), nextUniqueId.join("");
            },
            disconnectScope: function(scope) {
                if (scope && scope.$root !== scope && !scope.$$destroyed) {
                    var parent = scope.$parent;
                    scope.$$disconnected = !0, parent.$$childHead === scope && (parent.$$childHead = scope.$$nextSibling), 
                    parent.$$childTail === scope && (parent.$$childTail = scope.$$prevSibling), scope.$$prevSibling && (scope.$$prevSibling.$$nextSibling = scope.$$nextSibling), 
                    scope.$$nextSibling && (scope.$$nextSibling.$$prevSibling = scope.$$prevSibling), 
                    scope.$$nextSibling = scope.$$prevSibling = null;
                }
            },
            reconnectScope: function(scope) {
                if (scope && scope.$root !== scope && scope.$$disconnected) {
                    var child = scope, parent = child.$parent;
                    child.$$disconnected = !1, child.$$prevSibling = parent.$$childTail, parent.$$childHead ? (parent.$$childTail.$$nextSibling = child, 
                    parent.$$childTail = child) : parent.$$childHead = parent.$$childTail = child;
                }
            },
            getClosest: function(el, tagName) {
                tagName = tagName.toUpperCase();
                do if (el.nodeName === tagName) return el; while (el = el.parentNode);
                return null;
            }
        };
    } ]), angular.element.prototype.focus = angular.element.prototype.focus || function() {
        return this.length && this[0].focus(), this;
    }, angular.element.prototype.blur = angular.element.prototype.blur || function() {
        return this.length && this[0].blur(), this;
    };
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function AriaService($$rAF, $log, $window) {
        function expect(element, attrName, defaultValue) {
            var node = element[0];
            node.hasAttribute(attrName) || childHasAttribute(node, attrName) || (defaultValue = angular.isString(defaultValue) && defaultValue.trim() || "", 
            defaultValue.length ? element.attr(attrName, defaultValue) : $log.warn('ARIA: Attribute "', attrName, '", required for accessibility, is missing on node:', node));
        }
        function expectAsync(element, attrName, defaultValueGetter) {
            $$rAF(function() {
                expect(element, attrName, defaultValueGetter());
            });
        }
        function expectWithText(element, attrName) {
            expectAsync(element, attrName, function() {
                return element.text().trim();
            });
        }
        function childHasAttribute(node, attrName) {
            function isHidden(el) {
                var style = el.currentStyle ? el.currentStyle : $window.getComputedStyle(el);
                return "none" === style.display;
            }
            var hasChildren = node.hasChildNodes(), hasAttr = !1;
            if (hasChildren) for (var children = node.childNodes, i = 0; i < children.length; i++) {
                var child = children[i];
                1 === child.nodeType && child.hasAttribute(attrName) && (isHidden(child) || (hasAttr = !0));
            }
            return hasAttr;
        }
        return {
            expect: expect,
            expectAsync: expectAsync,
            expectWithText: expectWithText
        };
    }
    angular.module("material.core").service("$mdAria", AriaService), AriaService.$inject = [ "$$rAF", "$log", "$window" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdCompilerService($q, $http, $injector, $compile, $controller, $templateCache) {
        this.compile = function(options) {
            var templateUrl = options.templateUrl, template = options.template || "", controller = options.controller, controllerAs = options.controllerAs, resolve = options.resolve || {}, locals = options.locals || {}, transformTemplate = options.transformTemplate || angular.identity, bindToController = options.bindToController;
            return angular.forEach(resolve, function(value, key) {
                resolve[key] = angular.isString(value) ? $injector.get(value) : $injector.invoke(value);
            }), angular.extend(resolve, locals), resolve.$template = templateUrl ? $http.get(templateUrl, {
                cache: $templateCache
            }).then(function(response) {
                return response.data;
            }) : $q.when(template), $q.all(resolve).then(function(locals) {
                var template = transformTemplate(locals.$template), element = angular.element("<div>").html(template.trim()).contents(), linkFn = $compile(element);
                return {
                    locals: locals,
                    element: element,
                    link: function(scope) {
                        if (locals.$scope = scope, controller) {
                            var ctrl = $controller(controller, locals);
                            bindToController && angular.extend(ctrl, locals), element.data("$ngControllerController", ctrl), 
                            element.children().data("$ngControllerController", ctrl), controllerAs && (scope[controllerAs] = ctrl);
                        }
                        return linkFn(scope);
                    }
                };
            });
        };
    }
    angular.module("material.core").service("$mdCompiler", mdCompilerService), mdCompilerService.$inject = [ "$q", "$http", "$injector", "$compile", "$controller", "$templateCache" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function InterimElementProvider() {
        function createInterimElementProvider(interimFactoryName) {
            function setDefaults(definition) {
                return providerConfig.optionsFactory = definition.options, providerConfig.methods = (definition.methods || []).concat(EXPOSED_METHODS), 
                provider;
            }
            function addPreset(name, definition) {
                if (definition = definition || {}, definition.methods = definition.methods || [], 
                definition.options = definition.options || function() {
                    return {};
                }, /^cancel|hide|show$/.test(name)) throw new Error("Preset '" + name + "' in " + interimFactoryName + " is reserved!");
                if (definition.methods.indexOf("_options") > -1) throw new Error("Method '_options' in " + interimFactoryName + " is reserved!");
                return providerConfig.presets[name] = {
                    methods: definition.methods.concat(EXPOSED_METHODS),
                    optionsFactory: definition.options,
                    argOption: definition.argOption
                }, provider;
            }
            function factory($$interimElement, $animate, $injector) {
                function showInterimElement(opts) {
                    return opts && opts._options && (opts = opts._options), interimElementService.show(angular.extend({}, defaultOptions, opts));
                }
                function invokeFactory(factory, defaultVal) {
                    var locals = {};
                    return locals[interimFactoryName] = publicService, $injector.invoke(factory || function() {
                        return defaultVal;
                    }, {}, locals);
                }
                var defaultMethods, defaultOptions, interimElementService = $$interimElement(), publicService = {
                    hide: interimElementService.hide,
                    cancel: interimElementService.cancel,
                    show: showInterimElement
                };
                return defaultMethods = providerConfig.methods || [], defaultOptions = invokeFactory(providerConfig.optionsFactory, {}), 
                angular.forEach(providerConfig.presets, function(definition, name) {
                    function Preset(opts) {
                        this._options = angular.extend({}, presetDefaults, opts);
                    }
                    var presetDefaults = invokeFactory(definition.optionsFactory, {}), presetMethods = (definition.methods || []).concat(defaultMethods);
                    if (angular.extend(presetDefaults, {
                        $type: name
                    }), angular.forEach(presetMethods, function(name) {
                        Preset.prototype[name] = function(value) {
                            return this._options[name] = value, this;
                        };
                    }), definition.argOption) {
                        var methodName = "show" + name.charAt(0).toUpperCase() + name.slice(1);
                        publicService[methodName] = function(arg) {
                            var config = publicService[name](arg);
                            return publicService.show(config);
                        };
                    }
                    publicService[name] = function(arg) {
                        return arguments.length && definition.argOption && !angular.isObject(arg) && !angular.isArray(arg) ? new Preset()[definition.argOption](arg) : new Preset(arg);
                    };
                }), publicService;
            }
            var EXPOSED_METHODS = [ "onHide", "onShow", "onRemove" ], providerConfig = {
                presets: {}
            }, provider = {
                setDefaults: setDefaults,
                addPreset: addPreset,
                $get: factory
            };
            return provider.addPreset("build", {
                methods: [ "controller", "controllerAs", "resolve", "template", "templateUrl", "themable", "transformTemplate", "parent" ]
            }), factory.$inject = [ "$$interimElement", "$animate", "$injector" ], provider;
        }
        function InterimElementFactory($document, $q, $rootScope, $timeout, $rootElement, $animate, $interpolate, $mdCompiler, $mdTheming) {
            function replaceInterpolationSymbols(text) {
                return text && angular.isString(text) ? text.replace(/\{\{/g, startSymbol).replace(/}}/g, endSymbol) : text;
            }
            var startSymbol = $interpolate.startSymbol(), endSymbol = $interpolate.endSymbol(), usesStandardSymbols = "{{" === startSymbol && "}}" === endSymbol, processTemplate = usesStandardSymbols ? angular.identity : replaceInterpolationSymbols;
            return function() {
                function show(options) {
                    stack.length && service.cancel();
                    var interimElement = new InterimElement(options);
                    return stack.push(interimElement), interimElement.show().then(function() {
                        return interimElement.deferred.promise;
                    });
                }
                function hide(response) {
                    var interimElement = stack.shift();
                    return interimElement && interimElement.remove().then(function() {
                        interimElement.deferred.resolve(response);
                    }), interimElement ? interimElement.deferred.promise : $q.when(response);
                }
                function cancel(reason) {
                    var interimElement = stack.shift();
                    return interimElement && interimElement.remove().then(function() {
                        interimElement.deferred.reject(reason);
                    }), interimElement ? interimElement.deferred.promise : $q.reject(reason);
                }
                function InterimElement(options) {
                    var self, hideTimeout, element;
                    return options = options || {}, options = angular.extend({
                        scope: options.scope || $rootScope.$new(options.isolateScope),
                        onShow: function(scope, element, options) {
                            return $animate.enter(element, options.parent);
                        },
                        onRemove: function(scope, element) {
                            return element && $animate.leave(element) || $q.when();
                        }
                    }, options), options.template && (options.template = processTemplate(options.template)), 
                    self = {
                        options: options,
                        deferred: $q.defer(),
                        show: function() {
                            return $mdCompiler.compile(options).then(function(compileData) {
                                function startHideTimeout() {
                                    options.hideDelay && (hideTimeout = $timeout(service.cancel, options.hideDelay));
                                }
                                angular.extend(compileData.locals, self.options), angular.isString(options.parent) ? options.parent = angular.element($document[0].querySelector(options.parent)) : options.parent || (options.parent = $rootElement.find("body"), 
                                options.parent.length || (options.parent = $rootElement)), element = compileData.link(options.scope), 
                                options.themable && $mdTheming(element);
                                var ret = options.onShow(options.scope, element, options);
                                return $q.when(ret).then(function() {
                                    (options.onComplete || angular.noop)(options.scope, element, options), startHideTimeout();
                                });
                            });
                        },
                        cancelTimeout: function() {
                            hideTimeout && ($timeout.cancel(hideTimeout), hideTimeout = void 0);
                        },
                        remove: function() {
                            self.cancelTimeout();
                            var ret = options.onRemove(options.scope, element, options);
                            return $q.when(ret).then(function() {
                                options.scope.$destroy();
                            });
                        }
                    };
                }
                var service, stack = [];
                return service = {
                    show: show,
                    hide: hide,
                    cancel: cancel
                };
            };
        }
        return createInterimElementProvider.$get = InterimElementFactory, InterimElementFactory.$inject = [ "$document", "$q", "$rootScope", "$timeout", "$rootElement", "$animate", "$interpolate", "$mdCompiler", "$mdTheming" ], 
        createInterimElementProvider;
    }
    angular.module("material.core").provider("$$interimElement", InterimElementProvider);
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function ComponentRegistry($log, $q) {
        function isValidID(handle) {
            return handle && "" !== handle;
        }
        var self, instances = [], pendings = {};
        return self = {
            notFoundError: function(handle) {
                $log.error("No instance found for handle", handle);
            },
            getInstances: function() {
                return instances;
            },
            get: function(handle) {
                if (!isValidID(handle)) return null;
                var i, j, instance;
                for (i = 0, j = instances.length; j > i; i++) if (instance = instances[i], instance.$$mdHandle === handle) return instance;
                return null;
            },
            register: function(instance, handle) {
                function deregister() {
                    var index = instances.indexOf(instance);
                    -1 !== index && instances.splice(index, 1);
                }
                function resolveWhen() {
                    var dfd = pendings[handle];
                    dfd && (dfd.resolve(instance), delete pendings[handle]);
                }
                return handle ? (instance.$$mdHandle = handle, instances.push(instance), resolveWhen(), 
                deregister) : angular.noop;
            },
            when: function(handle) {
                if (isValidID(handle)) {
                    var deferred = $q.defer(), instance = self.get(handle);
                    return instance ? deferred.resolve(instance) : pendings[handle] = deferred, deferred.promise;
                }
                return $q.reject("Invalid `md-component-id` value.");
            }
        };
    }
    angular.module("material.core").factory("$mdComponentRegistry", ComponentRegistry), 
    ComponentRegistry.$inject = [ "$log", "$q" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function InkRippleDirective($mdInkRipple) {
        return {
            controller: angular.noop,
            link: function(scope, element, attr) {
                attr.hasOwnProperty("mdInkRippleCheckbox") ? $mdInkRipple.attachCheckboxBehavior(scope, element) : $mdInkRipple.attachButtonBehavior(scope, element);
            }
        };
    }
    function InkRippleService($window, $timeout) {
        function attachButtonBehavior(scope, element, options) {
            return attach(scope, element, angular.extend({
                isFAB: element.hasClass("md-fab"),
                isMenuItem: element.hasClass("md-menu-item"),
                center: !1,
                dimBackground: !0
            }, options));
        }
        function attachCheckboxBehavior(scope, element, options) {
            return attach(scope, element, angular.extend({
                center: !0,
                dimBackground: !1
            }, options));
        }
        function attachTabBehavior(scope, element, options) {
            return attach(scope, element, angular.extend({
                center: !1,
                dimBackground: !0,
                outline: !0
            }, options));
        }
        function attach(scope, element, options) {
            function parseColor(color) {
                function hexToRGBA(color) {
                    var hex = "#" === color.charAt(0) ? color.substr(1) : color, dig = hex.length / 3, red = hex.substr(0, dig), grn = hex.substr(dig, dig), blu = hex.substr(2 * dig);
                    return 1 === dig && (red += red, grn += grn, blu += blu), "rgba(" + parseInt(red, 16) + "," + parseInt(grn, 16) + "," + parseInt(blu, 16) + ",0.1)";
                }
                function rgbToRGBA(color) {
                    return color.replace(")", ", 0.1)").replace("(", "a(");
                }
                if (color) return 0 === color.indexOf("rgba") ? color.replace(/\d?\.?\d*\s*\)\s*$/, "0.1)") : 0 === color.indexOf("rgb") ? rgbToRGBA(color) : 0 === color.indexOf("#") ? hexToRGBA(color) : void 0;
            }
            function removeElement(elem, wait) {
                ripples.splice(ripples.indexOf(elem), 1), 0 === ripples.length && rippleContainer && rippleContainer.css({
                    backgroundColor: ""
                }), $timeout(function() {
                    elem.remove();
                }, wait, !1);
            }
            function updateElement(elem) {
                var index = ripples.indexOf(elem), state = states[index] || {}, elemIsActive = ripples.length > 1 ? !1 : isActive, elemIsHeld = ripples.length > 1 ? !1 : isHeld;
                elemIsActive || state.animating || elemIsHeld ? elem.addClass("md-ripple-visible") : elem && (elem.removeClass("md-ripple-visible"), 
                options.outline && elem.css({
                    width: rippleSize + "px",
                    height: rippleSize + "px",
                    marginLeft: -1 * rippleSize + "px",
                    marginTop: -1 * rippleSize + "px"
                }), removeElement(elem, options.outline ? 450 : 650));
            }
            function createRipple(left, top) {
                function getRippleElement(css) {
                    var elem = angular.element('<div class="md-ripple" data-counter="' + counter++ + '">');
                    return ripples.unshift(elem), states.unshift({
                        animating: !0
                    }), container.append(elem), css && elem.css(css), elem;
                }
                function getRippleSize(left, top) {
                    var multiplier, size, rect, width = container.prop("offsetWidth"), height = container.prop("offsetHeight");
                    return options.isMenuItem ? size = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2)) : options.outline ? (rect = node.getBoundingClientRect(), 
                    left -= rect.left, top -= rect.top, width = Math.max(left, width - left), height = Math.max(top, height - top), 
                    size = 2 * Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2))) : (multiplier = options.isFAB ? 1.1 : .8, 
                    size = Math.max(width, height) * multiplier), size;
                }
                function getRippleCss(size, left, top) {
                    function rgbaToRGB(color) {
                        return color.replace("rgba", "rgb").replace(/,[^\)\,]+\)/, ")");
                    }
                    var rect, css = {
                        backgroundColor: rgbaToRGB(color),
                        borderColor: rgbaToRGB(color),
                        width: size + "px",
                        height: size + "px"
                    };
                    return options.outline ? (css.width = 0, css.height = 0) : css.marginLeft = css.marginTop = size * -.5 + "px", 
                    options.center ? css.left = css.top = "50%" : (rect = node.getBoundingClientRect(), 
                    css.left = Math.round((left - rect.left) / container.prop("offsetWidth") * 100) + "%", 
                    css.top = Math.round((top - rect.top) / container.prop("offsetHeight") * 100) + "%"), 
                    css;
                }
                function getRippleContainer() {
                    if (rippleContainer) return rippleContainer;
                    var container = angular.element('<div class="md-ripple-container"></div>');
                    return rippleContainer = container, element.append(container), container;
                }
                color = parseColor(element.attr("md-ink-ripple")) || parseColor($window.getComputedStyle(options.colorElement[0]).color || "rgb(0, 0, 0)");
                var container = getRippleContainer(), size = getRippleSize(left, top), css = getRippleCss(size, left, top), elem = getRippleElement(css), index = ripples.indexOf(elem), state = states[index] || {};
                return rippleSize = size, state.animating = !0, $timeout(function() {
                    options.dimBackground && container.css({
                        backgroundColor: color
                    }), elem.addClass("md-ripple-placed md-ripple-scaled"), elem.css(options.outline ? {
                        borderWidth: .5 * size + "px",
                        marginLeft: size * -.5 + "px",
                        marginTop: size * -.5 + "px"
                    } : {
                        left: "50%",
                        top: "50%"
                    }), updateElement(elem), $timeout(function() {
                        state.animating = !1, updateElement(elem);
                    }, options.outline ? 450 : 225, !1);
                }, 0, !1), elem;
            }
            function onInput(ev) {
                function isRippleAllowed() {
                    function isDisabled(elem) {
                        return elem && elem.hasAttribute && elem.hasAttribute("disabled");
                    }
                    var parent = node.parentNode, grandparent = parent && parent.parentNode, ancestor = grandparent && grandparent.parentNode;
                    return !(isDisabled(node) || isDisabled(parent) || isDisabled(grandparent) || isDisabled(ancestor));
                }
                var ripple, index;
                ev.eventType === Hammer.INPUT_START && ev.isFirst && isRippleAllowed() ? (ripple = createRipple(ev.center.x, ev.center.y), 
                isHeld = !0) : ev.eventType === Hammer.INPUT_END && ev.isFinal && (isHeld = !1, 
                index = ripples.length - 1, ripple = ripples[index], $timeout(function() {
                    updateElement(ripple);
                }, 0, !1));
            }
            if (element.controller("mdNoInk")) return angular.noop;
            options = angular.extend({
                colorElement: element,
                mousedown: !0,
                hover: !0,
                focus: !0,
                center: !1,
                mousedownPauseTime: 150,
                dimBackground: !1,
                outline: !1,
                isFAB: !1,
                isMenuItem: !1
            }, options);
            var rippleContainer, rippleSize, controller = element.controller("mdInkRipple") || {}, counter = 0, ripples = [], states = [], isActiveExpr = element.attr("md-highlight"), isActive = !1, isHeld = !1, node = element[0], hammertime = new Hammer(node), color = parseColor(element.attr("md-ink-ripple")) || parseColor($window.getComputedStyle(options.colorElement[0]).color || "rgb(0, 0, 0)");
            return scope._onInput = onInput, options.mousedown && hammertime.on("hammer.input", onInput), 
            controller.createRipple = createRipple, isActiveExpr && scope.$watch(isActiveExpr, function(newValue) {
                isActive = newValue, isActive && !ripples.length && $timeout(function() {
                    createRipple(0, 0);
                }, 0, !1), angular.forEach(ripples, updateElement);
            }), function() {
                hammertime.destroy(), rippleContainer && rippleContainer.remove();
            };
        }
        return {
            attachButtonBehavior: attachButtonBehavior,
            attachCheckboxBehavior: attachCheckboxBehavior,
            attachTabBehavior: attachTabBehavior,
            attach: attach
        };
    }
    function attrNoDirective() {
        return function() {
            return {
                controller: angular.noop
            };
        };
    }
    angular.module("material.core").factory("$mdInkRipple", InkRippleService).directive("mdInkRipple", InkRippleDirective).directive("mdNoInk", attrNoDirective()).directive("mdNoBar", attrNoDirective()).directive("mdNoStretch", attrNoDirective()), 
    InkRippleDirective.$inject = [ "$mdInkRipple" ], InkRippleService.$inject = [ "$window", "$timeout" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    angular.module("material.core.theming.palette", []).constant("$mdColorPalette", {
        red: {
            "50": "#ffebee",
            "100": "#ffcdd2",
            "200": "#ef9a9a",
            "300": "#e57373",
            "400": "#ef5350",
            "500": "#f44336",
            "600": "#e53935",
            "700": "#d32f2f",
            "800": "#c62828",
            "900": "#b71c1c",
            A100: "#ff8a80",
            A200: "#ff5252",
            A400: "#ff1744",
            A700: "#d50000",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200 300 400 A100"
        },
        pink: {
            "50": "#fce4ec",
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            A100: "#ff80ab",
            A200: "#ff4081",
            A400: "#f50057",
            A700: "#c51162",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200 300 400 A100"
        },
        purple: {
            "50": "#f3e5f5",
            "100": "#e1bee7",
            "200": "#ce93d8",
            "300": "#ba68c8",
            "400": "#ab47bc",
            "500": "#9c27b0",
            "600": "#8e24aa",
            "700": "#7b1fa2",
            "800": "#6a1b9a",
            "900": "#4a148c",
            A100: "#ea80fc",
            A200: "#e040fb",
            A400: "#d500f9",
            A700: "#aa00ff",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200 A100"
        },
        "deep-purple": {
            "50": "#ede7f6",
            "100": "#d1c4e9",
            "200": "#b39ddb",
            "300": "#9575cd",
            "400": "#7e57c2",
            "500": "#673ab7",
            "600": "#5e35b1",
            "700": "#512da8",
            "800": "#4527a0",
            "900": "#311b92",
            A100: "#b388ff",
            A200: "#7c4dff",
            A400: "#651fff",
            A700: "#6200ea",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200 A100"
        },
        indigo: {
            "50": "#e8eaf6",
            "100": "#c5cae9",
            "200": "#9fa8da",
            "300": "#7986cb",
            "400": "#5c6bc0",
            "500": "#3f51b5",
            "600": "#3949ab",
            "700": "#303f9f",
            "800": "#283593",
            "900": "#1a237e",
            A100: "#8c9eff",
            A200: "#536dfe",
            A400: "#3d5afe",
            A700: "#304ffe",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200 A100"
        },
        blue: {
            "50": "#e3f2fd",
            "100": "#bbdefb",
            "200": "#90caf9",
            "300": "#64b5f6",
            "400": "#42a5f5",
            "500": "#2196f3",
            "600": "#1e88e5",
            "700": "#1976d2",
            "800": "#1565c0",
            "900": "#0d47a1",
            A100: "#82b1ff",
            A200: "#448aff",
            A400: "#2979ff",
            A700: "#2962ff",
            contrastDefaultColor: "light",
            contrastDarkColors: "100 200 300 400 A100"
        },
        "light-blue": {
            "50": "#e1f5fe",
            "100": "#b3e5fc",
            "200": "#81d4fa",
            "300": "#4fc3f7",
            "400": "#29b6f6",
            "500": "#03a9f4",
            "600": "#039be5",
            "700": "#0288d1",
            "800": "#0277bd",
            "900": "#01579b",
            A100: "#80d8ff",
            A200: "#40c4ff",
            A400: "#00b0ff",
            A700: "#0091ea",
            contrastDefaultColor: "dark",
            contrastLightColors: "500 600 700 800 900 A700"
        },
        cyan: {
            "50": "#e0f7fa",
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            A100: "#84ffff",
            A200: "#18ffff",
            A400: "#00e5ff",
            A700: "#00b8d4",
            contrastDefaultColor: "dark",
            contrastLightColors: "500 600 700 800 900"
        },
        teal: {
            "50": "#e0f2f1",
            "100": "#b2dfdb",
            "200": "#80cbc4",
            "300": "#4db6ac",
            "400": "#26a69a",
            "500": "#009688",
            "600": "#00897b",
            "700": "#00796b",
            "800": "#00695c",
            "900": "#004d40",
            A100: "#a7ffeb",
            A200: "#64ffda",
            A400: "#1de9b6",
            A700: "#00bfa5",
            contrastDefaultColor: "dark",
            contrastLightColors: "500 600 700 800 900"
        },
        green: {
            "50": "#e8f5e9",
            "100": "#c8e6c9",
            "200": "#a5d6a7",
            "300": "#81c784",
            "400": "#66bb6a",
            "500": "#4caf50",
            "600": "#43a047",
            "700": "#388e3c",
            "800": "#2e7d32",
            "900": "#1b5e20",
            A100: "#b9f6ca",
            A200: "#69f0ae",
            A400: "#00e676",
            A700: "#00c853",
            contrastDefaultColor: "dark",
            contrastLightColors: "500 600 700 800 900"
        },
        "light-green": {
            "50": "#f1f8e9",
            "100": "#dcedc8",
            "200": "#c5e1a5",
            "300": "#aed581",
            "400": "#9ccc65",
            "500": "#8bc34a",
            "600": "#7cb342",
            "700": "#689f38",
            "800": "#558b2f",
            "900": "#33691e",
            A100: "#ccff90",
            A200: "#b2ff59",
            A400: "#76ff03",
            A700: "#64dd17",
            contrastDefaultColor: "dark",
            contrastLightColors: "800 900"
        },
        lime: {
            "50": "#f9fbe7",
            "100": "#f0f4c3",
            "200": "#e6ee9c",
            "300": "#dce775",
            "400": "#d4e157",
            "500": "#cddc39",
            "600": "#c0ca33",
            "700": "#afb42b",
            "800": "#9e9d24",
            "900": "#827717",
            A100: "#f4ff81",
            A200: "#eeff41",
            A400: "#c6ff00",
            A700: "#aeea00",
            contrastDefaultColor: "dark",
            contrastLightColors: "900"
        },
        yellow: {
            "50": "#fffde7",
            "100": "#fff9c4",
            "200": "#fff59d",
            "300": "#fff176",
            "400": "#ffee58",
            "500": "#ffeb3b",
            "600": "#fdd835",
            "700": "#fbc02d",
            "800": "#f9a825",
            "900": "#f57f17",
            A100: "#ffff8d",
            A200: "#ffff00",
            A400: "#ffea00",
            A700: "#ffd600",
            contrastDefaultColor: "dark"
        },
        amber: {
            "50": "#fff8e1",
            "100": "#ffecb3",
            "200": "#ffe082",
            "300": "#ffd54f",
            "400": "#ffca28",
            "500": "#ffc107",
            "600": "#ffb300",
            "700": "#ffa000",
            "800": "#ff8f00",
            "900": "#ff6f00",
            A100: "#ffe57f",
            A200: "#ffd740",
            A400: "#ffc400",
            A700: "#ffab00",
            contrastDefaultColor: "dark"
        },
        orange: {
            "50": "#fff3e0",
            "100": "#ffe0b2",
            "200": "#ffcc80",
            "300": "#ffb74d",
            "400": "#ffa726",
            "500": "#ff9800",
            "600": "#fb8c00",
            "700": "#f57c00",
            "800": "#ef6c00",
            "900": "#e65100",
            A100: "#ffd180",
            A200: "#ffab40",
            A400: "#ff9100",
            A700: "#ff6d00",
            contrastDefaultColor: "dark",
            contrastLightColors: "800 900"
        },
        "deep-orange": {
            "50": "#fbe9e7",
            "100": "#ffccbc",
            "200": "#ffab91",
            "300": "#ff8a65",
            "400": "#ff7043",
            "500": "#ff5722",
            "600": "#f4511e",
            "700": "#e64a19",
            "800": "#d84315",
            "900": "#bf360c",
            A100: "#ff9e80",
            A200: "#ff6e40",
            A400: "#ff3d00",
            A700: "#dd2c00",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200 300 400 A100 A200"
        },
        brown: {
            "50": "#efebe9",
            "100": "#d7ccc8",
            "200": "#bcaaa4",
            "300": "#a1887f",
            "400": "#8d6e63",
            "500": "#795548",
            "600": "#6d4c41",
            "700": "#5d4037",
            "800": "#4e342e",
            "900": "#3e2723",
            A100: "#d7ccc8",
            A200: "#bcaaa4",
            A400: "#8d6e63",
            A700: "#5d4037",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200"
        },
        grey: {
            "0": "#ffffff",
            "50": "#fafafa",
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "1000": "#000000",
            A100: "#ffffff",
            A200: "#eeeeee",
            A400: "#bdbdbd",
            A700: "#616161",
            contrastDefaultColor: "dark",
            contrastLightColors: "600 700 800 900"
        },
        "blue-grey": {
            "50": "#eceff1",
            "100": "#cfd8dc",
            "200": "#b0bec5",
            "300": "#90a4ae",
            "400": "#78909c",
            "500": "#607d8b",
            "600": "#546e7a",
            "700": "#455a64",
            "800": "#37474f",
            "900": "#263238",
            A100: "#cfd8dc",
            A200: "#b0bec5",
            A400: "#78909c",
            A700: "#455a64",
            contrastDefaultColor: "light",
            contrastDarkColors: "50 100 200 300"
        }
    });
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function ThemingProvider($mdColorPalette) {
        function definePalette(name, map) {
            return map = map || {}, PALETTES[name] = checkPaletteValid(name, map), themingProvider;
        }
        function extendPalette(name, map) {
            return checkPaletteValid(name, angular.extend({}, PALETTES[name] || {}, map));
        }
        function checkPaletteValid(name, map) {
            var missingColors = VALID_HUE_VALUES.filter(function(field) {
                return !map[field];
            });
            if (missingColors.length) throw new Error("Missing colors %1 in palette %2!".replace("%1", missingColors.join(", ")).replace("%2", name));
            return map;
        }
        function registerTheme(name, inheritFrom) {
            if (inheritFrom = inheritFrom || "default", THEMES[name]) return THEMES[name];
            var parentTheme = "string" == typeof inheritFrom ? THEMES[inheritFrom] : inheritFrom, theme = new Theme(name);
            return parentTheme && angular.forEach(parentTheme.colors, function(color, colorType) {
                theme.colors[colorType] = {
                    name: color.name,
                    hues: angular.extend({}, color.hues)
                };
            }), THEMES[name] = theme, theme;
        }
        function Theme(name) {
            function setDark(isDark) {
                if (isDark = 0 === arguments.length ? !0 : !!isDark, isDark !== self.isDark) {
                    self.isDark = isDark, self.foregroundPalette = self.isDark ? LIGHT_FOREGROUND : DARK_FOREGROUND, 
                    self.foregroundShadow = self.isDark ? DARK_SHADOW : LIGHT_SHADOW;
                    var newDefaultHues = self.isDark ? DARK_DEFAULT_HUES : LIGHT_DEFAULT_HUES, oldDefaultHues = self.isDark ? LIGHT_DEFAULT_HUES : DARK_DEFAULT_HUES;
                    return angular.forEach(newDefaultHues, function(newDefaults, colorType) {
                        var color = self.colors[colorType], oldDefaults = oldDefaultHues[colorType];
                        if (color) for (var hueName in color.hues) color.hues[hueName] === oldDefaults[hueName] && (color.hues[hueName] = newDefaults[hueName]);
                    }), self;
                }
            }
            var self = this;
            self.name = name, self.colors = {}, self.dark = setDark, setDark(!1), THEME_COLOR_TYPES.forEach(function(colorType) {
                var defaultHues = (self.isDark ? DARK_DEFAULT_HUES : LIGHT_DEFAULT_HUES)[colorType];
                self[colorType + "Color"] = function(paletteName, hues) {
                    var color = self.colors[colorType] = {
                        name: paletteName,
                        hues: angular.extend({}, defaultHues, hues)
                    };
                    return Object.keys(color.hues).forEach(function(name) {
                        if (!defaultHues[name]) throw new Error("Invalid hue name '%1' in theme %2's %3 color %4. Available hue names: %4".replace("%1", name).replace("%2", self.name).replace("%3", paletteName).replace("%4", Object.keys(defaultHues).join(", ")));
                    }), Object.keys(color.hues).map(function(key) {
                        return color.hues[key];
                    }).forEach(function(hueValue) {
                        if (-1 == VALID_HUE_VALUES.indexOf(hueValue)) throw new Error("Invalid hue value '%1' in theme %2's %3 color %4. Available hue values: %5".replace("%1", hueValue).replace("%2", self.name).replace("%3", colorType).replace("%4", paletteName).replace("%5", VALID_HUE_VALUES.join(", ")));
                    }), self;
                };
            });
        }
        function ThemingService($rootScope) {
            function applyTheme(scope, el) {
                void 0 === el && (el = scope, scope = void 0), void 0 === scope && (scope = $rootScope), 
                applyTheme.inherit(el, el);
            }
            return applyTheme.inherit = function(el, parent) {
                function changeTheme(theme) {
                    var oldTheme = el.data("$mdThemeName");
                    oldTheme && el.removeClass("md-" + oldTheme + "-theme"), el.addClass("md-" + theme + "-theme"), 
                    el.data("$mdThemeName", theme);
                }
                var ctrl = parent.controller("mdTheme"), attrThemeValue = el.attr("md-theme-watch");
                if ((alwaysWatchTheme || angular.isDefined(attrThemeValue)) && "false" != attrThemeValue) {
                    var deregisterWatch = $rootScope.$watch(function() {
                        return ctrl && ctrl.$mdTheme || defaultTheme;
                    }, changeTheme);
                    el.on("$destroy", deregisterWatch);
                } else {
                    var theme = ctrl && ctrl.$mdTheme || defaultTheme;
                    changeTheme(theme);
                }
            }, applyTheme;
        }
        PALETTES = {}, THEMES = {};
        var defaultTheme = "default", alwaysWatchTheme = !1;
        return angular.extend(PALETTES, $mdColorPalette), ThemingService.$inject = [ "$rootScope" ], 
        themingProvider = {
            definePalette: definePalette,
            extendPalette: extendPalette,
            theme: registerTheme,
            setDefaultTheme: function(theme) {
                defaultTheme = theme;
            },
            alwaysWatchTheme: function(alwaysWatch) {
                alwaysWatchTheme = alwaysWatch;
            },
            $get: ThemingService,
            _LIGHT_DEFAULT_HUES: LIGHT_DEFAULT_HUES,
            _DARK_DEFAULT_HUES: DARK_DEFAULT_HUES,
            _PALETTES: PALETTES,
            _THEMES: THEMES,
            _parseRules: parseRules,
            _rgba: rgba
        };
    }
    function ThemingDirective($interpolate) {
        return {
            priority: 100,
            link: {
                pre: function(scope, el, attrs) {
                    var ctrl = {
                        $setTheme: function(theme) {
                            ctrl.$mdTheme = theme;
                        }
                    };
                    el.data("$mdThemeController", ctrl), ctrl.$setTheme($interpolate(attrs.mdTheme)(scope)), 
                    attrs.$observe("mdTheme", ctrl.$setTheme);
                }
            }
        };
    }
    function ThemableDirective($mdTheming) {
        return $mdTheming;
    }
    function parseRules(theme, colorType, rules) {
        checkValidPalette(theme, colorType), rules = rules.replace(/THEME_NAME/g, theme.name);
        var generatedRules = [], color = theme.colors[colorType], themeNameRegex = new RegExp(".md-" + theme.name + "-theme", "g"), hueRegex = new RegExp("('|\")?{{\\s*(" + colorType + ")-(color|contrast)-?(\\d\\.?\\d*)?\\s*}}(\"|')?", "g"), simpleVariableRegex = /'?"?\{\{\s*([a-zA-Z]+)-(A?\d+|hue\-[0-3]|shadow)-?(\d\.?\d*)?\s*\}\}'?"?/g, palette = PALETTES[color.name];
        return rules = rules.replace(simpleVariableRegex, function(match, colorType, hue, opacity) {
            return "foreground" === colorType ? "shadow" == hue ? theme.foregroundShadow : theme.foregroundPalette[hue] || theme.foregroundPalette[1] : (0 === hue.indexOf("hue") && (hue = theme.colors[colorType].hues[hue]), 
            rgba((PALETTES[theme.colors[colorType].name][hue] || "").value, opacity));
        }), angular.forEach(color.hues, function(hueValue, hueName) {
            var newRule = rules.replace(hueRegex, function(match, _, colorType, hueType, opacity) {
                return rgba(palette[hueValue]["color" === hueType ? "value" : "contrast"], opacity);
            });
            "default" !== hueName && (newRule = newRule.replace(themeNameRegex, ".md-" + theme.name + "-theme.md-" + hueName)), 
            generatedRules.push(newRule);
        }), generatedRules.join("");
    }
    function generateThemes($injector) {
        function sanitizePalette(palette) {
            var defaultContrast = palette.contrastDefaultColor, lightColors = palette.contrastLightColors || [], darkColors = palette.contrastDarkColors || [];
            "string" == typeof lightColors && (lightColors = lightColors.split(" ")), "string" == typeof darkColors && (darkColors = darkColors.split(" ")), 
            delete palette.contrastDefaultColor, delete palette.contrastLightColors, delete palette.contrastDarkColors, 
            angular.forEach(palette, function(hueValue, hueName) {
                function getContrastColor() {
                    return "light" === defaultContrast ? darkColors.indexOf(hueName) > -1 ? DARK_CONTRAST_COLOR : LIGHT_CONTRAST_COLOR : lightColors.indexOf(hueName) > -1 ? LIGHT_CONTRAST_COLOR : DARK_CONTRAST_COLOR;
                }
                if (!angular.isObject(hueValue)) {
                    var rgbValue = colorToRgbaArray(hueValue);
                    if (!rgbValue) throw new Error("Color %1, in palette %2's hue %3, is invalid. Hex or rgb(a) color expected.".replace("%1", hueValue).replace("%2", palette.name).replace("%3", hueName));
                    palette[hueName] = {
                        value: rgbValue,
                        contrast: getContrastColor()
                    };
                }
            });
        }
        var themeCss = $injector.has("$MD_THEME_CSS") ? $injector.get("$MD_THEME_CSS") : "";
        angular.forEach(PALETTES, sanitizePalette);
        var rules = themeCss.split(/\}(?!(\}|'|"|;))/).filter(function(rule) {
            return rule && rule.length;
        }).map(function(rule) {
            return rule.trim() + "}";
        }), rulesByType = {};
        THEME_COLOR_TYPES.forEach(function(type) {
            rulesByType[type] = "";
        });
        var ruleMatchRegex = new RegExp("md-(" + THEME_COLOR_TYPES.join("|") + ")", "g");
        rules.forEach(function(rule) {
            for (var type, i = (rule.match(ruleMatchRegex), 0); type = THEME_COLOR_TYPES[i]; i++) if (rule.indexOf(".md-" + type) > -1) return rulesByType[type] += rule;
            for (i = 0; type = THEME_COLOR_TYPES[i]; i++) if (rule.indexOf(type) > -1) return rulesByType[type] += rule;
            return rulesByType[DEFAULT_COLOR_TYPE] += rule;
        });
        var styleString = "";
        if (angular.forEach(THEMES, function(theme) {
            THEME_COLOR_TYPES.forEach(function(colorType) {
                styleString += parseRules(theme, colorType, rulesByType[colorType] + "");
            });
        }), !generationIsDone) {
            var style = document.createElement("style");
            style.innerHTML = styleString;
            var head = document.getElementsByTagName("head")[0];
            head.insertBefore(style, head.firstElementChild), generationIsDone = !0;
        }
    }
    function checkValidPalette(theme, colorType) {
        if (!PALETTES[(theme.colors[colorType] || {}).name]) throw new Error("You supplied an invalid color palette for theme %1's %2 palette. Available palettes: %3".replace("%1", theme.name).replace("%2", colorType).replace("%3", Object.keys(PALETTES).join(", ")));
    }
    function colorToRgbaArray(clr) {
        if (angular.isArray(clr) && 3 == clr.length) return clr;
        if (/^rgb/.test(clr)) return clr.replace(/(^\s*rgba?\(|\)\s*$)/g, "").split(",").map(function(value) {
            return parseInt(value, 10);
        });
        if ("#" == clr.charAt(0) && (clr = clr.substring(1)), /^([a-fA-F0-9]{3}){1,2}$/g.test(clr)) {
            var dig = clr.length / 3, red = clr.substr(0, dig), grn = clr.substr(dig, dig), blu = clr.substr(2 * dig);
            return 1 === dig && (red += red, grn += grn, blu += blu), [ parseInt(red, 16), parseInt(grn, 16), parseInt(blu, 16) ];
        }
    }
    function rgba(rgbArray, opacity) {
        return 4 == rgbArray.length && (opacity = rgbArray.pop()), opacity && opacity.length ? "rgba(" + rgbArray.join(",") + "," + opacity + ")" : "rgb(" + rgbArray.join(",") + ")";
    }
    angular.module("material.core.theming", [ "material.core.theming.palette" ]).directive("mdTheme", ThemingDirective).directive("mdThemable", ThemableDirective).provider("$mdTheming", ThemingProvider).run(generateThemes);
    var PALETTES, THEMES, themingProvider, generationIsDone, DARK_FOREGROUND = {
        name: "dark",
        "1": "rgba(0,0,0,0.87)",
        "2": "rgba(0,0,0,0.54)",
        "3": "rgba(0,0,0,0.26)",
        "4": "rgba(0,0,0,0.12)"
    }, LIGHT_FOREGROUND = {
        name: "light",
        "1": "rgba(255,255,255,1.0)",
        "2": "rgba(255,255,255,0.7)",
        "3": "rgba(255,255,255,0.3)",
        "4": "rgba(255,255,255,0.12)"
    }, DARK_SHADOW = "1px 1px 0px rgba(0,0,0,0.4), -1px -1px 0px rgba(0,0,0,0.4)", LIGHT_SHADOW = "", DARK_CONTRAST_COLOR = colorToRgbaArray("rgba(0,0,0,0.87)"), LIGHT_CONTRAST_COLOR = colorToRgbaArray("rgb(255,255,255)"), THEME_COLOR_TYPES = [ "primary", "accent", "warn", "background" ], DEFAULT_COLOR_TYPE = "primary", LIGHT_DEFAULT_HUES = {
        accent: {
            "default": "A700",
            "hue-1": "A200",
            "hue-2": "A400",
            "hue-3": "A100"
        }
    }, DARK_DEFAULT_HUES = {
        background: {
            "default": "500",
            "hue-1": "300",
            "hue-2": "600",
            "hue-3": "800"
        }
    };
    THEME_COLOR_TYPES.forEach(function(colorType) {
        var defaultDefaultHues = {
            "default": "500",
            "hue-1": "300",
            "hue-2": "800",
            "hue-3": "A100"
        };
        LIGHT_DEFAULT_HUES[colorType] || (LIGHT_DEFAULT_HUES[colorType] = defaultDefaultHues), 
        DARK_DEFAULT_HUES[colorType] || (DARK_DEFAULT_HUES[colorType] = defaultDefaultHues);
    });
    var VALID_HUE_VALUES = [ "50", "100", "200", "300", "400", "500", "600", "700", "800", "900", "A100", "A200", "A400", "A700" ];
    ThemingProvider.$inject = [ "$mdColorPalette" ], ThemingDirective.$inject = [ "$interpolate" ], 
    ThemableDirective.$inject = [ "$mdTheming" ], generateThemes.$inject = [ "$injector" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function BackdropDirective($mdTheming) {
        return $mdTheming;
    }
    angular.module("material.components.backdrop", [ "material.core" ]).directive("mdBackdrop", BackdropDirective), 
    BackdropDirective.$inject = [ "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdBottomSheetDirective() {
        return {
            restrict: "E"
        };
    }
    function MdBottomSheetProvider($$interimElementProvider) {
        function bottomSheetDefaults($animate, $mdConstant, $timeout, $$rAF, $compile, $mdTheming, $mdBottomSheet, $rootElement) {
            function onShow(scope, element, options) {
                backdrop = $compile('<md-backdrop class="md-opaque md-bottom-sheet-backdrop">')(scope), 
                backdrop.on("click touchstart", function() {
                    $timeout($mdBottomSheet.cancel);
                }), $mdTheming.inherit(backdrop, options.parent), $animate.enter(backdrop, options.parent, null);
                var bottomSheet = new BottomSheet(element);
                return options.bottomSheet = bottomSheet, options.targetEvent && angular.element(options.targetEvent.target).blur(), 
                $mdTheming.inherit(bottomSheet.element, options.parent), $animate.enter(bottomSheet.element, options.parent).then(function() {
                    var focusable = angular.element(element[0].querySelector("button") || element[0].querySelector("a") || element[0].querySelector("[ng-click]"));
                    focusable.focus(), options.escapeToClose && (options.rootElementKeyupCallback = function(e) {
                        e.keyCode === $mdConstant.KEY_CODE.ESCAPE && $timeout($mdBottomSheet.cancel);
                    }, $rootElement.on("keyup", options.rootElementKeyupCallback));
                });
            }
            function onRemove(scope, element, options) {
                var bottomSheet = options.bottomSheet;
                return $animate.leave(backdrop), $animate.leave(bottomSheet.element).then(function() {
                    bottomSheet.cleanup(), options.targetEvent && angular.element(options.targetEvent.target).focus();
                });
            }
            function BottomSheet(element) {
                function onTouchStart(e) {
                    e.preventDefault(), startTarget = e.target, startY = getY(e), transitionDelay = element.css($mdConstant.CSS.TRANSITION_DURATION), 
                    element.css($mdConstant.CSS.TRANSITION_DURATION, "0s");
                }
                function onTouchEnd(e) {
                    element.css($mdConstant.CSS.TRANSITION_DURATION, transitionDelay);
                    var currentY = getY(e);
                    Math.abs(currentY - startY) < 5 && e.target == startTarget ? angular.element(e.target).triggerHandler("click") : velocity > CLOSING_VELOCITY ? $timeout($mdBottomSheet.cancel) : setTransformY(void 0);
                }
                function onTouchMove(e) {
                    var currentY = getY(e), delta = currentY - startY;
                    velocity = currentY - lastY, lastY = currentY, delta = adjustedDelta(delta), setTransformY(delta + MAX_OFFSET);
                }
                function getY(e) {
                    var touch = e.touches && e.touches.length ? e.touches[0] : e.changedTouches[0];
                    return touch.clientY;
                }
                function setTransformY(amt) {
                    null === amt || void 0 === amt ? element.css($mdConstant.CSS.TRANSFORM, "") : element.css($mdConstant.CSS.TRANSFORM, "translate3d(0, " + amt + "px, 0)");
                }
                function adjustedDelta(delta) {
                    if (0 > delta && -MAX_OFFSET + WIGGLE_AMOUNT > delta) {
                        delta = -delta;
                        var base = MAX_OFFSET - WIGGLE_AMOUNT;
                        delta = Math.max(-MAX_OFFSET, -Math.min(MAX_OFFSET - 5, base + WIGGLE_AMOUNT * (delta - base) / MAX_OFFSET) - delta / 50);
                    }
                    return delta;
                }
                var startY, lastY, velocity, transitionDelay, startTarget, MAX_OFFSET = 80, WIGGLE_AMOUNT = 20, CLOSING_VELOCITY = 10;
                return element = element.eq(0), element.on("touchstart", onTouchStart).on("touchmove", onTouchMove).on("touchend", onTouchEnd), 
                {
                    element: element,
                    cleanup: function() {
                        element.off("touchstart", onTouchStart).off("touchmove", onTouchMove).off("touchend", onTouchEnd);
                    }
                };
            }
            var backdrop;
            return {
                themable: !0,
                targetEvent: null,
                onShow: onShow,
                onRemove: onRemove,
                escapeToClose: !0
            };
        }
        return bottomSheetDefaults.$inject = [ "$animate", "$mdConstant", "$timeout", "$$rAF", "$compile", "$mdTheming", "$mdBottomSheet", "$rootElement" ], 
        $$interimElementProvider("$mdBottomSheet").setDefaults({
            options: bottomSheetDefaults
        });
    }
    angular.module("material.components.bottomSheet", [ "material.core", "material.components.backdrop" ]).directive("mdBottomSheet", MdBottomSheetDirective).provider("$mdBottomSheet", MdBottomSheetProvider), 
    MdBottomSheetProvider.$inject = [ "$$interimElementProvider" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdButtonDirective($mdInkRipple, $mdTheming, $mdAria) {
        function isAnchor(attr) {
            return angular.isDefined(attr.href) || angular.isDefined(attr.ngHref);
        }
        function getTemplate(element, attr) {
            return isAnchor(attr) ? '<a class="md-button" ng-transclude></a>' : '<button class="md-button" ng-transclude></button>';
        }
        function postLink(scope, element, attr) {
            var node = element[0];
            $mdTheming(element), $mdInkRipple.attachButtonBehavior(scope, element);
            var elementHasText = node.textContent.trim();
            elementHasText || $mdAria.expect(element, "aria-label"), isAnchor(attr) && angular.isDefined(attr.ngDisabled) && scope.$watch(attr.ngDisabled, function(isDisabled) {
                element.attr("tabindex", isDisabled ? -1 : 0);
            });
        }
        return {
            restrict: "E",
            replace: !0,
            transclude: !0,
            template: getTemplate,
            link: postLink
        };
    }
    angular.module("material.components.button", [ "material.core" ]).directive("mdButton", MdButtonDirective), 
    MdButtonDirective.$inject = [ "$mdInkRipple", "$mdTheming", "$mdAria" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdCheckboxDirective(inputDirective, $mdInkRipple, $mdAria, $mdConstant, $mdTheming, $mdUtil) {
        function compile(tElement, tAttrs) {
            return tAttrs.type = "checkbox", tAttrs.tabIndex = 0, tElement.attr("role", tAttrs.type), 
            function(scope, element, attr, ngModelCtrl) {
                function keypressHandler(ev) {
                    ev.which === $mdConstant.KEY_CODE.SPACE && (ev.preventDefault(), listener(ev));
                }
                function listener(ev) {
                    element[0].hasAttribute("disabled") || scope.$apply(function() {
                        checked = !checked, ngModelCtrl.$setViewValue(checked, ev && ev.type), ngModelCtrl.$render();
                    });
                }
                function render() {
                    checked = ngModelCtrl.$viewValue, checked ? element.addClass(CHECKED_CSS) : element.removeClass(CHECKED_CSS);
                }
                ngModelCtrl = ngModelCtrl || $mdUtil.fakeNgModel();
                var checked = !1;
                $mdTheming(element), $mdAria.expectWithText(tElement, "aria-label"), inputDirective.link.pre(scope, {
                    on: angular.noop,
                    0: {}
                }, attr, [ ngModelCtrl ]), attr.mdNoClick || element.on("click", listener), element.on("keypress", keypressHandler), 
                ngModelCtrl.$render = render;
            };
        }
        inputDirective = inputDirective[0];
        var CHECKED_CSS = "md-checked";
        return {
            restrict: "E",
            transclude: !0,
            require: "?ngModel",
            template: '<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',
            compile: compile
        };
    }
    angular.module("material.components.checkbox", [ "material.core" ]).directive("mdCheckbox", MdCheckboxDirective), 
    MdCheckboxDirective.$inject = [ "inputDirective", "$mdInkRipple", "$mdAria", "$mdConstant", "$mdTheming", "$mdUtil" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdCardDirective($mdTheming) {
        return {
            restrict: "E",
            link: function($scope, $element) {
                $mdTheming($element);
            }
        };
    }
    angular.module("material.components.card", [ "material.core" ]).directive("mdCard", mdCardDirective), 
    mdCardDirective.$inject = [ "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdContentDirective($mdTheming) {
        function ContentController($scope, $element) {
            this.$scope = $scope, this.$element = $element;
        }
        return {
            restrict: "E",
            controller: [ "$scope", "$element", ContentController ],
            link: function($scope, $element) {
                $mdTheming($element), $scope.$broadcast("$mdContentLoaded", $element);
            }
        };
    }
    angular.module("material.components.content", [ "material.core" ]).directive("mdContent", mdContentDirective), 
    mdContentDirective.$inject = [ "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdDialogDirective($$rAF, $mdTheming) {
        return {
            restrict: "E",
            link: function(scope, element) {
                $mdTheming(element), $$rAF(function() {
                    var content = element[0].querySelector("md-content");
                    content && content.scrollHeight > content.clientHeight && element.addClass("md-content-overflow");
                });
            }
        };
    }
    function MdDialogProvider($$interimElementProvider) {
        function advancedDialogOptions($mdDialog) {
            return {
                template: [ '<md-dialog aria-label="{{ dialog.ariaLabel }}">', "<md-content>", "<h2>{{ dialog.title }}</h2>", "<p>{{ dialog.content }}</p>", "</md-content>", '<div class="md-actions">', '<md-button ng-if="dialog.$type == \'confirm\'" ng-click="dialog.abort()">', "{{ dialog.cancel }}", "</md-button>", '<md-button ng-click="dialog.hide()" class="md-primary">', "{{ dialog.ok }}", "</md-button>", "</div>", "</md-dialog>" ].join(""),
                controller: function() {
                    this.hide = function() {
                        $mdDialog.hide(!0);
                    }, this.abort = function() {
                        $mdDialog.cancel();
                    };
                },
                controllerAs: "dialog",
                bindToController: !0
            };
        }
        function dialogDefaultOptions($timeout, $rootElement, $compile, $animate, $mdAria, $document, $mdUtil, $mdConstant, $mdTheming, $$rAF, $q, $mdDialog) {
            function onShow(scope, element, options) {
                function findCloseButton() {
                    var closeButton = element[0].querySelector(".dialog-close");
                    if (!closeButton) {
                        var actionButtons = element[0].querySelectorAll(".md-actions button");
                        closeButton = actionButtons[actionButtons.length - 1];
                    }
                    return angular.element(closeButton);
                }
                options.parent = angular.element(options.parent), options.popInTarget = angular.element((options.targetEvent || {}).target);
                var closeButton = findCloseButton();
                return configureAria(element.find("md-dialog")), options.hasBackdrop && (options.backdrop = angular.element('<md-backdrop class="md-dialog-backdrop md-opaque">'), 
                $mdTheming.inherit(options.backdrop, options.parent), $animate.enter(options.backdrop, options.parent)), 
                options.disableParentScroll && (options.oldOverflowStyle = options.parent.css("overflow"), 
                options.parent.css("overflow", "hidden")), dialogPopIn(element, options.parent, options.popInTarget && options.popInTarget.length && options.popInTarget).then(function() {
                    options.escapeToClose && (options.rootElementKeyupCallback = function(e) {
                        e.keyCode === $mdConstant.KEY_CODE.ESCAPE && $timeout($mdDialog.cancel);
                    }, $rootElement.on("keyup", options.rootElementKeyupCallback)), options.clickOutsideToClose && (options.dialogClickOutsideCallback = function(e) {
                        e.target === element[0] && $timeout($mdDialog.cancel);
                    }, element.on("click", options.dialogClickOutsideCallback)), closeButton.focus();
                });
            }
            function onRemove(scope, element, options) {
                return options.backdrop && $animate.leave(options.backdrop), options.disableParentScroll && (options.parent.css("overflow", options.oldOverflowStyle), 
                $document[0].removeEventListener("scroll", options.captureScroll, !0)), options.escapeToClose && $rootElement.off("keyup", options.rootElementKeyupCallback), 
                options.clickOutsideToClose && element.off("click", options.dialogClickOutsideCallback), 
                dialogPopOut(element, options.parent, options.popInTarget && options.popInTarget.length && options.popInTarget).then(function() {
                    options.scope.$destroy(), element.remove(), options.popInTarget && options.popInTarget.focus();
                });
            }
            function configureAria(element) {
                element.attr({
                    role: "dialog"
                });
                var dialogContent = element.find("md-content");
                0 === dialogContent.length && (dialogContent = element), $mdAria.expectAsync(element, "aria-label", function() {
                    var words = dialogContent.text().split(/\s+/);
                    return words.length > 3 && (words = words.slice(0, 3).concat("...")), words.join(" ");
                });
            }
            function dialogPopIn(container, parentElement, clickElement) {
                var dialogEl = container.find("md-dialog");
                return parentElement.append(container), transformToClickElement(dialogEl, clickElement), 
                $$rAF(function() {
                    dialogEl.addClass("transition-in").css($mdConstant.CSS.TRANSFORM, "");
                }), dialogTransitionEnd(dialogEl);
            }
            function dialogPopOut(container, parentElement, clickElement) {
                var dialogEl = container.find("md-dialog");
                return dialogEl.addClass("transition-out").removeClass("transition-in"), transformToClickElement(dialogEl, clickElement), 
                dialogTransitionEnd(dialogEl);
            }
            function transformToClickElement(dialogEl, clickElement) {
                if (clickElement) {
                    var clickRect = clickElement[0].getBoundingClientRect(), dialogRect = dialogEl[0].getBoundingClientRect(), scaleX = Math.min(.5, clickRect.width / dialogRect.width), scaleY = Math.min(.5, clickRect.height / dialogRect.height);
                    dialogEl.css($mdConstant.CSS.TRANSFORM, "translate3d(" + (-dialogRect.left + clickRect.left + clickRect.width / 2 - dialogRect.width / 2) + "px," + (-dialogRect.top + clickRect.top + clickRect.height / 2 - dialogRect.height / 2) + "px,0) scale(" + scaleX + "," + scaleY + ")");
                }
            }
            function dialogTransitionEnd(dialogEl) {
                function finished(ev) {
                    ev.target === dialogEl[0] && (dialogEl.off($mdConstant.CSS.TRANSITIONEND, finished), 
                    deferred.resolve());
                }
                var deferred = $q.defer();
                return dialogEl.on($mdConstant.CSS.TRANSITIONEND, finished), deferred.promise;
            }
            return {
                hasBackdrop: !0,
                isolateScope: !0,
                onShow: onShow,
                onRemove: onRemove,
                clickOutsideToClose: !0,
                escapeToClose: !0,
                targetEvent: null,
                disableParentScroll: !0,
                transformTemplate: function(template) {
                    return '<div class="md-dialog-container">' + template + "</div>";
                }
            };
        }
        return advancedDialogOptions.$inject = [ "$mdDialog" ], dialogDefaultOptions.$inject = [ "$timeout", "$rootElement", "$compile", "$animate", "$mdAria", "$document", "$mdUtil", "$mdConstant", "$mdTheming", "$$rAF", "$q", "$mdDialog" ], 
        $$interimElementProvider("$mdDialog").setDefaults({
            methods: [ "disableParentScroll", "hasBackdrop", "clickOutsideToClose", "escapeToClose", "targetEvent" ],
            options: dialogDefaultOptions
        }).addPreset("alert", {
            methods: [ "title", "content", "ariaLabel", "ok" ],
            options: advancedDialogOptions
        }).addPreset("confirm", {
            methods: [ "title", "content", "ariaLabel", "ok", "cancel" ],
            options: advancedDialogOptions
        });
    }
    angular.module("material.components.dialog", [ "material.core", "material.components.backdrop" ]).directive("mdDialog", MdDialogDirective).provider("$mdDialog", MdDialogProvider), 
    MdDialogDirective.$inject = [ "$$rAF", "$mdTheming" ], MdDialogProvider.$inject = [ "$$interimElementProvider" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdDividerController() {}
    function MdDividerDirective($mdTheming) {
        return {
            restrict: "E",
            link: $mdTheming,
            controller: [ MdDividerController ]
        };
    }
    angular.module("material.components.divider", [ "material.core" ]).directive("mdDivider", MdDividerDirective), 
    MdDividerDirective.$inject = [ "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdIconDirective() {
        return {
            restrict: "E",
            template: '<object class="md-icon"></object>',
            compile: function(element, attr) {
                var object = angular.element(element[0].children[0]);
                angular.isDefined(attr.icon) && object.attr("data", attr.icon);
            }
        };
    }
    angular.module("material.components.icon", [ "material.core" ]).directive("mdIcon", mdIconDirective);
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    function mdInputContainerDirective($mdTheming) {
        function postLink(scope, element) {
            $mdTheming(element);
        }
        function ContainerCtrl($scope, $element) {
            var self = this;
            self.element = $element, self.setFocused = function(isFocused) {
                $element.toggleClass("md-input-focused", !!isFocused);
            }, self.setHasValue = function(hasValue) {
                $element.toggleClass("md-input-has-value", !!hasValue);
            }, self.setInvalid = function(isInvalid) {
                $element.toggleClass("md-input-invalid", !!isInvalid);
            }, $scope.$watch(function() {
                return self.label && self.input;
            }, function(hasLabelAndInput) {
                hasLabelAndInput && !self.label.attr("for") && self.label.attr("for", self.input.attr("id"));
            });
        }
        return ContainerCtrl.$inject = [ "$scope", "$element", "$mdUtil" ], {
            restrict: "E",
            link: postLink,
            controller: ContainerCtrl
        };
    }
    function labelDirective() {
        return {
            restrict: "E",
            require: "^?mdInputContainer",
            link: function(scope, element, attr, containerCtrl) {
                containerCtrl && (containerCtrl.label = element, scope.$on("$destroy", function() {
                    containerCtrl.label = null;
                }));
            }
        };
    }
    function inputTextareaDirective($mdUtil, $window) {
        function postLink(scope, element, attr, ctrls) {
            function checkHasValue(value) {
                return containerCtrl.setHasValue(!isEmpty(value) || (element[0].validity || {}).badInput), 
                value;
            }
            function setupTextarea() {
                function pipelineListener(value) {
                    return onChangeTextarea(), value;
                }
                function growTextarea() {
                    node.style.height = "auto";
                    var line = node.scrollHeight - node.offsetHeight;
                    node.scrollTop = 0;
                    var height = node.offsetHeight + (line > 0 ? line : 0);
                    node.style.height = height + "px";
                }
                function onScroll() {
                    node.scrollTop = 0;
                    var line = node.scrollHeight - node.offsetHeight, height = node.offsetHeight + line;
                    node.style.height = height + "px";
                }
                var node = element[0], onChangeTextarea = $mdUtil.debounce(growTextarea, 1);
                ngModelCtrl ? (ngModelCtrl.$formatters.push(pipelineListener), ngModelCtrl.$viewChangeListeners.push(pipelineListener)) : onChangeTextarea(), 
                element.on("keydown input", onChangeTextarea), element.on("scroll", onScroll), angular.element($window).on("resize", onChangeTextarea), 
                scope.$on("$destroy", function() {
                    angular.element($window).off("resize", onChangeTextarea);
                });
            }
            var containerCtrl = ctrls[0], ngModelCtrl = ctrls[1];
            if (containerCtrl) {
                if (containerCtrl.input) throw new Error("<md-input-container> can only have *one* <input> or <textarea> child element!");
                containerCtrl.input = element, element.addClass("md-input"), element.attr("id") || element.attr("id", "input_" + $mdUtil.nextUid()), 
                "textarea" === element[0].tagName.toLowerCase() && setupTextarea();
                var isEmpty = ngModelCtrl ? ngModelCtrl.$isEmpty : function() {
                    return 0 === ("" + element.val()).length;
                };
                ngModelCtrl ? (scope.$watch(function() {
                    return ngModelCtrl.$dirty && ngModelCtrl.$invalid;
                }, containerCtrl.setInvalid), ngModelCtrl.$formatters.push(checkHasValue), ngModelCtrl.$parsers.push(checkHasValue)) : checkHasValue(), 
                element.on("input", checkHasValue), element.on("focus", function() {
                    containerCtrl.setFocused(!0);
                }).on("blur", function() {
                    containerCtrl.setFocused(!1);
                }), scope.$on("$destroy", function() {
                    containerCtrl.setFocused(!1), containerCtrl.setHasValue(!1), containerCtrl.input = null;
                });
            }
        }
        return {
            restrict: "E",
            require: [ "^?mdInputContainer", "?ngModel" ],
            link: postLink
        };
    }
    function mdMaxlengthDirective($animate) {
        function postLink(scope, element, attr, ctrls) {
            function renderCharCount(value) {
                return charCountEl.text((element.val() || value || "").length + "/" + maxlength), 
                value;
            }
            var maxlength, ngModelCtrl = ctrls[0], containerCtrl = ctrls[1], charCountEl = angular.element('<div class="md-char-counter">');
            attr.$set("ngTrim", "false"), containerCtrl.element.append(charCountEl), ngModelCtrl.$formatters.push(renderCharCount), 
            ngModelCtrl.$viewChangeListeners.push(renderCharCount), element.on("input keydown", function() {
                renderCharCount();
            }), scope.$watch(attr.mdMaxlength, function(value) {
                maxlength = value, angular.isNumber(value) && value > 0 ? (charCountEl.parent().length || $animate.enter(charCountEl, containerCtrl.element, angular.element(containerCtrl.element[0].lastElementChild)), 
                renderCharCount()) : $animate.leave(charCountEl);
            }), ngModelCtrl.$validators["md-maxlength"] = function(modelValue, viewValue) {
                return !angular.isNumber(maxlength) || 0 > maxlength ? !0 : (modelValue || element.val() || viewValue || "").length <= maxlength;
            };
        }
        return {
            restrict: "A",
            require: [ "ngModel", "^mdInputContainer" ],
            link: postLink
        };
    }
    angular.module("material.components.input", [ "material.core" ]).directive("mdInputContainer", mdInputContainerDirective).directive("label", labelDirective).directive("input", inputTextareaDirective).directive("textarea", inputTextareaDirective).directive("mdMaxlength", mdMaxlengthDirective), 
    mdInputContainerDirective.$inject = [ "$mdTheming" ], inputTextareaDirective.$inject = [ "$mdUtil", "$window", "$compile", "$animate" ], 
    mdMaxlengthDirective.$inject = [ "$animate" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdListDirective() {
        return {
            restrict: "E",
            link: function($scope, $element) {
                $element.attr({
                    role: "list"
                });
            }
        };
    }
    function mdItemDirective() {
        return {
            restrict: "E",
            link: function($scope, $element) {
                $element.attr({
                    role: "listitem"
                });
            }
        };
    }
    angular.module("material.components.list", [ "material.core" ]).directive("mdList", mdListDirective).directive("mdItem", mdItemDirective);
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdProgressCircularDirective($$rAF, $mdConstant, $mdTheming) {
        function compile(tElement) {
            return tElement.attr("aria-valuemin", 0), tElement.attr("aria-valuemax", 100), tElement.attr("role", "progressbar"), 
            postLink;
        }
        function postLink(scope, element, attr) {
            $mdTheming(element);
            var i, clamped, fillRotation, fixRotation, circle = element[0], fill = circle.querySelectorAll(".md-fill, .md-mask.md-full"), fix = circle.querySelectorAll(".md-fill.md-fix"), diameter = attr.mdDiameter || 48, scale = diameter / 48;
            circle.style[$mdConstant.CSS.TRANSFORM] = "scale(" + scale.toString() + ")", attr.$observe("value", function(value) {
                for (clamped = clamp(value), fillRotation = fillRotations[clamped], fixRotation = fixRotations[clamped], 
                element.attr("aria-valuenow", clamped), i = 0; i < fill.length; i++) fill[i].style[$mdConstant.CSS.TRANSFORM] = fillRotation;
                for (i = 0; i < fix.length; i++) fix[i].style[$mdConstant.CSS.TRANSFORM] = fixRotation;
            });
        }
        function clamp(value) {
            return value > 100 ? 100 : 0 > value ? 0 : Math.ceil(value || 0);
        }
        for (var fillRotations = new Array(101), fixRotations = new Array(101), i = 0; 101 > i; i++) {
            var percent = i / 100, rotation = Math.floor(180 * percent);
            fillRotations[i] = "rotate(" + rotation.toString() + "deg)", fixRotations[i] = "rotate(" + (2 * rotation).toString() + "deg)";
        }
        return {
            restrict: "E",
            template: '<div class="md-spinner-wrapper"><div class="md-inner"><div class="md-gap"></div><div class="md-left"><div class="md-half-circle"></div></div><div class="md-right"><div class="md-half-circle"></div></div></div></div>',
            compile: compile
        };
    }
    angular.module("material.components.progressCircular", [ "material.core" ]).directive("mdProgressCircular", MdProgressCircularDirective), 
    MdProgressCircularDirective.$inject = [ "$$rAF", "$mdConstant", "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdProgressLinearDirective($$rAF, $mdConstant, $mdTheming) {
        function compile(tElement) {
            return tElement.attr("aria-valuemin", 0), tElement.attr("aria-valuemax", 100), tElement.attr("role", "progressbar"), 
            postLink;
        }
        function postLink(scope, element, attr) {
            $mdTheming(element);
            var bar1Style = element[0].querySelector(".md-bar1").style, bar2Style = element[0].querySelector(".md-bar2").style, container = angular.element(element[0].querySelector(".md-container"));
            attr.$observe("value", function(value) {
                if ("query" != attr.mdMode) {
                    var clamped = clamp(value);
                    element.attr("aria-valuenow", clamped), bar2Style[$mdConstant.CSS.TRANSFORM] = transforms[clamped];
                }
            }), attr.$observe("mdBufferValue", function(value) {
                bar1Style[$mdConstant.CSS.TRANSFORM] = transforms[clamp(value)];
            }), $$rAF(function() {
                container.addClass("md-ready");
            });
        }
        function clamp(value) {
            return value > 100 ? 100 : 0 > value ? 0 : Math.ceil(value || 0);
        }
        return {
            restrict: "E",
            template: '<div class="md-container"><div class="md-dashed"></div><div class="md-bar md-bar1"></div><div class="md-bar md-bar2"></div></div>',
            compile: compile
        };
    }
    angular.module("material.components.progressLinear", [ "material.core" ]).directive("mdProgressLinear", MdProgressLinearDirective), 
    MdProgressLinearDirective.$inject = [ "$$rAF", "$mdConstant", "$mdTheming" ];
    var transforms = function() {
        function makeTransform(value) {
            var scale = value / 100, translateX = (value - 100) / 2;
            return "translateX(" + translateX.toString() + "%) scale(" + scale.toString() + ", 1)";
        }
        for (var values = new Array(101), i = 0; 101 > i; i++) values[i] = makeTransform(i);
        return values;
    }();
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdRadioGroupDirective($mdUtil, $mdConstant, $mdTheming) {
        function linkRadioGroup(scope, element, attr, ctrls) {
            function keydownListener(ev) {
                switch (ev.keyCode) {
                  case $mdConstant.KEY_CODE.LEFT_ARROW:
                  case $mdConstant.KEY_CODE.UP_ARROW:
                    ev.preventDefault(), rgCtrl.selectPrevious();
                    break;

                  case $mdConstant.KEY_CODE.RIGHT_ARROW:
                  case $mdConstant.KEY_CODE.DOWN_ARROW:
                    ev.preventDefault(), rgCtrl.selectNext();
                    break;

                  case $mdConstant.KEY_CODE.ENTER:
                    var form = angular.element($mdUtil.getClosest(element[0], "form"));
                    form.length > 0 && form.triggerHandler("submit");
                }
            }
            $mdTheming(element);
            var rgCtrl = ctrls[0], ngModelCtrl = ctrls[1] || $mdUtil.fakeNgModel();
            rgCtrl.init(ngModelCtrl), element.attr({
                role: "radiogroup",
                tabIndex: element.attr("tabindex") || "0"
            }).on("keydown", keydownListener);
        }
        function RadioGroupController($element) {
            this._radioButtonRenderFns = [], this.$element = $element;
        }
        function createRadioGroupControllerProto() {
            return {
                init: function(ngModelCtrl) {
                    this._ngModelCtrl = ngModelCtrl, this._ngModelCtrl.$render = angular.bind(this, this.render);
                },
                add: function(rbRender) {
                    this._radioButtonRenderFns.push(rbRender);
                },
                remove: function(rbRender) {
                    var index = this._radioButtonRenderFns.indexOf(rbRender);
                    -1 !== index && this._radioButtonRenderFns.splice(index, 1);
                },
                render: function() {
                    this._radioButtonRenderFns.forEach(function(rbRender) {
                        rbRender();
                    });
                },
                setViewValue: function(value, eventType) {
                    this._ngModelCtrl.$setViewValue(value, eventType), this.render();
                },
                getViewValue: function() {
                    return this._ngModelCtrl.$viewValue;
                },
                selectNext: function() {
                    return changeSelectedButton(this.$element, 1);
                },
                selectPrevious: function() {
                    return changeSelectedButton(this.$element, -1);
                },
                setActiveDescendant: function(radioId) {
                    this.$element.attr("aria-activedescendant", radioId);
                }
            };
        }
        function changeSelectedButton(parent, increment) {
            var buttons = $mdUtil.iterator(Array.prototype.slice.call(parent[0].querySelectorAll("md-radio-button")), !0);
            if (buttons.count()) {
                var validate = function(button) {
                    return !angular.element(button).attr("disabled");
                }, selected = parent[0].querySelector("md-radio-button.md-checked"), target = buttons[0 > increment ? "previous" : "next"](selected, validate) || buttons.first();
                angular.element(target).triggerHandler("click");
            }
        }
        return RadioGroupController.prototype = createRadioGroupControllerProto(), {
            restrict: "E",
            controller: [ "$element", RadioGroupController ],
            require: [ "mdRadioGroup", "?ngModel" ],
            link: {
                pre: linkRadioGroup
            }
        };
    }
    function mdRadioButtonDirective($mdAria, $mdUtil, $mdTheming) {
        function link(scope, element, attr, rgCtrl) {
            function listener(ev) {
                element[0].hasAttribute("disabled") || scope.$apply(function() {
                    rgCtrl.setViewValue(attr.value, ev && ev.type);
                });
            }
            function render() {
                var checked = rgCtrl.getViewValue() == attr.value;
                checked !== lastChecked && (lastChecked = checked, element.attr("aria-checked", checked), 
                checked ? (element.addClass(CHECKED_CSS), rgCtrl.setActiveDescendant(element.attr("id"))) : element.removeClass(CHECKED_CSS));
            }
            function configureAria(element, scope) {
                function buildAriaID() {
                    return attr.id || "radio_" + $mdUtil.nextUid();
                }
                scope.ariaId = buildAriaID(), element.attr({
                    id: scope.ariaId,
                    role: "radio",
                    "aria-checked": "false"
                }), $mdAria.expectWithText(element, "aria-label");
            }
            var lastChecked;
            $mdTheming(element), configureAria(element, scope), rgCtrl.add(render), attr.$observe("value", render), 
            element.on("click", listener).on("$destroy", function() {
                rgCtrl.remove(render);
            });
        }
        var CHECKED_CSS = "md-checked";
        return {
            restrict: "E",
            require: "^mdRadioGroup",
            transclude: !0,
            template: '<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-off"></div><div class="md-on"></div></div><div ng-transclude class="md-label"></div>',
            link: link
        };
    }
    angular.module("material.components.radioButton", [ "material.core" ]).directive("mdRadioGroup", mdRadioGroupDirective).directive("mdRadioButton", mdRadioButtonDirective), 
    mdRadioGroupDirective.$inject = [ "$mdUtil", "$mdConstant", "$mdTheming" ], mdRadioButtonDirective.$inject = [ "$mdAria", "$mdUtil", "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function SidenavService($mdComponentRegistry, $q) {
        return function(handle) {
            var errorMsg = "SideNav '" + handle + "' is not available!", instance = $mdComponentRegistry.get(handle);
            return instance || $mdComponentRegistry.notFoundError(handle), {
                isOpen: function() {
                    return instance && instance.isOpen();
                },
                toggle: function() {
                    return instance ? instance.toggle() : $q.reject(errorMsg);
                },
                open: function() {
                    return instance ? instance.open() : $q.reject(errorMsg);
                },
                close: function() {
                    return instance ? instance.close() : $q.reject(errorMsg);
                }
            };
        };
    }
    function SidenavDirective($timeout, $animate, $parse, $mdMedia, $mdConstant, $compile, $mdTheming, $q, $document) {
        function postLink(scope, element, attr, sidenavCtrl) {
            function updateIsLocked(isLocked, oldValue) {
                isLocked === oldValue ? element.toggleClass("md-locked-open", !!isLocked) : $animate[isLocked ? "addClass" : "removeClass"](element, "md-locked-open"), 
                backdrop.toggleClass("md-locked-open", !!isLocked);
            }
            function updateIsOpen(isOpen) {
                var parent = element.parent();
                return parent[isOpen ? "on" : "off"]("keydown", onKeyDown), backdrop[isOpen ? "on" : "off"]("click", close), 
                isOpen && (triggeringElement = $document[0].activeElement), promise = $q.all([ $animate[isOpen ? "enter" : "leave"](backdrop, parent), $animate[isOpen ? "removeClass" : "addClass"](element, "md-closed").then(function() {
                    scope.isOpen && element.focus();
                }) ]);
            }
            function toggleOpen(isOpen) {
                if (scope.isOpen == isOpen) return $q.when(!0);
                var deferred = $q.defer();
                return scope.isOpen = isOpen, $timeout(function() {
                    promise.then(function(result) {
                        scope.isOpen || (triggeringElement && triggeringElement.focus(), triggeringElement = null), 
                        deferred.resolve(result);
                    });
                }, 0, !1), deferred.promise;
            }
            function onKeyDown(ev) {
                var isEscape = ev.keyCode === $mdConstant.KEY_CODE.ESCAPE;
                return isEscape ? close(ev) : $q.when(!0);
            }
            function close(ev) {
                return ev.preventDefault(), ev.stopPropagation(), sidenavCtrl.close();
            }
            var triggeringElement = null, promise = $q.when(!0), isLockedOpenParsed = $parse(attr.mdIsLockedOpen), isLocked = function() {
                return isLockedOpenParsed(scope.$parent, {
                    $media: $mdMedia
                });
            }, backdrop = $compile('<md-backdrop class="md-sidenav-backdrop md-opaque ng-enter">')(scope);
            element.on("$destroy", sidenavCtrl.destroy), $mdTheming.inherit(backdrop, element), 
            scope.$watch(isLocked, updateIsLocked), scope.$watch("isOpen", updateIsOpen), sidenavCtrl.$toggleOpen = toggleOpen;
        }
        return {
            restrict: "E",
            scope: {
                isOpen: "=?mdIsOpen"
            },
            controller: "$mdSidenavController",
            compile: function(element) {
                return element.addClass("md-closed"), element.attr("tabIndex", "-1"), postLink;
            }
        };
    }
    function SidenavController($scope, $element, $attrs, $mdComponentRegistry, $q) {
        var self = this;
        self.$toggleOpen = function() {
            return $q.when($scope.isOpen);
        }, self.isOpen = function() {
            return !!$scope.isOpen;
        }, self.open = function() {
            return self.$toggleOpen(!0);
        }, self.close = function() {
            return self.$toggleOpen(!1);
        }, self.toggle = function() {
            return self.$toggleOpen(!$scope.isOpen);
        }, self.destroy = $mdComponentRegistry.register(self, $attrs.mdComponentId);
    }
    angular.module("material.components.sidenav", [ "material.core", "material.components.backdrop" ]).factory("$mdSidenav", SidenavService).directive("mdSidenav", SidenavDirective).controller("$mdSidenavController", SidenavController), 
    SidenavService.$inject = [ "$mdComponentRegistry", "$q" ], SidenavDirective.$inject = [ "$timeout", "$animate", "$parse", "$mdMedia", "$mdConstant", "$compile", "$mdTheming", "$q", "$document" ], 
    SidenavController.$inject = [ "$scope", "$element", "$attrs", "$mdComponentRegistry", "$q" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function SliderDirective($mdTheming) {
        function postLink(scope, element, attr, ctrls) {
            $mdTheming(element);
            var ngModelCtrl = ctrls[0] || {
                $setViewValue: function(val) {
                    this.$viewValue = val, this.$viewChangeListeners.forEach(function(cb) {
                        cb();
                    });
                },
                $parsers: [],
                $formatters: [],
                $viewChangeListeners: []
            }, sliderCtrl = ctrls[1];
            sliderCtrl.init(ngModelCtrl);
        }
        return {
            scope: {},
            require: [ "?ngModel", "mdSlider" ],
            controller: SliderController,
            template: '<div class="md-track-container"><div class="md-track"></div><div class="md-track md-track-fill"></div><div class="md-track-ticks"></div></div><div class="md-thumb-container"><div class="md-thumb"></div><div class="md-focus-thumb"></div><div class="md-focus-ring"></div><div class="md-sign"><span class="md-thumb-text"></span></div><div class="md-disabled-thumb"></div></div>',
            link: postLink
        };
    }
    function SliderController($scope, $element, $attrs, $$rAF, $window, $mdAria, $mdUtil, $mdConstant) {
        this.init = function(ngModelCtrl) {
            function updateAll() {
                refreshSliderDimensions(), ngModelRender(), redrawTicks();
            }
            function updateMin(value) {
                min = parseFloat(value), $element.attr("aria-valuemin", value), updateAll();
            }
            function updateMax(value) {
                max = parseFloat(value), $element.attr("aria-valuemax", value), updateAll();
            }
            function updateStep(value) {
                step = parseFloat(value), redrawTicks();
            }
            function updateAriaDisabled(isDisabled) {
                $element.attr("aria-disabled", !!isDisabled);
            }
            function redrawTicks() {
                if (angular.isDefined($attrs.mdDiscrete)) {
                    var numSteps = Math.floor((max - min) / step);
                    if (!tickCanvas) {
                        var trackTicksStyle = $window.getComputedStyle(tickContainer[0]);
                        tickCanvas = angular.element('<canvas style="position:absolute;">'), tickCtx = tickCanvas[0].getContext("2d"), 
                        tickCtx.fillStyle = trackTicksStyle.backgroundColor || "black", tickContainer.append(tickCanvas);
                    }
                    var dimensions = getSliderDimensions();
                    tickCanvas[0].width = dimensions.width, tickCanvas[0].height = dimensions.height;
                    for (var distance, i = 0; numSteps >= i; i++) distance = Math.floor(dimensions.width * (i / numSteps)), 
                    tickCtx.fillRect(distance - 1, 0, 2, dimensions.height);
                }
            }
            function refreshSliderDimensions() {
                sliderDimensions = trackContainer[0].getBoundingClientRect();
            }
            function getSliderDimensions() {
                return throttledRefreshDimensions(), sliderDimensions;
            }
            function keydownListener(ev) {
                if (!$element[0].hasAttribute("disabled")) {
                    var changeAmount;
                    ev.keyCode === $mdConstant.KEY_CODE.LEFT_ARROW ? changeAmount = -step : ev.keyCode === $mdConstant.KEY_CODE.RIGHT_ARROW && (changeAmount = step), 
                    changeAmount && ((ev.metaKey || ev.ctrlKey || ev.altKey) && (changeAmount *= 4), 
                    ev.preventDefault(), ev.stopPropagation(), $scope.$evalAsync(function() {
                        setModelValue(ngModelCtrl.$viewValue + changeAmount);
                    }));
                }
            }
            function setModelValue(value) {
                ngModelCtrl.$setViewValue(minMaxValidator(stepValidator(value)));
            }
            function ngModelRender() {
                isNaN(ngModelCtrl.$viewValue) && (ngModelCtrl.$viewValue = ngModelCtrl.$modelValue);
                var percent = (ngModelCtrl.$viewValue - min) / (max - min);
                $scope.modelValue = ngModelCtrl.$viewValue, $element.attr("aria-valuenow", ngModelCtrl.$viewValue), 
                setSliderPercent(percent), thumbText.text(ngModelCtrl.$viewValue);
            }
            function minMaxValidator(value) {
                return angular.isNumber(value) ? Math.max(min, Math.min(max, value)) : void 0;
            }
            function stepValidator(value) {
                return angular.isNumber(value) ? Math.round(value / step) * step : void 0;
            }
            function setSliderPercent(percent) {
                activeTrack.css("width", 100 * percent + "%"), thumbContainer.css($mdConstant.CSS.TRANSFORM, "translate3d(" + getSliderDimensions().width * percent + "px,0,0)"), 
                $element.toggleClass("md-min", 0 === percent);
            }
            function onInput(ev) {
                isSliding || ev.eventType !== Hammer.INPUT_START || $element[0].hasAttribute("disabled") ? isSliding && ev.eventType === Hammer.INPUT_END && (isSliding && isDiscrete && onPanEnd(ev), 
                isSliding = !1, $element.removeClass("panning active")) : (isSliding = !0, $element.addClass("active"), 
                $element[0].focus(), refreshSliderDimensions(), onPan(ev), ev.srcEvent.stopPropagation());
            }
            function onPanStart() {
                isSliding && $element.addClass("panning");
            }
            function onPan(ev) {
                isSliding && (isDiscrete ? adjustThumbPosition(ev.center.x) : doSlide(ev.center.x), 
                ev.preventDefault(), ev.srcEvent.stopPropagation());
            }
            function onPanEnd(ev) {
                if (isDiscrete && !$element[0].hasAttribute("disabled")) {
                    var exactVal = percentToValue(positionToPercent(ev.center.x)), closestVal = minMaxValidator(stepValidator(exactVal));
                    setSliderPercent(valueToPercent(closestVal)), $$rAF(function() {
                        setModelValue(closestVal);
                    }), ev.preventDefault(), ev.srcEvent.stopPropagation();
                }
            }
            function doSlide(x) {
                $scope.$evalAsync(function() {
                    setModelValue(percentToValue(positionToPercent(x)));
                });
            }
            function adjustThumbPosition(x) {
                var exactVal = percentToValue(positionToPercent(x)), closestVal = minMaxValidator(stepValidator(exactVal));
                setSliderPercent(positionToPercent(x)), thumbText.text(closestVal);
            }
            function positionToPercent(x) {
                return Math.max(0, Math.min(1, (x - sliderDimensions.left) / sliderDimensions.width));
            }
            function percentToValue(percent) {
                return min + percent * (max - min);
            }
            function valueToPercent(val) {
                return (val - min) / (max - min);
            }
            var thumb = angular.element($element[0].querySelector(".md-thumb")), thumbText = angular.element($element[0].querySelector(".md-thumb-text")), thumbContainer = thumb.parent(), trackContainer = angular.element($element[0].querySelector(".md-track-container")), activeTrack = angular.element($element[0].querySelector(".md-track-fill")), tickContainer = angular.element($element[0].querySelector(".md-track-ticks")), throttledRefreshDimensions = $mdUtil.throttle(refreshSliderDimensions, 5e3);
            $attrs.min ? $attrs.$observe("min", updateMin) : updateMin(0), $attrs.max ? $attrs.$observe("max", updateMax) : updateMax(100), 
            $attrs.step ? $attrs.$observe("step", updateStep) : updateStep(1);
            var stopDisabledWatch = angular.noop;
            $attrs.ngDisabled && (stopDisabledWatch = $scope.$parent.$watch($attrs.ngDisabled, updateAriaDisabled)), 
            $mdAria.expect($element, "aria-label"), $element.attr("tabIndex", 0), $element.attr("role", "slider"), 
            $element.on("keydown", keydownListener);
            var hammertime = new Hammer($element[0], {
                recognizers: [ [ Hammer.Pan, {
                    direction: Hammer.DIRECTION_HORIZONTAL
                } ] ]
            });
            hammertime.on("hammer.input", onInput), hammertime.on("panstart", onPanStart), hammertime.on("pan", onPan), 
            hammertime.on("panend", onPanEnd), setTimeout(updateAll);
            var debouncedUpdateAll = $$rAF.debounce(updateAll);
            angular.element($window).on("resize", debouncedUpdateAll), $scope.$on("$destroy", function() {
                angular.element($window).off("resize", debouncedUpdateAll), hammertime.destroy(), 
                stopDisabledWatch();
            }), ngModelCtrl.$render = ngModelRender, ngModelCtrl.$viewChangeListeners.push(ngModelRender), 
            ngModelCtrl.$formatters.push(minMaxValidator), ngModelCtrl.$formatters.push(stepValidator);
            var min, max, step, tickCanvas, tickCtx, sliderDimensions = {};
            refreshSliderDimensions();
            var isSliding = !1, isDiscrete = angular.isDefined($attrs.mdDiscrete);
            this._onInput = onInput, this._onPanStart = onPanStart, this._onPan = onPan;
        };
    }
    angular.module("material.components.slider", [ "material.core" ]).directive("mdSlider", SliderDirective), 
    SliderDirective.$inject = [ "$mdTheming" ], SliderController.$inject = [ "$scope", "$element", "$attrs", "$$rAF", "$window", "$mdAria", "$mdUtil", "$mdConstant" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdSticky($document, $mdConstant, $compile, $$rAF, $mdUtil) {
        function setupSticky(contentCtrl) {
            function add(element, stickyClone) {
                stickyClone.addClass("md-sticky-clone");
                var item = {
                    element: element,
                    clone: stickyClone
                };
                return self.items.push(item), contentEl.parent().prepend(item.clone), debouncedRefreshElements(), 
                function() {
                    self.items.forEach(function(item, index) {
                        item.element[0] === element[0] && (self.items.splice(index, 1), item.clone.remove());
                    }), debouncedRefreshElements();
                };
            }
            function refreshElements() {
                self.items.forEach(refreshPosition), self.items = self.items.sort(function(a, b) {
                    return a.top < b.top ? -1 : 1;
                });
                for (var item, currentScrollTop = contentEl.prop("scrollTop"), i = self.items.length - 1; i >= 0; i--) if (currentScrollTop > self.items[i].top) {
                    item = self.items[i];
                    break;
                }
                setCurrentItem(item);
            }
            function refreshPosition(item) {
                var current = item.element[0];
                for (item.top = 0, item.left = 0; current && current !== contentEl[0]; ) item.top += current.offsetTop, 
                item.left += current.offsetLeft, current = current.offsetParent;
                item.height = item.element.prop("offsetHeight"), item.clone.css("margin-left", item.left + "px");
            }
            function onScroll() {
                var scrollTop = contentEl.prop("scrollTop"), isScrollingDown = scrollTop > (onScroll.prevScrollTop || 0);
                onScroll.prevScrollTop = scrollTop, 0 === scrollTop ? setCurrentItem(null) : isScrollingDown && self.next ? self.next.top - scrollTop <= 0 ? setCurrentItem(self.next) : self.current && (self.next.top - scrollTop <= self.next.height ? translate(self.current, self.next.top - self.next.height - scrollTop) : translate(self.current, null)) : !isScrollingDown && self.current && (scrollTop < self.current.top && setCurrentItem(self.prev), 
                self.current && self.next && (scrollTop >= self.next.top - self.current.height ? translate(self.current, self.next.top - scrollTop - self.current.height) : translate(self.current, null)));
            }
            function setCurrentItem(item) {
                if (self.current !== item) {
                    self.current && (translate(self.current, null), setStickyState(self.current, null)), 
                    item && setStickyState(item, "active"), self.current = item;
                    var index = self.items.indexOf(item);
                    self.next = self.items[index + 1], self.prev = self.items[index - 1], setStickyState(self.next, "next"), 
                    setStickyState(self.prev, "prev");
                }
            }
            function setStickyState(item, state) {
                item && item.state !== state && (item.state && (item.clone.attr("sticky-prev-state", item.state), 
                item.element.attr("sticky-prev-state", item.state)), item.clone.attr("sticky-state", state), 
                item.element.attr("sticky-state", state), item.state = state);
            }
            function translate(item, amount) {
                item && (null === amount || void 0 === amount ? item.translateY && (item.translateY = null, 
                item.clone.css($mdConstant.CSS.TRANSFORM, "")) : (item.translateY = amount, item.clone.css($mdConstant.CSS.TRANSFORM, "translate3d(" + item.left + "px," + amount + "px,0)")));
            }
            var contentEl = contentCtrl.$element, debouncedRefreshElements = $$rAF.debounce(refreshElements);
            setupAugmentedScrollEvents(contentEl), contentEl.on("$scrollstart", debouncedRefreshElements), 
            contentEl.on("$scroll", onScroll);
            var self;
            return self = {
                prev: null,
                current: null,
                next: null,
                items: [],
                add: add,
                refreshElements: refreshElements
            };
        }
        function checkStickySupport() {
            var stickyProp, testEl = angular.element("<div>");
            $document[0].body.appendChild(testEl[0]);
            for (var stickyProps = [ "sticky", "-webkit-sticky" ], i = 0; i < stickyProps.length; ++i) if (testEl.css({
                position: stickyProps[i],
                top: 0,
                "z-index": 2
            }), testEl.css("position") == stickyProps[i]) {
                stickyProp = stickyProps[i];
                break;
            }
            return testEl.remove(), stickyProp;
        }
        function setupAugmentedScrollEvents(element) {
            function loopScrollEvent() {
                +$mdUtil.now() - lastScrollTime > SCROLL_END_DELAY ? (isScrolling = !1, element.triggerHandler("$scrollend")) : (element.triggerHandler("$scroll"), 
                $$rAF(loopScrollEvent));
            }
            var isScrolling, lastScrollTime, SCROLL_END_DELAY = 200;
            element.on("scroll touchmove", function() {
                isScrolling || (isScrolling = !0, $$rAF(loopScrollEvent), element.triggerHandler("$scrollstart")), 
                element.triggerHandler("$scroll"), lastScrollTime = +$mdUtil.now();
            });
        }
        var browserStickySupport = checkStickySupport();
        return function(scope, element, stickyClone) {
            var contentCtrl = element.controller("mdContent");
            if (contentCtrl) if (browserStickySupport) element.css({
                position: browserStickySupport,
                top: 0,
                "z-index": 2
            }); else {
                var $$sticky = contentCtrl.$element.data("$$sticky");
                $$sticky || ($$sticky = setupSticky(contentCtrl), contentCtrl.$element.data("$$sticky", $$sticky));
                var deregister = $$sticky.add(element, stickyClone || element.clone());
                scope.$on("$destroy", deregister);
            }
        };
    }
    angular.module("material.components.sticky", [ "material.core", "material.components.content" ]).factory("$mdSticky", MdSticky), 
    MdSticky.$inject = [ "$document", "$mdConstant", "$compile", "$$rAF", "$mdUtil" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdSubheaderDirective($mdSticky, $compile, $mdTheming) {
        return {
            restrict: "E",
            replace: !0,
            transclude: !0,
            template: '<h2 class="md-subheader"><span class="md-subheader-content"></span></h2>',
            compile: function(element, attr, transclude) {
                var outerHTML = element[0].outerHTML;
                return function(scope, element) {
                    function getContent(el) {
                        return angular.element(el[0].querySelector(".md-subheader-content"));
                    }
                    $mdTheming(element), transclude(scope, function(clone) {
                        getContent(element).append(clone);
                    }), transclude(scope, function(clone) {
                        var stickyClone = $compile(angular.element(outerHTML))(scope);
                        $mdTheming(stickyClone), getContent(stickyClone).append(clone), $mdSticky(scope, element, stickyClone);
                    });
                };
            }
        };
    }
    angular.module("material.components.subheader", [ "material.core", "material.components.sticky" ]).directive("mdSubheader", MdSubheaderDirective), 
    MdSubheaderDirective.$inject = [ "$mdSticky", "$compile", "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdSwipeFactory() {
        return function(scope, eventTypes) {
            return eventTypes || (eventTypes = "swipeleft swiperight"), function(element, onSwipeCallback, attachLater) {
                function swipeHandler(ev) {
                    ev.srcEvent.stopPropagation(), angular.isFunction(onSwipeCallback) && scope.$apply(function() {
                        onSwipeCallback(ev);
                    });
                }
                function attachSwipe() {
                    return hammertime.on(eventTypes, swipeHandler), function() {
                        hammertime.off(eventTypes);
                    };
                }
                function addRecognizers(list, events) {
                    var hasPanning = events.indexOf("pan") > -1, hasSwipe = events.indexOf("swipe") > -1;
                    return hasPanning && list.push([ Hammer.Pan, {
                        direction: Hammer.DIRECTION_HORIZONTAL
                    } ]), hasSwipe && list.push([ Hammer.Swipe, {
                        direction: Hammer.DIRECTION_HORIZONTAL
                    } ]), list;
                }
                var hammertime = new Hammer(element[0], {
                    recognizers: addRecognizers([], eventTypes)
                });
                return attachLater || attachSwipe(), scope.$on("$destroy", function() {
                    hammertime.destroy();
                }), attachSwipe;
            };
        };
    }
    function MdSwipeLeftDirective($parse, $mdSwipe) {
        return {
            restrict: "A",
            link: swipePostLink($parse, $mdSwipe, "SwipeLeft")
        };
    }
    function MdSwipeRightDirective($parse, $mdSwipe) {
        return {
            restrict: "A",
            link: swipePostLink($parse, $mdSwipe, "SwipeRight")
        };
    }
    function swipePostLink($parse, $mdSwipe, name) {
        return function(scope, element, attrs) {
            var direction = name.toLowerCase(), directiveName = "md" + name, parentGetter = $parse(attrs[directiveName]) || angular.noop, configureSwipe = $mdSwipe(scope, direction), requestSwipe = function(locals) {
                parentGetter(scope, locals);
            };
            configureSwipe(element, function(ev) {
                ev.type == direction && requestSwipe();
            });
        };
    }
    angular.module("material.components.swipe", []).factory("$mdSwipe", MdSwipeFactory).directive("mdSwipeLeft", MdSwipeLeftDirective).directive("mdSwipeRight", MdSwipeRightDirective), 
    MdSwipeLeftDirective.$inject = [ "$parse", "$mdSwipe" ], MdSwipeRightDirective.$inject = [ "$parse", "$mdSwipe" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdSwitch(mdCheckboxDirective, $mdTheming, $mdUtil, $document, $mdConstant, $parse, $$rAF) {
        function compile(element, attr) {
            var checkboxLink = checkboxDirective.compile(element, attr);
            return element.addClass("md-dragging"), function(scope, element, attr, ngModel) {
                function onDragStart(ev, drag) {
                    return disabledGetter(scope) ? ev.preventDefault() : (drag.width = thumbContainer.prop("offsetWidth"), 
                    void element.addClass("md-dragging"));
                }
                function onDrag(ev, drag) {
                    var percent = drag.distance / drag.width, translate = ngModel.$viewValue ? 1 - percent : -percent;
                    translate = Math.max(0, Math.min(1, translate)), thumbContainer.css($mdConstant.CSS.TRANSFORM, "translate3d(" + 100 * translate + "%,0,0)"), 
                    drag.translate = translate;
                }
                function onDragEnd(ev, drag) {
                    if (disabledGetter(scope)) return !1;
                    element.removeClass("md-dragging"), thumbContainer.css($mdConstant.CSS.TRANSFORM, "");
                    var isChanged = Math.abs(drag.distance || 0) < 2 || (ngModel.$viewValue ? drag.translate < .5 : drag.translate > .5);
                    isChanged && scope.$apply(function() {
                        ngModel.$setViewValue(!ngModel.$viewValue), ngModel.$render();
                    });
                }
                ngModel = ngModel || $mdUtil.fakeNgModel();
                var disabledGetter = $parse(attr.ngDisabled), thumbContainer = angular.element(element[0].querySelector(".md-thumb-container")), switchContainer = angular.element(element[0].querySelector(".md-container"));
                $$rAF(function() {
                    element.removeClass("md-dragging");
                }), attr.mdNoClick = !0, checkboxLink(scope, element, attr, ngModel), $mdUtil.attachDragBehavior(scope, switchContainer), 
                switchContainer.on("$md.dragstart", onDragStart).on("$md.drag", onDrag).on("$md.dragend", onDragEnd);
            };
        }
        var checkboxDirective = mdCheckboxDirective[0];
        return {
            restrict: "E",
            transclude: !0,
            template: '<div class="md-container"><div class="md-bar"></div><div class="md-thumb-container"><div class="md-thumb" md-ink-ripple md-ink-ripple-checkbox></div></div></div><div ng-transclude class="md-label"></div>',
            require: "?ngModel",
            compile: compile
        };
    }
    angular.module("material.components.switch", [ "material.core", "material.components.checkbox" ]).directive("mdSwitch", MdSwitch), 
    MdSwitch.$inject = [ "mdCheckboxDirective", "$mdTheming", "$mdUtil", "$document", "$mdConstant", "$parse", "$$rAF" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    angular.module("material.components.tabs", [ "material.core" ]);
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdTextFloatDirective($mdTheming, $mdUtil, $parse, $log) {
        return {
            restrict: "E",
            replace: !0,
            scope: {
                fid: "@?mdFid",
                label: "@?",
                value: "=ngModel"
            },
            compile: function(element, attr) {
                return $log.warn("<md-text-float> is deprecated. Please use `<md-input-container>` and `<input>`.More information at http://material.angularjs.org/#/api/material.components.input/directive/mdInputContainer"), 
                angular.isUndefined(attr.mdFid) && (attr.mdFid = $mdUtil.nextUid()), {
                    pre: function(scope, element, attrs) {
                        var disabledParsed = $parse(attrs.ngDisabled);
                        scope.isDisabled = function() {
                            return disabledParsed(scope.$parent);
                        }, scope.inputType = attrs.type || "text";
                    },
                    post: $mdTheming
                };
            },
            template: '<md-input-group tabindex="-1"> <label for="{{fid}}" >{{label}}</label> <md-input id="{{fid}}" ng-disabled="isDisabled()" ng-model="value" type="{{inputType}}"></md-input></md-input-group>'
        };
    }
    function mdInputGroupDirective($log) {
        return {
            restrict: "CE",
            controller: [ "$element", function($element) {
                $log.warn("<md-input-group> is deprecated. Please use `<md-input-container>` and `<input>`.More information at http://material.angularjs.org/#/api/material.components.input/directive/mdInputContainer"), 
                this.setFocused = function(isFocused) {
                    $element.toggleClass("md-input-focused", !!isFocused);
                }, this.setHasValue = function(hasValue) {
                    $element.toggleClass("md-input-has-value", hasValue);
                };
            } ]
        };
    }
    function mdInputDirective($mdUtil, $log) {
        return {
            restrict: "E",
            replace: !0,
            template: "<input >",
            require: [ "^?mdInputGroup", "?ngModel" ],
            link: function(scope, element, attr, ctrls) {
                function isNotEmpty(value) {
                    return value = angular.isUndefined(value) ? element.val() : value, angular.isDefined(value) && null !== value && "" !== value.toString().trim();
                }
                if (ctrls[0]) {
                    $log.warn("<md-input> is deprecated. Please use `<md-input-container>` and `<input>`.More information at http://material.angularjs.org/#/api/material.components.input/directive/mdInputContainer");
                    var inputGroupCtrl = ctrls[0], ngModelCtrl = ctrls[1];
                    scope.$watch(scope.isDisabled, function(isDisabled) {
                        element.attr("aria-disabled", !!isDisabled), element.attr("tabindex", !!isDisabled);
                    }), element.attr("type", attr.type || element.parent().attr("type") || "text"), 
                    ngModelCtrl && ngModelCtrl.$formatters.push(function(value) {
                        return inputGroupCtrl.setHasValue(isNotEmpty(value)), value;
                    }), element.on("input", function() {
                        inputGroupCtrl.setHasValue(isNotEmpty());
                    }).on("focus", function() {
                        inputGroupCtrl.setFocused(!0);
                    }).on("blur", function() {
                        inputGroupCtrl.setFocused(!1), inputGroupCtrl.setHasValue(isNotEmpty());
                    }), scope.$on("$destroy", function() {
                        inputGroupCtrl.setFocused(!1), inputGroupCtrl.setHasValue(!1);
                    });
                }
            }
        };
    }
    angular.module("material.components.textField", [ "material.core" ]).directive("mdInputGroup", mdInputGroupDirective).directive("mdInput", mdInputDirective).directive("mdTextFloat", mdTextFloatDirective), 
    mdTextFloatDirective.$inject = [ "$mdTheming", "$mdUtil", "$parse", "$log" ], mdInputGroupDirective.$inject = [ "$log" ], 
    mdInputDirective.$inject = [ "$mdUtil", "$log" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdToastDirective() {
        return {
            restrict: "E"
        };
    }
    function MdToastProvider($$interimElementProvider) {
        function toastDefaultOptions($timeout, $animate, $mdSwipe, $mdTheming, $mdToast) {
            function onShow(scope, element, options) {
                element.addClass(options.position.split(" ").map(function(pos) {
                    return "md-" + pos;
                }).join(" ")), options.parent.addClass(toastOpenClass(options.position));
                var configureSwipe = $mdSwipe(scope, "swipeleft swiperight");
                return options.detachSwipe = configureSwipe(element, function(ev) {
                    element.addClass("md-" + ev.type), $timeout($mdToast.cancel);
                }), $animate.enter(element, options.parent);
            }
            function onRemove(scope, element, options) {
                return options.detachSwipe(), options.parent.removeClass(toastOpenClass(options.position)), 
                $animate.leave(element);
            }
            function toastOpenClass(position) {
                return "md-toast-open-" + (position.indexOf("top") > -1 ? "top" : "bottom");
            }
            return {
                onShow: onShow,
                onRemove: onRemove,
                position: "bottom left",
                themable: !0,
                hideDelay: 3e3
            };
        }
        return toastDefaultOptions.$inject = [ "$timeout", "$animate", "$mdSwipe", "$mdTheming", "$mdToast" ], 
        $$interimElementProvider("$mdToast").setDefaults({
            methods: [ "position", "hideDelay", "capsule" ],
            options: toastDefaultOptions
        }).addPreset("simple", {
            argOption: "content",
            methods: [ "content", "action", "highlightAction" ],
            options: [ "$mdToast", function($mdToast) {
                return {
                    template: [ "<md-toast ng-class=\"{'md-capsule': toast.capsule}\">", "<span flex>{{ toast.content }}</span>", '<md-button ng-if="toast.action" ng-click="toast.resolve()" ng-class="{\'md-action\': toast.highlightAction}">', "{{ toast.action }}", "</md-button>", "</md-toast>" ].join(""),
                    controller: function() {
                        this.resolve = function() {
                            $mdToast.hide();
                        };
                    },
                    controllerAs: "toast",
                    bindToController: !0
                };
            } ]
        });
    }
    angular.module("material.components.toast", [ "material.core", "material.components.swipe", "material.components.button" ]).directive("mdToast", MdToastDirective).provider("$mdToast", MdToastProvider), 
    MdToastProvider.$inject = [ "$$interimElementProvider" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function mdToolbarDirective($$rAF, $mdConstant, $mdUtil, $mdTheming) {
        return {
            restrict: "E",
            controller: angular.noop,
            link: function(scope, element, attr) {
                function setupScrollShrink() {
                    function onMdContentLoad($event, newContentEl) {
                        element.parent()[0] === newContentEl.parent()[0] && (contentElement && contentElement.off("scroll", debouncedContentScroll), 
                        newContentEl.on("scroll", debouncedContentScroll), newContentEl.attr("scroll-shrink", "true"), 
                        contentElement = newContentEl, $$rAF(updateToolbarHeight));
                    }
                    function updateToolbarHeight() {
                        toolbarHeight = element.prop("offsetHeight"), contentElement.css("margin-top", -toolbarHeight * shrinkSpeedFactor + "px"), 
                        onContentScroll();
                    }
                    function onContentScroll(e) {
                        var scrollTop = e ? e.target.scrollTop : prevScrollTop;
                        debouncedUpdateHeight(), y = Math.min(toolbarHeight / shrinkSpeedFactor, Math.max(0, y + scrollTop - prevScrollTop)), 
                        element.css($mdConstant.CSS.TRANSFORM, "translate3d(0," + -y * shrinkSpeedFactor + "px,0)"), 
                        contentElement.css($mdConstant.CSS.TRANSFORM, "translate3d(0," + (toolbarHeight - y) * shrinkSpeedFactor + "px,0)"), 
                        prevScrollTop = scrollTop;
                    }
                    var toolbarHeight, contentElement, y = 0, prevScrollTop = 0, shrinkSpeedFactor = attr.mdShrinkSpeedFactor || .5, debouncedContentScroll = $$rAF.debounce(onContentScroll), debouncedUpdateHeight = $mdUtil.debounce(updateToolbarHeight, 5e3);
                    scope.$on("$mdContentLoaded", onMdContentLoad);
                }
                $mdTheming(element), angular.isDefined(attr.mdScrollShrink) && setupScrollShrink();
            }
        };
    }
    angular.module("material.components.toolbar", [ "material.core", "material.components.content" ]).directive("mdToolbar", mdToolbarDirective), 
    mdToolbarDirective.$inject = [ "$$rAF", "$mdConstant", "$mdUtil", "$mdTheming" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    angular.module("material.components.whiteframe", []);
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdTooltipDirective($timeout, $window, $$rAF, $document, $mdUtil, $mdTheming, $rootElement) {
        function postLink(scope, element, attr) {
            function setVisible(value) {
                setVisible.value = !!value, setVisible.queued || (value ? (setVisible.queued = !0, 
                $timeout(function() {
                    scope.visible = setVisible.value, setVisible.queued = !1;
                }, scope.delay)) : $timeout(function() {
                    scope.visible = !1;
                }));
            }
            function showTooltip() {
                element.removeClass("md-hide"), parent.attr("aria-describedby", element.attr("id")), 
                tooltipParent.append(element), positionTooltip(), $$rAF(function() {
                    $$rAF(function() {
                        positionTooltip(), scope.visible && element.addClass("md-show");
                    });
                });
            }
            function hideTooltip() {
                element.removeClass("md-show").addClass("md-hide"), parent.removeAttr("aria-describedby"), 
                $timeout(function() {
                    scope.visible || element.detach();
                }, 200, !1);
            }
            function positionTooltip() {
                var tipRect = $mdUtil.elementRect(element, tooltipParent), parentRect = $mdUtil.elementRect(parent, tooltipParent), tipDirection = "bottom", newPosition = {
                    left: parentRect.left + parentRect.width / 2 - tipRect.width / 2,
                    top: parentRect.top + parentRect.height
                };
                newPosition.left = Math.min(newPosition.left, tooltipParent.prop("scrollWidth") - tipRect.width - TOOLTIP_WINDOW_EDGE_SPACE), 
                newPosition.left = Math.max(newPosition.left, TOOLTIP_WINDOW_EDGE_SPACE), newPosition.top + tipRect.height > tooltipParent.prop("scrollHeight") && (newPosition.top = parentRect.top - tipRect.height, 
                tipDirection = "top"), element.css({
                    top: newPosition.top + "px",
                    left: newPosition.left + "px"
                }), element.attr("width-32", Math.ceil(tipRect.width / 32)), element.attr("md-direction", tipDirection);
            }
            $mdTheming(element);
            for (var parent = element.parent(), current = element.parent()[0]; current && current !== $rootElement[0] && current !== document.body && (!current.tagName || "md-content" != current.tagName.toLowerCase()); ) current = current.parentNode;
            var tooltipParent = angular.element(current || document.body);
            angular.isDefined(attr.mdDelay) || (scope.delay = TOOLTIP_SHOW_DELAY), element.detach(), 
            element.attr("role", "tooltip"), element.attr("id", attr.id || "tooltip_" + $mdUtil.nextUid()), 
            parent.on("focus mouseenter touchstart", function() {
                setVisible(!0);
            }), parent.on("blur mouseleave touchend touchcancel", function() {
                $document[0].activeElement !== parent[0] && setVisible(!1);
            }), scope.$watch("visible", function(isVisible) {
                isVisible ? showTooltip() : hideTooltip();
            });
            var debouncedOnResize = $$rAF.debounce(function() {
                scope.visible && positionTooltip();
            });
            angular.element($window).on("resize", debouncedOnResize), scope.$on("$destroy", function() {
                scope.visible = !1, element.remove(), angular.element($window).off("resize", debouncedOnResize);
            });
        }
        var TOOLTIP_SHOW_DELAY = 400, TOOLTIP_WINDOW_EDGE_SPACE = 8;
        return {
            restrict: "E",
            transclude: !0,
            template: '<div class="md-background"></div><div class="md-content" ng-transclude></div>',
            scope: {
                visible: "=?mdVisible",
                delay: "=?mdDelay"
            },
            link: postLink
        };
    }
    angular.module("material.components.tooltip", [ "material.core" ]).directive("mdTooltip", MdTooltipDirective), 
    MdTooltipDirective.$inject = [ "$timeout", "$window", "$$rAF", "$document", "$mdUtil", "$mdTheming", "$rootElement" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdTabInkDirective($$rAF) {
        function postLink(scope, element, attr, ctrls) {
            function updateBar() {
                var selected = tabsCtrl.getSelectedItem(), hideInkBar = !selected || tabsCtrl.count() < 2;
                if (element.css("display", hideInkBar ? "none" : "block"), !hideInkBar && scope.pagination && scope.pagination.tabData) {
                    var index = tabsCtrl.getSelectedIndex(), data = scope.pagination.tabData.tabs[index] || {
                        left: 0,
                        right: 0,
                        width: 0
                    }, right = element.parent().prop("offsetWidth") - data.right, classNames = [ "md-transition-left", "md-transition-right", "md-no-transition" ], classIndex = lastIndex > index ? 0 : index > lastIndex ? 1 : 2;
                    element.removeClass(classNames.join(" ")).addClass(classNames[classIndex]).css({
                        left: data.left + 1 + "px",
                        right: right + "px"
                    }), lastIndex = index;
                }
            }
            if (!ctrls[0]) {
                var tabsCtrl = ctrls[1], debouncedUpdateBar = $$rAF.debounce(updateBar);
                tabsCtrl.inkBarElement = element, scope.$on("$mdTabsPaginationChanged", debouncedUpdateBar);
            }
        }
        var lastIndex = 0;
        return {
            restrict: "E",
            require: [ "^?mdNoBar", "^mdTabs" ],
            link: postLink
        };
    }
    angular.module("material.components.tabs").directive("mdTabsInkBar", MdTabInkDirective), 
    MdTabInkDirective.$inject = [ "$$rAF" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function TabPaginationDirective($mdConstant, $window, $$rAF, $$q, $timeout, $mdMedia) {
        function postLink(scope, element, attr, tabsCtrl) {
            function onTabFocus(tab, oldTab) {
                if (tab) {
                    var pageIndex = getPageForTab(tab);
                    state.active && pageIndex !== state.page ? (oldTab && oldTab.element.blur(), setPage(pageIndex).then(function() {
                        tab.element.focus();
                    })) : tab.element.focus();
                }
            }
            function userChangePage(increment) {
                var sizeData = state.tabData, newPage = Math.max(0, Math.min(sizeData.pages.length - 1, state.page + increment)), newTabIndex = sizeData.pages[newPage][increment > 0 ? "firstTabIndex" : "lastTabIndex"], newTab = tabsCtrl.itemAt(newTabIndex);
                onTabFocus(newTab);
            }
            function updatePagination() {
                function enablePagination() {
                    tabsParent.css("width", "9999px"), angular.forEach(sizeData.tabs, function(tab) {
                        angular.element(tab.element).css("margin-left", tab.filler + "px");
                    }), setPage(getPageForTab(tabsCtrl.getSelectedItem()));
                }
                function disablePagination() {
                    slideTabButtons(0), tabsParent.css("width", ""), tabs.css("width", ""), tabs.css("margin-left", ""), 
                    state.page = null, state.active = !1;
                }
                function waitForVisible() {
                    return watcher || scope.$watch(function() {
                        $timeout(function() {
                            element[0].offsetParent && (angular.isFunction(watcher) && watcher(), debouncedUpdatePagination(), 
                            watcher = null);
                        }, 0, !1);
                    });
                }
                if (element.prop("offsetParent")) {
                    var tabs = element.find("md-tab");
                    disablePagination();
                    var sizeData = state.tabData = calculateTabData(), needPagination = state.active = sizeData.pages.length > 1;
                    needPagination && enablePagination(), scope.$evalAsync(function() {
                        scope.$broadcast("$mdTabsPaginationChanged");
                    });
                } else var watcher = waitForVisible();
            }
            function slideTabButtons(x) {
                function onTabsParentTransitionEnd(ev) {
                    ev.target === tabsParent[0] && (tabsParent.off($mdConstant.CSS.TRANSITIONEND, onTabsParentTransitionEnd), 
                    deferred.resolve());
                }
                if (tabsCtrl.pagingOffset === x) return $$q.when();
                var deferred = $$q.defer();
                return tabsCtrl.$$pagingOffset = x, tabsParent.css($mdConstant.CSS.TRANSFORM, "translate3d(" + x + "px,0,0)"), 
                tabsParent.on($mdConstant.CSS.TRANSITIONEND, onTabsParentTransitionEnd), deferred.promise;
            }
            function shouldStretchTabs() {
                switch (scope.stretchTabs) {
                  case "never":
                    return !1;

                  case "always":
                    return !0;

                  default:
                    return $mdMedia("sm");
                }
            }
            function calculateTabData(noAdjust) {
                function adjustForStretchedTabs() {
                    var canvasWidth = 1 === pages.length ? clientWidth : tabsWidth, tabsPerPage = Math.min(Math.floor(canvasWidth / max), tabs.length), tabWidth = Math.floor(canvasWidth / tabsPerPage);
                    return $tabs.css("width", tabWidth + "px"), calculateTabData(!0);
                }
                var currentPage, clientWidth = element.parent().prop("offsetWidth"), tabsWidth = clientWidth - PAGINATORS_WIDTH - 1, $tabs = angular.element(tabs), totalWidth = 0, max = 0, tabData = [], pages = [];
                return $tabs.css("max-width", ""), angular.forEach(tabs, function(tab, index) {
                    var tabWidth = Math.min(tabsWidth, tab.offsetWidth), data = {
                        element: tab,
                        left: totalWidth,
                        width: tabWidth,
                        right: totalWidth + tabWidth,
                        filler: 0
                    };
                    data.page = Math.ceil(data.right / (1 === pages.length && index === tabs.length - 1 ? clientWidth : tabsWidth)) - 1, 
                    data.page >= pages.length ? (data.filler = tabsWidth * data.page - data.left, data.right += data.filler, 
                    data.left += data.filler, currentPage = {
                        left: data.left,
                        firstTabIndex: index,
                        lastTabIndex: index,
                        tabs: [ data ]
                    }, pages.push(currentPage)) : (currentPage.lastTabIndex = index, currentPage.tabs.push(data)), 
                    totalWidth = data.right, max = Math.max(max, tabWidth), tabData.push(data);
                }), $tabs.css("max-width", tabsWidth + "px"), !noAdjust && shouldStretchTabs() ? adjustForStretchedTabs() : {
                    width: totalWidth,
                    max: max,
                    tabs: tabData,
                    pages: pages,
                    tabElements: tabs
                };
            }
            function getPageForTab(tab) {
                var tabIndex = tabsCtrl.indexOf(tab);
                if (-1 === tabIndex) return 0;
                var sizeData = state.tabData;
                return sizeData ? sizeData.tabs[tabIndex].page : 0;
            }
            function setPage(page) {
                if (page !== state.page) {
                    var lastPage = state.tabData.pages.length - 1;
                    return 0 > page && (page = 0), page > lastPage && (page = lastPage), state.hasPrev = page > 0, 
                    state.hasNext = lastPage > page, state.page = page, scope.$broadcast("$mdTabsPaginationChanged"), 
                    slideTabButtons(-state.tabData.pages[page].left);
                }
            }
            var tabs = element[0].getElementsByTagName("md-tab"), debouncedUpdatePagination = $$rAF.debounce(updatePagination), tabsParent = element.children(), state = scope.pagination = {
                page: -1,
                active: !1,
                clickNext: function() {
                    userChangePage(1);
                },
                clickPrevious: function() {
                    userChangePage(-1);
                }
            };
            scope.$on("$mdTabsChanged", debouncedUpdatePagination), angular.element($window).on("resize", debouncedUpdatePagination), 
            scope.$on("$destroy", function() {
                angular.element($window).off("resize", debouncedUpdatePagination);
            }), scope.$watch(function() {
                return tabsCtrl.tabToFocus;
            }, onTabFocus);
        }
        var PAGINATORS_WIDTH = 64;
        return {
            restrict: "A",
            require: "^mdTabs",
            link: postLink
        };
    }
    angular.module("material.components.tabs").directive("mdTabsPagination", TabPaginationDirective), 
    TabPaginationDirective.$inject = [ "$mdConstant", "$window", "$$rAF", "$$q", "$timeout", "$mdMedia" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function TabItemController($scope, $element, $attrs, $compile, $animate, $mdUtil, $parse, $timeout) {
        function isDisabled() {
            return disabledParsed($scope.$parent);
        }
        function onAdd(contentArea, shouldDisconnectScope) {
            self.content.length && (self.contentContainer.append(self.content), self.contentScope = $scope.$parent.$new(), 
            contentArea.append(self.contentContainer), $compile(self.contentContainer)(self.contentScope), 
            shouldDisconnectScope === !0 && $timeout(function() {
                $mdUtil.disconnectScope(self.contentScope);
            }, 0, !1));
        }
        function onRemove() {
            self.hammertime.destroy(), $animate.leave(self.contentContainer).then(function() {
                self.contentScope && self.contentScope.$destroy(), self.contentScope = null;
            });
        }
        function toggleAnimationClass(rightToLeft) {
            self.contentContainer[rightToLeft ? "addClass" : "removeClass"]("md-transition-rtl");
        }
        function onSelect(rightToLeft) {
            $mdUtil.reconnectScope(self.contentScope), self.hammertime.on("swipeleft swiperight", $scope.onSwipe), 
            $element.addClass("active"), $element.attr("aria-selected", !0), $element.attr("tabIndex", 0), 
            toggleAnimationClass(rightToLeft), $animate.removeClass(self.contentContainer, "ng-hide"), 
            $scope.onSelect();
        }
        function onDeselect(rightToLeft) {
            $mdUtil.disconnectScope(self.contentScope), self.hammertime.off("swipeleft swiperight", $scope.onSwipe), 
            $element.removeClass("active"), $element.attr("aria-selected", !1), $element.attr("tabIndex", -1), 
            toggleAnimationClass(rightToLeft), $animate.addClass(self.contentContainer, "ng-hide"), 
            $scope.onDeselect();
        }
        var self = this;
        self.contentContainer = angular.element('<div class="md-tab-content ng-hide">'), 
        self.hammertime = new Hammer(self.contentContainer[0]), self.element = $element, 
        self.isDisabled = isDisabled, self.onAdd = onAdd, self.onRemove = onRemove, self.onSelect = onSelect, 
        self.onDeselect = onDeselect;
        var disabledParsed = $parse($attrs.ngDisabled);
    }
    angular.module("material.components.tabs").controller("$mdTab", TabItemController), 
    TabItemController.$inject = [ "$scope", "$element", "$attrs", "$compile", "$animate", "$mdUtil", "$parse", "$timeout" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdTabDirective($mdInkRipple, $compile, $mdUtil, $mdConstant, $timeout) {
        function compile(element, attr) {
            var tabLabel = element.find("md-tab-label");
            tabLabel.length ? tabLabel.remove() : tabLabel = angular.isDefined(attr.label) ? angular.element("<md-tab-label>").html(attr.label) : angular.element("<md-tab-label>").append(element.contents().remove());
            var tabContent = element.contents().remove();
            return function(scope, element, attr, ctrls) {
                function transcludeTabContent() {
                    var label = tabLabel.clone();
                    element.append(label), $compile(label)(scope.$parent), tabItemCtrl.content = tabContent.clone();
                }
                function defaultClickListener() {
                    scope.$apply(function() {
                        tabsCtrl.select(tabItemCtrl), tabsCtrl.focus(tabItemCtrl);
                    });
                }
                function keydownListener(ev) {
                    ev.keyCode == $mdConstant.KEY_CODE.SPACE || ev.keyCode == $mdConstant.KEY_CODE.ENTER ? (element.triggerHandler("click"), 
                    ev.preventDefault()) : ev.keyCode === $mdConstant.KEY_CODE.LEFT_ARROW ? scope.$evalAsync(function() {
                        tabsCtrl.focus(tabsCtrl.previous(tabItemCtrl));
                    }) : ev.keyCode === $mdConstant.KEY_CODE.RIGHT_ARROW && scope.$evalAsync(function() {
                        tabsCtrl.focus(tabsCtrl.next(tabItemCtrl));
                    });
                }
                function onSwipe(ev) {
                    scope.$apply(function() {
                        tabsCtrl.select("swipeleft" === ev.type ? tabsCtrl.next() : tabsCtrl.previous());
                    });
                }
                function watchNgRepeatIndex() {
                    scope.$watch("$parent.$index", function(newIndex) {
                        tabsCtrl.move(tabItemCtrl, newIndex);
                    });
                }
                function watchActiveAttribute() {
                    function activeWatchAction(isActive) {
                        var isSelected = tabsCtrl.getSelectedItem() === tabItemCtrl;
                        isActive && !isSelected ? tabsCtrl.select(tabItemCtrl) : !isActive && isSelected && tabsCtrl.deselect(tabItemCtrl);
                    }
                    var unwatch = scope.$parent.$watch("!!(" + attr.mdActive + ")", activeWatchAction);
                    scope.$on("$destroy", unwatch);
                }
                function watchDisabled() {
                    function disabledWatchAction(isDisabled) {
                        element.attr("aria-disabled", isDisabled);
                        var isSelected = tabsCtrl.getSelectedItem() === tabItemCtrl;
                        isSelected && isDisabled && tabsCtrl.select(tabsCtrl.next() || tabsCtrl.previous());
                    }
                    scope.$watch(tabItemCtrl.isDisabled, disabledWatchAction);
                }
                function configureAria() {
                    var tabId = attr.id || "tab_" + $mdUtil.nextUid();
                    if (element.attr({
                        id: tabId,
                        role: "tab",
                        tabIndex: -1
                    }), tabContent.length) {
                        var tabContentId = "content_" + tabId;
                        element.attr("aria-controls") || element.attr("aria-controls", tabContentId), tabItemCtrl.contentContainer.attr({
                            id: tabContentId,
                            role: "tabpanel",
                            "aria-labelledby": tabId
                        });
                    }
                }
                var tabItemCtrl = ctrls[0], tabsCtrl = ctrls[1];
                scope.$watch(function() {
                    return attr.label;
                }, function() {
                    $timeout(function() {
                        tabsCtrl.scope.$broadcast("$mdTabsChanged");
                    }, 0, !1);
                }), transcludeTabContent(), configureAria();
                var detachRippleFn = $mdInkRipple.attachTabBehavior(scope, element, {
                    colorElement: tabsCtrl.inkBarElement
                });
                tabsCtrl.add(tabItemCtrl), scope.$on("$destroy", function() {
                    detachRippleFn(), tabsCtrl.remove(tabItemCtrl);
                }), element.on("$destroy", function() {
                    $timeout(function() {
                        tabsCtrl.scope.$broadcast("$mdTabsChanged");
                    }, 0, !1);
                }), angular.isDefined(attr.ngClick) || element.on("click", defaultClickListener), 
                element.on("keydown", keydownListener), scope.onSwipe = onSwipe, angular.isNumber(scope.$parent.$index) && watchNgRepeatIndex(), 
                angular.isDefined(attr.mdActive) && watchActiveAttribute(), watchDisabled();
            };
        }
        return {
            restrict: "E",
            require: [ "mdTab", "^mdTabs" ],
            controller: "$mdTab",
            scope: {
                onSelect: "&mdOnSelect",
                onDeselect: "&mdOnDeselect",
                label: "@"
            },
            compile: compile
        };
    }
    angular.module("material.components.tabs").directive("mdTab", MdTabDirective), MdTabDirective.$inject = [ "$mdInkRipple", "$compile", "$mdUtil", "$mdConstant", "$timeout" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function MdTabsController($scope, $element, $mdUtil) {
        function getSelectedItem() {
            return itemAt($scope.selectedIndex);
        }
        function getSelectedIndex() {
            return $scope.selectedIndex;
        }
        function add(tab, index) {
            tabsList.add(tab, index), angular.isDefined(tab.element.attr("md-active")) || -1 !== $scope.selectedIndex && angular.isNumber($scope.selectedIndex) && $scope.selectedIndex !== self.indexOf(tab) ? tab.onAdd(self.contentArea, !0) : (tab.onAdd(self.contentArea, !1), 
            self.select(tab)), $scope.$broadcast("$mdTabsChanged");
        }
        function remove(tab, noReselect) {
            if (tabsList.contains(tab) && !noReselect) {
                var isSelectedItem = getSelectedItem() === tab, newTab = previous() || next();
                deselect(tab), tabsList.remove(tab), tab.onRemove(), $scope.$broadcast("$mdTabsChanged"), 
                isSelectedItem && select(newTab);
            }
        }
        function move(tab, toIndex) {
            var isSelected = getSelectedItem() === tab;
            tabsList.remove(tab), tabsList.add(tab, toIndex), isSelected && select(tab), $scope.$broadcast("$mdTabsChanged");
        }
        function select(tab, rightToLeft) {
            !tab || tab.isSelected || tab.isDisabled() || tabsList.contains(tab) && (angular.isDefined(rightToLeft) || (rightToLeft = indexOf(tab) < $scope.selectedIndex), 
            deselect(getSelectedItem(), rightToLeft), $scope.selectedIndex = indexOf(tab), tab.isSelected = !0, 
            tab.onSelect(rightToLeft), $scope.$broadcast("$mdTabsChanged"));
        }
        function focus(tab) {
            self.tabToFocus = tab;
        }
        function deselect(tab, rightToLeft) {
            tab && tab.isSelected && tabsList.contains(tab) && ($scope.selectedIndex = -1, tab.isSelected = !1, 
            tab.onDeselect(rightToLeft));
        }
        function next(tab, filterFn) {
            return tabsList.next(tab || getSelectedItem(), filterFn || isTabEnabled);
        }
        function previous(tab, filterFn) {
            return tabsList.previous(tab || getSelectedItem(), filterFn || isTabEnabled);
        }
        function isTabEnabled(tab) {
            return tab && !tab.isDisabled();
        }
        var tabsList = $mdUtil.iterator([], !1), self = this;
        self.$element = $element, self.scope = $scope;
        var indexOf = (self.contentArea = angular.element($element[0].querySelector(".md-tabs-content")), 
        self.inRange = tabsList.inRange, self.indexOf = tabsList.indexOf), itemAt = self.itemAt = tabsList.itemAt;
        self.count = tabsList.count, self.getSelectedItem = getSelectedItem, self.getSelectedIndex = getSelectedIndex, 
        self.add = add, self.remove = remove, self.move = move, self.select = select, self.focus = focus, 
        self.deselect = deselect, self.next = next, self.previous = previous, $scope.$on("$destroy", function() {
            deselect(getSelectedItem());
            for (var i = tabsList.count() - 1; i >= 0; i--) remove(tabsList[i], !0);
        });
    }
    angular.module("material.components.tabs").controller("$mdTabs", MdTabsController), 
    MdTabsController.$inject = [ "$scope", "$element", "$mdUtil", "$timeout" ];
}(), /*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0
 */
function() {
    "use strict";
    function TabsDirective($mdTheming) {
        function postLink(scope, element, attr, tabsCtrl, transclude) {
            function configureAria() {
                element.attr("role", "tablist");
            }
            function watchSelected() {
                scope.$watch("selectedIndex", function(newIndex, oldIndex) {
                    if (oldIndex != newIndex) {
                        var rightToLeft = oldIndex > newIndex;
                        if (tabsCtrl.deselect(tabsCtrl.itemAt(oldIndex), rightToLeft), tabsCtrl.inRange(newIndex)) {
                            for (var newTab = tabsCtrl.itemAt(newIndex); newTab && newTab.isDisabled(); ) newTab = newIndex > oldIndex ? tabsCtrl.next(newTab) : tabsCtrl.previous(newTab);
                            tabsCtrl.select(newTab, rightToLeft);
                        }
                    }
                });
            }
            scope.stretchTabs = attr.hasOwnProperty("mdStretchTabs") ? attr.mdStretchTabs || "always" : "auto", 
            $mdTheming(element), configureAria(), watchSelected(), transclude(scope.$parent, function(clone) {
                angular.element(element[0].querySelector(".md-header-items")).append(clone);
            });
        }
        return {
            restrict: "E",
            controller: "$mdTabs",
            require: "mdTabs",
            transclude: !0,
            scope: {
                selectedIndex: "=?mdSelected"
            },
            template: '<section class="md-header" ng-class="{\'md-paginating\': pagination.active}"><button class="md-paginator md-prev" ng-if="pagination.active && pagination.hasPrev" ng-click="pagination.clickPrevious()" aria-hidden="true"></button><div class="md-header-items-container" md-tabs-pagination><div class="md-header-items"><md-tabs-ink-bar></md-tabs-ink-bar></div></div><button class="md-paginator md-next" ng-if="pagination.active && pagination.hasNext" ng-click="pagination.clickNext()" aria-hidden="true"></button></section><section class="md-tabs-content"></section>',
            link: postLink
        };
    }
    angular.module("material.components.tabs").directive("mdTabs", TabsDirective), TabsDirective.$inject = [ "$mdTheming" ];
}(), angular.module("material.core").constant("$MD_THEME_CSS", "md-backdrop.md-opaque.md-THEME_NAME-theme {  background-color: '{{foreground-4-0.5}}';  position: absolute; }md-bottom-sheet.md-THEME_NAME-theme {  background-color: '{{background-50}}';  border-top-color: '{{background-300}}'; }  md-bottom-sheet.md-THEME_NAME-theme.md-list md-item {    color: '{{foreground-1}}'; }  md-bottom-sheet.md-THEME_NAME-theme .md-subheader {    background-color: '{{background-50}}'; }  md-bottom-sheet.md-THEME_NAME-theme .md-subheader {    color: '{{foreground-1}}'; }.md-button.md-THEME_NAME-theme {  border-radius: 3px; }  .md-button.md-THEME_NAME-theme:not([disabled]):hover, .md-button.md-THEME_NAME-theme:not([disabled]):focus {    background-color: '{{background-500-0.2}}'; }  .md-button.md-THEME_NAME-theme.md-primary {    color: '{{primary-color}}'; }    .md-button.md-THEME_NAME-theme.md-primary.md-raised, .md-button.md-THEME_NAME-theme.md-primary.md-fab {      color: '{{primary-contrast}}';      background-color: '{{primary-color}}'; }      .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]):focus, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]):focus {        background-color: '{{primary-600}}'; }  .md-button.md-THEME_NAME-theme.md-fab {    border-radius: 50%; }  .md-button.md-THEME_NAME-theme.md-raised, .md-button.md-THEME_NAME-theme.md-fab {    color: '{{background-contrast}}';    background-color: '{{background-500-0.185}}'; }    .md-button.md-THEME_NAME-theme.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-raised:not([disabled]):focus, .md-button.md-THEME_NAME-theme.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-fab:not([disabled]):focus {      background-color: '{{background-500-0.3}}'; }  .md-button.md-THEME_NAME-theme.md-warn {    color: '{{warn-color}}'; }    .md-button.md-THEME_NAME-theme.md-warn.md-raised, .md-button.md-THEME_NAME-theme.md-warn.md-fab {      color: '{{warn-contrast}}';      background-color: '{{warn-color}}'; }      .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]):focus, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]):focus {        background-color: '{{warn-700}}'; }  .md-button.md-THEME_NAME-theme.md-accent {    color: '{{accent-color}}'; }    .md-button.md-THEME_NAME-theme.md-accent.md-raised, .md-button.md-THEME_NAME-theme.md-accent.md-fab {      color: '{{accent-contrast}}';      background-color: '{{accent-color}}'; }      .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]):focus, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]):focus {        background-color: '{{accent-700}}'; }  .md-button.md-THEME_NAME-theme[disabled], .md-button.md-THEME_NAME-theme.md-raised[disabled], .md-button.md-THEME_NAME-theme.md-fab[disabled] {    color: '{{foreground-3}}';    background-color: transparent;    cursor: not-allowed; }md-checkbox.md-THEME_NAME-theme .md-ripple {  color: '{{primary-600}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-ripple {  color: '{{background-600}}'; }md-checkbox.md-THEME_NAME-theme .md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-icon {  background-color: '{{primary-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-accent .md-ripple {  color: '{{accent-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-accent.md-checked .md-ripple {  color: '{{background-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-accent .md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-accent.md-checked .md-icon {  background-color: '{{accent-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-accent.md-checked .md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn .md-ripple {  color: '{{warn-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn .md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-icon {  background-color: '{{warn-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme[disabled] .md-icon {  border-color: '{{foreground-3}}'; }md-checkbox.md-THEME_NAME-theme[disabled].md-checked .md-icon {  background-color: '{{foreground-3}}'; }md-card.md-THEME_NAME-theme {  border-radius: 2px; }  md-card.md-THEME_NAME-theme .md-card-image {    border-radius: 2px 2px 0 0; }md-content.md-THEME_NAME-theme {  background-color: '{{background-hue-3}}'; }md-dialog.md-THEME_NAME-theme {  border-radius: 4px;  background-color: '{{background-hue-3}}'; }  md-dialog.md-THEME_NAME-theme.md-content-overflow .md-actions {    border-top-color: '{{foreground-4}}'; }md-divider.md-THEME_NAME-theme {  border-top-color: '{{foreground-4}}'; }md-input-container.md-THEME_NAME-theme .md-input {  color: '{{foreground-1}}';  border-color: '{{foreground-4}}';  text-shadow: '{{foreground-shadow}}'; }  md-input-container.md-THEME_NAME-theme .md-input::-webkit-input-placeholder, md-input-container.md-THEME_NAME-theme .md-input::-moz-placeholder, md-input-container.md-THEME_NAME-theme .md-input:-moz-placeholder, md-input-container.md-THEME_NAME-theme .md-input:-ms-input-placeholder {    color: '{{foreground-3}}'; }md-input-container.md-THEME_NAME-theme label {  text-shadow: '{{foreground-shadow}}';  color: '{{foreground-3}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-has-value label {  color: '{{foreground-2}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused .md-input {  border-color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused label {  color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-accent .md-input {  border-color: '{{accent-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-accent label {  color: '{{accent-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-warn .md-input {  border-color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-warn label {  color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid .md-input {  border-color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid label {  color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid ng-message, md-input-container.md-THEME_NAME-theme.md-input-invalid data-ng-message, md-input-container.md-THEME_NAME-theme.md-input-invalid x-ng-message, md-input-container.md-THEME_NAME-theme.md-input-invalid [ng-message], md-input-container.md-THEME_NAME-theme.md-input-invalid [data-ng-message], md-input-container.md-THEME_NAME-theme.md-input-invalid [x-ng-message], md-input-container.md-THEME_NAME-theme.md-input-invalid .md-char-counter {  color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme .md-input[disabled] {  border-bottom-color: transparent;  color: '{{foreground-3}}';  background-image: linear-gradient(to right, '{{foreground-4}}' 0%, '{{foreground-4}}' 33%, transparent 0%); }md-progress-circular.md-THEME_NAME-theme {  background-color: transparent; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-gap {    border-top-color: '{{primary-color}}';    border-bottom-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-left .md-half-circle, md-progress-circular.md-THEME_NAME-theme .md-inner .md-right .md-half-circle {    border-top-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-right .md-half-circle {    border-right-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-left .md-half-circle {    border-left-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-gap {    border-top-color: '{{warn-color}}';    border-bottom-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-left .md-half-circle, md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-right .md-half-circle {    border-top-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-right .md-half-circle {    border-right-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-left .md-half-circle {    border-left-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-gap {    border-top-color: '{{accent-color}}';    border-bottom-color: '{{accent-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-left .md-half-circle, md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-right .md-half-circle {    border-top-color: '{{accent-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-right .md-half-circle {    border-right-color: '{{accent-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-left .md-half-circle {    border-left-color: '{{accent-color}}'; }md-progress-linear.md-THEME_NAME-theme .md-container {  background-color: '{{primary-100}}'; }md-progress-linear.md-THEME_NAME-theme .md-bar {  background-color: '{{primary-color}}'; }md-progress-linear.md-THEME_NAME-theme.md-warn .md-container {  background-color: '{{warn-100}}'; }md-progress-linear.md-THEME_NAME-theme.md-warn .md-bar {  background-color: '{{warn-color}}'; }md-progress-linear.md-THEME_NAME-theme.md-accent .md-container {  background-color: '{{accent-100}}'; }md-progress-linear.md-THEME_NAME-theme.md-accent .md-bar {  background-color: '{{accent-color}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-warn .md-bar1 {  background-color: '{{warn-100}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-warn .md-dashed:before {  background: radial-gradient('{{warn-100}}' 0%, '{{warn-100}}' 16%, transparent 42%); }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-accent .md-bar1 {  background-color: '{{accent-100}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-accent .md-dashed:before {  background: radial-gradient('{{accent-100}}' 0%, '{{accent-100}}' 16%, transparent 42%); }md-radio-button.md-THEME_NAME-theme .md-off {  border-color: '{{foreground-2}}'; }md-radio-button.md-THEME_NAME-theme .md-on {  background-color: '{{primary-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme.md-checked .md-off {  border-color: '{{primary-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme.md-checked .md-ink-ripple {  color: '{{primary-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme .md-container .md-ripple {  color: '{{primary-600}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-accent .md-on {  background-color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-accent.md-checked .md-off {  border-color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-accent.md-checked .md-ink-ripple {  color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-accent .md-container .md-ripple {  color: '{{accent-600}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-on {  background-color: '{{warn-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-off {  border-color: '{{warn-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple {  color: '{{warn-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-container .md-ripple {  color: '{{warn-600}}'; }md-radio-button.md-THEME_NAME-theme[disabled] .md-container .md-off {  border-color: '{{foreground-3}}'; }md-radio-button.md-THEME_NAME-theme[disabled] .md-container .md-on {  border-color: '{{foreground-3}}'; }md-radio-group.md-THEME_NAME-theme:focus:not(:empty) {  border-color: '{{foreground-1}}'; }md-sidenav.md-THEME_NAME-theme {  background-color: '{{background-hue-3}}'; }md-slider.md-THEME_NAME-theme .md-track {  background-color: '{{foreground-3}}'; }md-slider.md-THEME_NAME-theme .md-track-ticks {  background-color: '{{foreground-4}}'; }md-slider.md-THEME_NAME-theme .md-focus-thumb {  background-color: '{{foreground-2}}'; }md-slider.md-THEME_NAME-theme .md-focus-ring {  border-color: '{{foreground-4}}'; }md-slider.md-THEME_NAME-theme .md-disabled-thumb {  border-color: '{{background-hue-3}}'; }md-slider.md-THEME_NAME-theme.md-min .md-thumb:after {  background-color: '{{background-hue-3}}'; }md-slider.md-THEME_NAME-theme .md-track.md-track-fill {  background-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme .md-thumb:after {  border-color: '{{primary-color}}';  background-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme .md-sign {  background-color: '{{primary-color}}'; }  md-slider.md-THEME_NAME-theme .md-sign:after {    border-top-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme .md-thumb-text {  color: '{{primary-contrast}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-track-fill {  background-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-thumb:after {  border-color: '{{warn-color}}';  background-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-sign {  background-color: '{{warn-color}}'; }  md-slider.md-THEME_NAME-theme.md-warn .md-sign:after {    border-top-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-thumb-text {  color: '{{warn-contrast}}'; }md-slider.md-THEME_NAME-theme.md-accent .md-track-fill {  background-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme.md-accent .md-thumb:after {  border-color: '{{accent-color}}';  background-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme.md-accent .md-sign {  background-color: '{{accent-color}}'; }  md-slider.md-THEME_NAME-theme.md-accent .md-sign:after {    border-top-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme.md-accent .md-thumb-text {  color: '{{accent-contrast}}'; }md-slider.md-THEME_NAME-theme[disabled] .md-thumb:after {  border-color: '{{foreground-3}}'; }md-slider.md-THEME_NAME-theme[disabled]:not(.md-min) .md-thumb:after {  background-color: '{{foreground-3}}'; }.md-subheader.md-THEME_NAME-theme {  color: '{{ foreground-2-0.23 }}';  background-color: '{{background-hue-3}}'; }  .md-subheader.md-THEME_NAME-theme.md-primary {    color: '{{primary-color}}'; }  .md-subheader.md-THEME_NAME-theme.md-accent {    color: '{{accent-color}}'; }  .md-subheader.md-THEME_NAME-theme.md-warn {    color: '{{warn-color}}'; }md-switch.md-THEME_NAME-theme .md-thumb {  background-color: '{{background-50}}'; }md-switch.md-THEME_NAME-theme .md-bar {  background-color: '{{background-500}}'; }md-switch.md-THEME_NAME-theme.md-checked .md-thumb {  background-color: '{{primary-color}}'; }md-switch.md-THEME_NAME-theme.md-checked .md-bar {  background-color: '{{primary-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-accent .md-thumb {  background-color: '{{accent-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-accent .md-bar {  background-color: '{{accent-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn .md-thumb {  background-color: '{{warn-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn .md-bar {  background-color: '{{warn-color-0.5}}'; }md-switch.md-THEME_NAME-theme[disabled] .md-thumb {  background-color: '{{background-400}}'; }md-switch.md-THEME_NAME-theme[disabled] .md-bar {  background-color: '{{foreground-4}}'; }md-switch.md-THEME_NAME-theme:focus .md-label:not(:empty) {  border-color: '{{foreground-1}}';  border-style: dotted; }md-tabs.md-THEME_NAME-theme .md-header {  background-color: '{{primary-color}}'; }md-tabs.md-THEME_NAME-theme.md-accent .md-header {  background-color: '{{accent-color}}'; }md-tabs.md-THEME_NAME-theme.md-accent md-tab:not([disabled]) {  color: '{{accent-100}}'; }  md-tabs.md-THEME_NAME-theme.md-accent md-tab:not([disabled]).active {    color: '{{accent-contrast}}'; }md-tabs.md-THEME_NAME-theme.md-warn .md-header {  background-color: '{{warn-color}}'; }md-tabs.md-THEME_NAME-theme.md-warn md-tab:not([disabled]) {  color: '{{warn-100}}'; }  md-tabs.md-THEME_NAME-theme.md-warn md-tab:not([disabled]).active {    color: '{{warn-contrast}}'; }md-tabs.md-THEME_NAME-theme md-tabs-ink-bar {  color: '{{primary-contrast}}';  background: '{{primary-contrast}}'; }md-tabs.md-THEME_NAME-theme md-tab {  color: '{{primary-100}}'; }  md-tabs.md-THEME_NAME-theme md-tab.active {    color: '{{primary-contrast}}'; }  md-tabs.md-THEME_NAME-theme md-tab[disabled] {    color: '{{foreground-4}}'; }  md-tabs.md-THEME_NAME-theme md-tab:focus {    color: '{{primary-contrast}}';    background-color: '{{primary-contrast-0.1}}'; }  md-tabs.md-THEME_NAME-theme md-tab .md-ripple-container {    color: '{{primary-contrast}}'; }md-input-group.md-THEME_NAME-theme input, md-input-group.md-THEME_NAME-theme textarea {  text-shadow: '{{foreground-shadow}}'; }  md-input-group.md-THEME_NAME-theme input::-webkit-input-placeholder, md-input-group.md-THEME_NAME-theme input::-moz-placeholder, md-input-group.md-THEME_NAME-theme input:-moz-placeholder, md-input-group.md-THEME_NAME-theme input:-ms-input-placeholder, md-input-group.md-THEME_NAME-theme textarea::-webkit-input-placeholder, md-input-group.md-THEME_NAME-theme textarea::-moz-placeholder, md-input-group.md-THEME_NAME-theme textarea:-moz-placeholder, md-input-group.md-THEME_NAME-theme textarea:-ms-input-placeholder {    color: '{{foreground-3}}'; }md-input-group.md-THEME_NAME-theme label {  text-shadow: '{{foreground-shadow}}';  color: '{{foreground-3}}'; }md-input-group.md-THEME_NAME-theme input, md-input-group.md-THEME_NAME-theme textarea {  color: '{{foreground-1}}';  border-color: '{{foreground-4}}'; }md-input-group.md-THEME_NAME-theme.md-input-focused input, md-input-group.md-THEME_NAME-theme.md-input-focused textarea {  border-color: '{{primary-500}}'; }md-input-group.md-THEME_NAME-theme.md-input-focused label {  color: '{{primary-500}}'; }md-input-group.md-THEME_NAME-theme.md-input-focused.md-accent input, md-input-group.md-THEME_NAME-theme.md-input-focused.md-accent textarea {  border-color: '{{accent-500}}'; }md-input-group.md-THEME_NAME-theme.md-input-focused.md-accent label {  color: '{{accent-500}}'; }md-input-group.md-THEME_NAME-theme.md-input-has-value:not(.md-input-focused) label {  color: '{{foreground-2}}'; }md-input-group.md-THEME_NAME-theme .md-input[disabled] {  border-bottom-color: '{{foreground-4}}';  color: '{{foreground-3}}'; }md-toast.md-THEME_NAME-theme {  background-color: '{{foreground-1}}';  color: '{{background-50}}'; }  md-toast.md-THEME_NAME-theme .md-button {    color: '{{background-50}}'; }  md-toast.md-THEME_NAME-theme .md-action {    color: '{{primary-A200}}'; }    md-toast.md-THEME_NAME-theme .md-action.md-accent {      color: '{{accent-A200}}'; }    md-toast.md-THEME_NAME-theme .md-action.md-warn {      color: '{{warn-A200}}'; }md-toolbar.md-THEME_NAME-theme {  background-color: '{{primary-color}}';  color: '{{primary-contrast}}'; }  md-toolbar.md-THEME_NAME-theme .md-button {    color: '{{primary-contrast}}'; }  md-toolbar.md-THEME_NAME-theme.md-accent {    background-color: '{{accent-color}}';    color: '{{accent-contrast}}'; }  md-toolbar.md-THEME_NAME-theme.md-warn {    background-color: '{{warn-color}}';    color: '{{warn-contrast}}'; }md-tooltip.md-THEME_NAME-theme {  color: '{{background-A100}}'; }  md-tooltip.md-THEME_NAME-theme .md-background {    background-color: '{{foreground-2}}'; }"), 
/** 
* @version 1.4.9
* @license MIT
*/
!function(t, e) {
    "use strict";
    t.module("smart-table", []).run([ "$templateCache", function(t) {
        t.put("template/smart-table/pagination.html", '<div class="pagination" ng-if="pages.length >= 2"><ul class="pagination"><li ng-repeat="page in pages" ng-class="{active: page==currentPage}"><a ng-click="selectPage(page)">{{page}}</a></li></ul></div>');
    } ]), t.module("smart-table").controller("stTableController", [ "$scope", "$parse", "$filter", "$attrs", function(a, s, n, r) {
        function i(t) {
            return t ? [].concat(t) : [];
        }
        function c() {
            m = i(l(a)), b === !0 && S.pipe();
        }
        var l, o, u = r.stTable, p = s(u), f = p.assign, g = n("orderBy"), d = n("filter"), m = i(p(a)), h = {
            sort: {},
            search: {},
            pagination: {
                start: 0
            }
        }, b = !0, S = this;
        r.stSafeSrc && (l = s(r.stSafeSrc), a.$watch(function() {
            var t = l(a);
            return t ? t.length : 0;
        }, function(t) {
            t !== m.length && c();
        }), a.$watch(function() {
            return l(a);
        }, function(t, e) {
            t !== e && c();
        })), this.sortBy = function(e, a) {
            return h.sort.predicate = e, h.sort.reverse = a === !0, t.isFunction(e) ? h.sort.functionName = e.name : delete h.sort.functionName, 
            h.pagination.start = 0, this.pipe();
        }, this.search = function(t, e) {
            var a = h.search.predicateObject || {}, s = e ? e : "$";
            return a[s] = t, t || delete a[s], h.search.predicateObject = a, h.pagination.start = 0, 
            this.pipe();
        }, this.pipe = function() {
            var t = h.pagination, s = h.search.predicateObject ? d(m, h.search.predicateObject) : m;
            h.sort.predicate && (s = g(s, h.sort.predicate, h.sort.reverse)), t.number !== e && (t.numberOfPages = s.length > 0 ? Math.ceil(s.length / t.number) : 1, 
            t.start = t.start >= s.length ? (t.numberOfPages - 1) * t.number : t.start, s = s.slice(t.start, t.start + parseInt(t.number))), 
            f(a, s);
        }, this.select = function(t, a) {
            var s = m, n = s.indexOf(t);
            -1 !== n && ("single" === a ? (t.isSelected = t.isSelected !== !0, o && (o.isSelected = !1), 
            o = t.isSelected === !0 ? t : e) : s[n].isSelected = !s[n].isSelected);
        }, this.slice = function(t, e) {
            return h.pagination.start = t, h.pagination.number = e, this.pipe();
        }, this.tableState = function() {
            return h;
        }, this.setFilterFunction = function(t) {
            d = n(t);
        }, this.setSortFunction = function(t) {
            g = n(t);
        }, this.preventPipeOnWatch = function() {
            b = !1;
        };
    } ]).directive("stTable", function() {
        return {
            restrict: "A",
            controller: "stTableController",
            link: function(t, e, a, s) {
                a.stSetFilter && s.setFilterFunction(a.stSetFilter), a.stSetSort && s.setSortFunction(a.stSetSort);
            }
        };
    }), t.module("smart-table").directive("stSearch", [ "$timeout", function(t) {
        return {
            require: "^stTable",
            scope: {
                predicate: "=?stSearch"
            },
            link: function(e, a, s, n) {
                var r = n, i = null, c = s.stDelay || 400;
                e.$watch("predicate", function(t, e) {
                    t !== e && (n.tableState().search = {}, r.search(a[0].value || "", t));
                }), e.$watch(function() {
                    return n.tableState().search;
                }, function(t) {
                    var s = e.predicate || "$";
                    t.predicateObject && t.predicateObject[s] !== a[0].value && (a[0].value = t.predicateObject[s] || "");
                }, !0), a.bind("input", function(a) {
                    a = a.originalEvent || a, null !== i && t.cancel(i), i = t(function() {
                        r.search(a.target.value, e.predicate || ""), i = null;
                    }, c);
                });
            }
        };
    } ]), t.module("smart-table").directive("stSelectRow", function() {
        return {
            restrict: "A",
            require: "^stTable",
            scope: {
                row: "=stSelectRow"
            },
            link: function(t, e, a, s) {
                var n = a.stSelectMode || "single";
                e.bind("click", function() {
                    t.$apply(function() {
                        s.select(t.row, n);
                    });
                }), t.$watch("row.isSelected", function(t) {
                    t === !0 ? e.addClass("st-selected") : e.removeClass("st-selected");
                });
            }
        };
    }), t.module("smart-table").directive("stSort", [ "$parse", function(a) {
        return {
            restrict: "A",
            require: "^stTable",
            link: function(s, n, r, i) {
                function c() {
                    p++, o = t.isFunction(u(s)) ? u(s) : r.stSort, p % 3 === 0 && r.stSkipNatural === e ? (p = 0, 
                    i.tableState().sort = {}, i.tableState().pagination.start = 0, i.pipe()) : i.sortBy(o, p % 2 === 0);
                }
                var l, o = r.stSort, u = a(o), p = 0, f = r.stClassAscent || "st-sort-ascent", g = r.stClassDescent || "st-sort-descent", d = [ f, g ];
                r.stSortDefault && (l = s.$eval(r.stSortDefault) !== e ? s.$eval(r.stSortDefault) : r.stSortDefault), 
                n.bind("click", function() {
                    o && s.$apply(c);
                }), l && (p = "reverse" === r.stSortDefault ? 1 : 0, c()), s.$watch(function() {
                    return i.tableState().sort;
                }, function(t) {
                    t.predicate !== o ? (p = 0, n.removeClass(f).removeClass(g)) : (p = t.reverse === !0 ? 2 : 1, 
                    n.removeClass(d[p % 2]).addClass(d[p - 1]));
                }, !0);
            }
        };
    } ]), t.module("smart-table").directive("stPagination", function() {
        return {
            restrict: "EA",
            require: "^stTable",
            scope: {
                stItemsByPage: "=?",
                stDisplayedPages: "=?"
            },
            templateUrl: function(t, e) {
                return e.stTemplate ? e.stTemplate : "template/smart-table/pagination.html";
            },
            link: function(t, e, a, s) {
                function n() {
                    var e, a, n = s.tableState().pagination, r = 1;
                    for (t.currentPage = Math.floor(n.start / n.number) + 1, r = Math.max(r, t.currentPage - Math.abs(Math.floor(t.stDisplayedPages / 2))), 
                    e = r + t.stDisplayedPages, e > n.numberOfPages && (e = n.numberOfPages + 1, r = Math.max(1, e - t.stDisplayedPages)), 
                    t.pages = [], t.numPages = n.numberOfPages, a = r; e > a; a++) t.pages.push(a);
                }
                t.stItemsByPage = t.stItemsByPage ? +t.stItemsByPage : 10, t.stDisplayedPages = t.stDisplayedPages ? +t.stDisplayedPages : 5, 
                t.currentPage = 1, t.pages = [], t.$watch(function() {
                    return s.tableState().pagination;
                }, n, !0), t.$watch("stItemsByPage", function() {
                    t.selectPage(1);
                }), t.$watch("stDisplayedPages", n), t.selectPage = function(e) {
                    e > 0 && e <= t.numPages && s.slice((e - 1) * t.stItemsByPage, t.stItemsByPage);
                }, s.slice(0, t.stItemsByPage);
            }
        };
    }), t.module("smart-table").directive("stPipe", function() {
        return {
            require: "stTable",
            scope: {
                stPipe: "="
            },
            link: {
                pre: function(e, a, s, n) {
                    t.isFunction(e.stPipe) && (n.preventPipeOnWatch(), n.pipe = function() {
                        return e.stPipe(n.tableState(), n);
                    });
                }
            }
        };
    });
}(angular), //! moment.js
//! version : 2.8.4
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
function(a) {
    function b(a, b, c) {
        switch (arguments.length) {
          case 2:
            return null != a ? a : b;

          case 3:
            return null != a ? a : null != b ? b : c;

          default:
            throw new Error("Implement me");
        }
    }
    function c(a, b) {
        return zb.call(a, b);
    }
    function d() {
        return {
            empty: !1,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1
        };
    }
    function e(a) {
        tb.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + a);
    }
    function f(a, b) {
        var c = !0;
        return m(function() {
            return c && (e(a), c = !1), b.apply(this, arguments);
        }, b);
    }
    function g(a, b) {
        qc[a] || (e(b), qc[a] = !0);
    }
    function h(a, b) {
        return function(c) {
            return p(a.call(this, c), b);
        };
    }
    function i(a, b) {
        return function(c) {
            return this.localeData().ordinal(a.call(this, c), b);
        };
    }
    function j() {}
    function k(a, b) {
        b !== !1 && F(a), n(this, a), this._d = new Date(+a._d);
    }
    function l(a) {
        var b = y(a), c = b.year || 0, d = b.quarter || 0, e = b.month || 0, f = b.week || 0, g = b.day || 0, h = b.hour || 0, i = b.minute || 0, j = b.second || 0, k = b.millisecond || 0;
        this._milliseconds = +k + 1e3 * j + 6e4 * i + 36e5 * h, this._days = +g + 7 * f, 
        this._months = +e + 3 * d + 12 * c, this._data = {}, this._locale = tb.localeData(), 
        this._bubble();
    }
    function m(a, b) {
        for (var d in b) c(b, d) && (a[d] = b[d]);
        return c(b, "toString") && (a.toString = b.toString), c(b, "valueOf") && (a.valueOf = b.valueOf), 
        a;
    }
    function n(a, b) {
        var c, d, e;
        if ("undefined" != typeof b._isAMomentObject && (a._isAMomentObject = b._isAMomentObject), 
        "undefined" != typeof b._i && (a._i = b._i), "undefined" != typeof b._f && (a._f = b._f), 
        "undefined" != typeof b._l && (a._l = b._l), "undefined" != typeof b._strict && (a._strict = b._strict), 
        "undefined" != typeof b._tzm && (a._tzm = b._tzm), "undefined" != typeof b._isUTC && (a._isUTC = b._isUTC), 
        "undefined" != typeof b._offset && (a._offset = b._offset), "undefined" != typeof b._pf && (a._pf = b._pf), 
        "undefined" != typeof b._locale && (a._locale = b._locale), Ib.length > 0) for (c in Ib) d = Ib[c], 
        e = b[d], "undefined" != typeof e && (a[d] = e);
        return a;
    }
    function o(a) {
        return 0 > a ? Math.ceil(a) : Math.floor(a);
    }
    function p(a, b, c) {
        for (var d = "" + Math.abs(a), e = a >= 0; d.length < b; ) d = "0" + d;
        return (e ? c ? "+" : "" : "-") + d;
    }
    function q(a, b) {
        var c = {
            milliseconds: 0,
            months: 0
        };
        return c.months = b.month() - a.month() + 12 * (b.year() - a.year()), a.clone().add(c.months, "M").isAfter(b) && --c.months, 
        c.milliseconds = +b - +a.clone().add(c.months, "M"), c;
    }
    function r(a, b) {
        var c;
        return b = K(b, a), a.isBefore(b) ? c = q(a, b) : (c = q(b, a), c.milliseconds = -c.milliseconds, 
        c.months = -c.months), c;
    }
    function s(a, b) {
        return function(c, d) {
            var e, f;
            return null === d || isNaN(+d) || (g(b, "moment()." + b + "(period, number) is deprecated. Please use moment()." + b + "(number, period)."), 
            f = c, c = d, d = f), c = "string" == typeof c ? +c : c, e = tb.duration(c, d), 
            t(this, e, a), this;
        };
    }
    function t(a, b, c, d) {
        var e = b._milliseconds, f = b._days, g = b._months;
        d = null == d ? !0 : d, e && a._d.setTime(+a._d + e * c), f && nb(a, "Date", mb(a, "Date") + f * c), 
        g && lb(a, mb(a, "Month") + g * c), d && tb.updateOffset(a, f || g);
    }
    function u(a) {
        return "[object Array]" === Object.prototype.toString.call(a);
    }
    function v(a) {
        return "[object Date]" === Object.prototype.toString.call(a) || a instanceof Date;
    }
    function w(a, b, c) {
        var d, e = Math.min(a.length, b.length), f = Math.abs(a.length - b.length), g = 0;
        for (d = 0; e > d; d++) (c && a[d] !== b[d] || !c && A(a[d]) !== A(b[d])) && g++;
        return g + f;
    }
    function x(a) {
        if (a) {
            var b = a.toLowerCase().replace(/(.)s$/, "$1");
            a = jc[a] || kc[b] || b;
        }
        return a;
    }
    function y(a) {
        var b, d, e = {};
        for (d in a) c(a, d) && (b = x(d), b && (e[b] = a[d]));
        return e;
    }
    function z(b) {
        var c, d;
        if (0 === b.indexOf("week")) c = 7, d = "day"; else {
            if (0 !== b.indexOf("month")) return;
            c = 12, d = "month";
        }
        tb[b] = function(e, f) {
            var g, h, i = tb._locale[b], j = [];
            if ("number" == typeof e && (f = e, e = a), h = function(a) {
                var b = tb().utc().set(d, a);
                return i.call(tb._locale, b, e || "");
            }, null != f) return h(f);
            for (g = 0; c > g; g++) j.push(h(g));
            return j;
        };
    }
    function A(a) {
        var b = +a, c = 0;
        return 0 !== b && isFinite(b) && (c = b >= 0 ? Math.floor(b) : Math.ceil(b)), c;
    }
    function B(a, b) {
        return new Date(Date.UTC(a, b + 1, 0)).getUTCDate();
    }
    function C(a, b, c) {
        return hb(tb([ a, 11, 31 + b - c ]), b, c).week;
    }
    function D(a) {
        return E(a) ? 366 : 365;
    }
    function E(a) {
        return a % 4 === 0 && a % 100 !== 0 || a % 400 === 0;
    }
    function F(a) {
        var b;
        a._a && -2 === a._pf.overflow && (b = a._a[Bb] < 0 || a._a[Bb] > 11 ? Bb : a._a[Cb] < 1 || a._a[Cb] > B(a._a[Ab], a._a[Bb]) ? Cb : a._a[Db] < 0 || a._a[Db] > 24 || 24 === a._a[Db] && (0 !== a._a[Eb] || 0 !== a._a[Fb] || 0 !== a._a[Gb]) ? Db : a._a[Eb] < 0 || a._a[Eb] > 59 ? Eb : a._a[Fb] < 0 || a._a[Fb] > 59 ? Fb : a._a[Gb] < 0 || a._a[Gb] > 999 ? Gb : -1, 
        a._pf._overflowDayOfYear && (Ab > b || b > Cb) && (b = Cb), a._pf.overflow = b);
    }
    function G(b) {
        return null == b._isValid && (b._isValid = !isNaN(b._d.getTime()) && b._pf.overflow < 0 && !b._pf.empty && !b._pf.invalidMonth && !b._pf.nullInput && !b._pf.invalidFormat && !b._pf.userInvalidated, 
        b._strict && (b._isValid = b._isValid && 0 === b._pf.charsLeftOver && 0 === b._pf.unusedTokens.length && b._pf.bigHour === a)), 
        b._isValid;
    }
    function H(a) {
        return a ? a.toLowerCase().replace("_", "-") : a;
    }
    function I(a) {
        for (var b, c, d, e, f = 0; f < a.length; ) {
            for (e = H(a[f]).split("-"), b = e.length, c = H(a[f + 1]), c = c ? c.split("-") : null; b > 0; ) {
                if (d = J(e.slice(0, b).join("-"))) return d;
                if (c && c.length >= b && w(e, c, !0) >= b - 1) break;
                b--;
            }
            f++;
        }
        return null;
    }
    function J(a) {
        var b = null;
        if (!Hb[a] && Jb) try {
            b = tb.locale(), require("./locale/" + a), tb.locale(b);
        } catch (c) {}
        return Hb[a];
    }
    function K(a, b) {
        var c, d;
        return b._isUTC ? (c = b.clone(), d = (tb.isMoment(a) || v(a) ? +a : +tb(a)) - +c, 
        c._d.setTime(+c._d + d), tb.updateOffset(c, !1), c) : tb(a).local();
    }
    function L(a) {
        return a.match(/\[[\s\S]/) ? a.replace(/^\[|\]$/g, "") : a.replace(/\\/g, "");
    }
    function M(a) {
        var b, c, d = a.match(Nb);
        for (b = 0, c = d.length; c > b; b++) d[b] = pc[d[b]] ? pc[d[b]] : L(d[b]);
        return function(e) {
            var f = "";
            for (b = 0; c > b; b++) f += d[b] instanceof Function ? d[b].call(e, a) : d[b];
            return f;
        };
    }
    function N(a, b) {
        return a.isValid() ? (b = O(b, a.localeData()), lc[b] || (lc[b] = M(b)), lc[b](a)) : a.localeData().invalidDate();
    }
    function O(a, b) {
        function c(a) {
            return b.longDateFormat(a) || a;
        }
        var d = 5;
        for (Ob.lastIndex = 0; d >= 0 && Ob.test(a); ) a = a.replace(Ob, c), Ob.lastIndex = 0, 
        d -= 1;
        return a;
    }
    function P(a, b) {
        var c, d = b._strict;
        switch (a) {
          case "Q":
            return Zb;

          case "DDDD":
            return _b;

          case "YYYY":
          case "GGGG":
          case "gggg":
            return d ? ac : Rb;

          case "Y":
          case "G":
          case "g":
            return cc;

          case "YYYYYY":
          case "YYYYY":
          case "GGGGG":
          case "ggggg":
            return d ? bc : Sb;

          case "S":
            if (d) return Zb;

          case "SS":
            if (d) return $b;

          case "SSS":
            if (d) return _b;

          case "DDD":
            return Qb;

          case "MMM":
          case "MMMM":
          case "dd":
          case "ddd":
          case "dddd":
            return Ub;

          case "a":
          case "A":
            return b._locale._meridiemParse;

          case "x":
            return Xb;

          case "X":
            return Yb;

          case "Z":
          case "ZZ":
            return Vb;

          case "T":
            return Wb;

          case "SSSS":
            return Tb;

          case "MM":
          case "DD":
          case "YY":
          case "GG":
          case "gg":
          case "HH":
          case "hh":
          case "mm":
          case "ss":
          case "ww":
          case "WW":
            return d ? $b : Pb;

          case "M":
          case "D":
          case "d":
          case "H":
          case "h":
          case "m":
          case "s":
          case "w":
          case "W":
          case "e":
          case "E":
            return Pb;

          case "Do":
            return d ? b._locale._ordinalParse : b._locale._ordinalParseLenient;

          default:
            return c = new RegExp(Y(X(a.replace("\\", "")), "i"));
        }
    }
    function Q(a) {
        a = a || "";
        var b = a.match(Vb) || [], c = b[b.length - 1] || [], d = (c + "").match(hc) || [ "-", 0, 0 ], e = +(60 * d[1]) + A(d[2]);
        return "+" === d[0] ? -e : e;
    }
    function R(a, b, c) {
        var d, e = c._a;
        switch (a) {
          case "Q":
            null != b && (e[Bb] = 3 * (A(b) - 1));
            break;

          case "M":
          case "MM":
            null != b && (e[Bb] = A(b) - 1);
            break;

          case "MMM":
          case "MMMM":
            d = c._locale.monthsParse(b, a, c._strict), null != d ? e[Bb] = d : c._pf.invalidMonth = b;
            break;

          case "D":
          case "DD":
            null != b && (e[Cb] = A(b));
            break;

          case "Do":
            null != b && (e[Cb] = A(parseInt(b.match(/\d{1,2}/)[0], 10)));
            break;

          case "DDD":
          case "DDDD":
            null != b && (c._dayOfYear = A(b));
            break;

          case "YY":
            e[Ab] = tb.parseTwoDigitYear(b);
            break;

          case "YYYY":
          case "YYYYY":
          case "YYYYYY":
            e[Ab] = A(b);
            break;

          case "a":
          case "A":
            c._isPm = c._locale.isPM(b);
            break;

          case "h":
          case "hh":
            c._pf.bigHour = !0;

          case "H":
          case "HH":
            e[Db] = A(b);
            break;

          case "m":
          case "mm":
            e[Eb] = A(b);
            break;

          case "s":
          case "ss":
            e[Fb] = A(b);
            break;

          case "S":
          case "SS":
          case "SSS":
          case "SSSS":
            e[Gb] = A(1e3 * ("0." + b));
            break;

          case "x":
            c._d = new Date(A(b));
            break;

          case "X":
            c._d = new Date(1e3 * parseFloat(b));
            break;

          case "Z":
          case "ZZ":
            c._useUTC = !0, c._tzm = Q(b);
            break;

          case "dd":
          case "ddd":
          case "dddd":
            d = c._locale.weekdaysParse(b), null != d ? (c._w = c._w || {}, c._w.d = d) : c._pf.invalidWeekday = b;
            break;

          case "w":
          case "ww":
          case "W":
          case "WW":
          case "d":
          case "e":
          case "E":
            a = a.substr(0, 1);

          case "gggg":
          case "GGGG":
          case "GGGGG":
            a = a.substr(0, 2), b && (c._w = c._w || {}, c._w[a] = A(b));
            break;

          case "gg":
          case "GG":
            c._w = c._w || {}, c._w[a] = tb.parseTwoDigitYear(b);
        }
    }
    function S(a) {
        var c, d, e, f, g, h, i;
        c = a._w, null != c.GG || null != c.W || null != c.E ? (g = 1, h = 4, d = b(c.GG, a._a[Ab], hb(tb(), 1, 4).year), 
        e = b(c.W, 1), f = b(c.E, 1)) : (g = a._locale._week.dow, h = a._locale._week.doy, 
        d = b(c.gg, a._a[Ab], hb(tb(), g, h).year), e = b(c.w, 1), null != c.d ? (f = c.d, 
        g > f && ++e) : f = null != c.e ? c.e + g : g), i = ib(d, e, f, h, g), a._a[Ab] = i.year, 
        a._dayOfYear = i.dayOfYear;
    }
    function T(a) {
        var c, d, e, f, g = [];
        if (!a._d) {
            for (e = V(a), a._w && null == a._a[Cb] && null == a._a[Bb] && S(a), a._dayOfYear && (f = b(a._a[Ab], e[Ab]), 
            a._dayOfYear > D(f) && (a._pf._overflowDayOfYear = !0), d = db(f, 0, a._dayOfYear), 
            a._a[Bb] = d.getUTCMonth(), a._a[Cb] = d.getUTCDate()), c = 0; 3 > c && null == a._a[c]; ++c) a._a[c] = g[c] = e[c];
            for (;7 > c; c++) a._a[c] = g[c] = null == a._a[c] ? 2 === c ? 1 : 0 : a._a[c];
            24 === a._a[Db] && 0 === a._a[Eb] && 0 === a._a[Fb] && 0 === a._a[Gb] && (a._nextDay = !0, 
            a._a[Db] = 0), a._d = (a._useUTC ? db : cb).apply(null, g), null != a._tzm && a._d.setUTCMinutes(a._d.getUTCMinutes() + a._tzm), 
            a._nextDay && (a._a[Db] = 24);
        }
    }
    function U(a) {
        var b;
        a._d || (b = y(a._i), a._a = [ b.year, b.month, b.day || b.date, b.hour, b.minute, b.second, b.millisecond ], 
        T(a));
    }
    function V(a) {
        var b = new Date();
        return a._useUTC ? [ b.getUTCFullYear(), b.getUTCMonth(), b.getUTCDate() ] : [ b.getFullYear(), b.getMonth(), b.getDate() ];
    }
    function W(b) {
        if (b._f === tb.ISO_8601) return void $(b);
        b._a = [], b._pf.empty = !0;
        var c, d, e, f, g, h = "" + b._i, i = h.length, j = 0;
        for (e = O(b._f, b._locale).match(Nb) || [], c = 0; c < e.length; c++) f = e[c], 
        d = (h.match(P(f, b)) || [])[0], d && (g = h.substr(0, h.indexOf(d)), g.length > 0 && b._pf.unusedInput.push(g), 
        h = h.slice(h.indexOf(d) + d.length), j += d.length), pc[f] ? (d ? b._pf.empty = !1 : b._pf.unusedTokens.push(f), 
        R(f, d, b)) : b._strict && !d && b._pf.unusedTokens.push(f);
        b._pf.charsLeftOver = i - j, h.length > 0 && b._pf.unusedInput.push(h), b._pf.bigHour === !0 && b._a[Db] <= 12 && (b._pf.bigHour = a), 
        b._isPm && b._a[Db] < 12 && (b._a[Db] += 12), b._isPm === !1 && 12 === b._a[Db] && (b._a[Db] = 0), 
        T(b), F(b);
    }
    function X(a) {
        return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(a, b, c, d, e) {
            return b || c || d || e;
        });
    }
    function Y(a) {
        return a.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
    }
    function Z(a) {
        var b, c, e, f, g;
        if (0 === a._f.length) return a._pf.invalidFormat = !0, void (a._d = new Date(0/0));
        for (f = 0; f < a._f.length; f++) g = 0, b = n({}, a), null != a._useUTC && (b._useUTC = a._useUTC), 
        b._pf = d(), b._f = a._f[f], W(b), G(b) && (g += b._pf.charsLeftOver, g += 10 * b._pf.unusedTokens.length, 
        b._pf.score = g, (null == e || e > g) && (e = g, c = b));
        m(a, c || b);
    }
    function $(a) {
        var b, c, d = a._i, e = dc.exec(d);
        if (e) {
            for (a._pf.iso = !0, b = 0, c = fc.length; c > b; b++) if (fc[b][1].exec(d)) {
                a._f = fc[b][0] + (e[6] || " ");
                break;
            }
            for (b = 0, c = gc.length; c > b; b++) if (gc[b][1].exec(d)) {
                a._f += gc[b][0];
                break;
            }
            d.match(Vb) && (a._f += "Z"), W(a);
        } else a._isValid = !1;
    }
    function _(a) {
        $(a), a._isValid === !1 && (delete a._isValid, tb.createFromInputFallback(a));
    }
    function ab(a, b) {
        var c, d = [];
        for (c = 0; c < a.length; ++c) d.push(b(a[c], c));
        return d;
    }
    function bb(b) {
        var c, d = b._i;
        d === a ? b._d = new Date() : v(d) ? b._d = new Date(+d) : null !== (c = Kb.exec(d)) ? b._d = new Date(+c[1]) : "string" == typeof d ? _(b) : u(d) ? (b._a = ab(d.slice(0), function(a) {
            return parseInt(a, 10);
        }), T(b)) : "object" == typeof d ? U(b) : "number" == typeof d ? b._d = new Date(d) : tb.createFromInputFallback(b);
    }
    function cb(a, b, c, d, e, f, g) {
        var h = new Date(a, b, c, d, e, f, g);
        return 1970 > a && h.setFullYear(a), h;
    }
    function db(a) {
        var b = new Date(Date.UTC.apply(null, arguments));
        return 1970 > a && b.setUTCFullYear(a), b;
    }
    function eb(a, b) {
        if ("string" == typeof a) if (isNaN(a)) {
            if (a = b.weekdaysParse(a), "number" != typeof a) return null;
        } else a = parseInt(a, 10);
        return a;
    }
    function fb(a, b, c, d, e) {
        return e.relativeTime(b || 1, !!c, a, d);
    }
    function gb(a, b, c) {
        var d = tb.duration(a).abs(), e = yb(d.as("s")), f = yb(d.as("m")), g = yb(d.as("h")), h = yb(d.as("d")), i = yb(d.as("M")), j = yb(d.as("y")), k = e < mc.s && [ "s", e ] || 1 === f && [ "m" ] || f < mc.m && [ "mm", f ] || 1 === g && [ "h" ] || g < mc.h && [ "hh", g ] || 1 === h && [ "d" ] || h < mc.d && [ "dd", h ] || 1 === i && [ "M" ] || i < mc.M && [ "MM", i ] || 1 === j && [ "y" ] || [ "yy", j ];
        return k[2] = b, k[3] = +a > 0, k[4] = c, fb.apply({}, k);
    }
    function hb(a, b, c) {
        var d, e = c - b, f = c - a.day();
        return f > e && (f -= 7), e - 7 > f && (f += 7), d = tb(a).add(f, "d"), {
            week: Math.ceil(d.dayOfYear() / 7),
            year: d.year()
        };
    }
    function ib(a, b, c, d, e) {
        var f, g, h = db(a, 0, 1).getUTCDay();
        return h = 0 === h ? 7 : h, c = null != c ? c : e, f = e - h + (h > d ? 7 : 0) - (e > h ? 7 : 0), 
        g = 7 * (b - 1) + (c - e) + f + 1, {
            year: g > 0 ? a : a - 1,
            dayOfYear: g > 0 ? g : D(a - 1) + g
        };
    }
    function jb(b) {
        var c, d = b._i, e = b._f;
        return b._locale = b._locale || tb.localeData(b._l), null === d || e === a && "" === d ? tb.invalid({
            nullInput: !0
        }) : ("string" == typeof d && (b._i = d = b._locale.preparse(d)), tb.isMoment(d) ? new k(d, !0) : (e ? u(e) ? Z(b) : W(b) : bb(b), 
        c = new k(b), c._nextDay && (c.add(1, "d"), c._nextDay = a), c));
    }
    function kb(a, b) {
        var c, d;
        if (1 === b.length && u(b[0]) && (b = b[0]), !b.length) return tb();
        for (c = b[0], d = 1; d < b.length; ++d) b[d][a](c) && (c = b[d]);
        return c;
    }
    function lb(a, b) {
        var c;
        return "string" == typeof b && (b = a.localeData().monthsParse(b), "number" != typeof b) ? a : (c = Math.min(a.date(), B(a.year(), b)), 
        a._d["set" + (a._isUTC ? "UTC" : "") + "Month"](b, c), a);
    }
    function mb(a, b) {
        return a._d["get" + (a._isUTC ? "UTC" : "") + b]();
    }
    function nb(a, b, c) {
        return "Month" === b ? lb(a, c) : a._d["set" + (a._isUTC ? "UTC" : "") + b](c);
    }
    function ob(a, b) {
        return function(c) {
            return null != c ? (nb(this, a, c), tb.updateOffset(this, b), this) : mb(this, a);
        };
    }
    function pb(a) {
        return 400 * a / 146097;
    }
    function qb(a) {
        return 146097 * a / 400;
    }
    function rb(a) {
        tb.duration.fn[a] = function() {
            return this._data[a];
        };
    }
    function sb(a) {
        "undefined" == typeof ender && (ub = xb.moment, xb.moment = a ? f("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.", tb) : tb);
    }
    for (var tb, ub, vb, wb = "2.8.4", xb = "undefined" != typeof global ? global : this, yb = Math.round, zb = Object.prototype.hasOwnProperty, Ab = 0, Bb = 1, Cb = 2, Db = 3, Eb = 4, Fb = 5, Gb = 6, Hb = {}, Ib = [], Jb = "undefined" != typeof module && module && module.exports, Kb = /^\/?Date\((\-?\d+)/i, Lb = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/, Mb = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/, Nb = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g, Ob = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, Pb = /\d\d?/, Qb = /\d{1,3}/, Rb = /\d{1,4}/, Sb = /[+\-]?\d{1,6}/, Tb = /\d+/, Ub = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, Vb = /Z|[\+\-]\d\d:?\d\d/gi, Wb = /T/i, Xb = /[\+\-]?\d+/, Yb = /[\+\-]?\d+(\.\d{1,3})?/, Zb = /\d/, $b = /\d\d/, _b = /\d{3}/, ac = /\d{4}/, bc = /[+-]?\d{6}/, cc = /[+-]?\d+/, dc = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, ec = "YYYY-MM-DDTHH:mm:ssZ", fc = [ [ "YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/ ], [ "YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/ ], [ "GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/ ], [ "GGGG-[W]WW", /\d{4}-W\d{2}/ ], [ "YYYY-DDD", /\d{4}-\d{3}/ ] ], gc = [ [ "HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/ ], [ "HH:mm:ss", /(T| )\d\d:\d\d:\d\d/ ], [ "HH:mm", /(T| )\d\d:\d\d/ ], [ "HH", /(T| )\d\d/ ] ], hc = /([\+\-]|\d\d)/gi, ic = ("Date|Hours|Minutes|Seconds|Milliseconds".split("|"), 
    {
        Milliseconds: 1,
        Seconds: 1e3,
        Minutes: 6e4,
        Hours: 36e5,
        Days: 864e5,
        Months: 2592e6,
        Years: 31536e6
    }), jc = {
        ms: "millisecond",
        s: "second",
        m: "minute",
        h: "hour",
        d: "day",
        D: "date",
        w: "week",
        W: "isoWeek",
        M: "month",
        Q: "quarter",
        y: "year",
        DDD: "dayOfYear",
        e: "weekday",
        E: "isoWeekday",
        gg: "weekYear",
        GG: "isoWeekYear"
    }, kc = {
        dayofyear: "dayOfYear",
        isoweekday: "isoWeekday",
        isoweek: "isoWeek",
        weekyear: "weekYear",
        isoweekyear: "isoWeekYear"
    }, lc = {}, mc = {
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        M: 11
    }, nc = "DDD w W M D d".split(" "), oc = "M D H h m s w W".split(" "), pc = {
        M: function() {
            return this.month() + 1;
        },
        MMM: function(a) {
            return this.localeData().monthsShort(this, a);
        },
        MMMM: function(a) {
            return this.localeData().months(this, a);
        },
        D: function() {
            return this.date();
        },
        DDD: function() {
            return this.dayOfYear();
        },
        d: function() {
            return this.day();
        },
        dd: function(a) {
            return this.localeData().weekdaysMin(this, a);
        },
        ddd: function(a) {
            return this.localeData().weekdaysShort(this, a);
        },
        dddd: function(a) {
            return this.localeData().weekdays(this, a);
        },
        w: function() {
            return this.week();
        },
        W: function() {
            return this.isoWeek();
        },
        YY: function() {
            return p(this.year() % 100, 2);
        },
        YYYY: function() {
            return p(this.year(), 4);
        },
        YYYYY: function() {
            return p(this.year(), 5);
        },
        YYYYYY: function() {
            var a = this.year(), b = a >= 0 ? "+" : "-";
            return b + p(Math.abs(a), 6);
        },
        gg: function() {
            return p(this.weekYear() % 100, 2);
        },
        gggg: function() {
            return p(this.weekYear(), 4);
        },
        ggggg: function() {
            return p(this.weekYear(), 5);
        },
        GG: function() {
            return p(this.isoWeekYear() % 100, 2);
        },
        GGGG: function() {
            return p(this.isoWeekYear(), 4);
        },
        GGGGG: function() {
            return p(this.isoWeekYear(), 5);
        },
        e: function() {
            return this.weekday();
        },
        E: function() {
            return this.isoWeekday();
        },
        a: function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), !0);
        },
        A: function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), !1);
        },
        H: function() {
            return this.hours();
        },
        h: function() {
            return this.hours() % 12 || 12;
        },
        m: function() {
            return this.minutes();
        },
        s: function() {
            return this.seconds();
        },
        S: function() {
            return A(this.milliseconds() / 100);
        },
        SS: function() {
            return p(A(this.milliseconds() / 10), 2);
        },
        SSS: function() {
            return p(this.milliseconds(), 3);
        },
        SSSS: function() {
            return p(this.milliseconds(), 3);
        },
        Z: function() {
            var a = -this.zone(), b = "+";
            return 0 > a && (a = -a, b = "-"), b + p(A(a / 60), 2) + ":" + p(A(a) % 60, 2);
        },
        ZZ: function() {
            var a = -this.zone(), b = "+";
            return 0 > a && (a = -a, b = "-"), b + p(A(a / 60), 2) + p(A(a) % 60, 2);
        },
        z: function() {
            return this.zoneAbbr();
        },
        zz: function() {
            return this.zoneName();
        },
        x: function() {
            return this.valueOf();
        },
        X: function() {
            return this.unix();
        },
        Q: function() {
            return this.quarter();
        }
    }, qc = {}, rc = [ "months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin" ]; nc.length; ) vb = nc.pop(), 
    pc[vb + "o"] = i(pc[vb], vb);
    for (;oc.length; ) vb = oc.pop(), pc[vb + vb] = h(pc[vb], 2);
    pc.DDDD = h(pc.DDD, 3), m(j.prototype, {
        set: function(a) {
            var b, c;
            for (c in a) b = a[c], "function" == typeof b ? this[c] = b : this["_" + c] = b;
            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + /\d{1,2}/.source);
        },
        _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        months: function(a) {
            return this._months[a.month()];
        },
        _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        monthsShort: function(a) {
            return this._monthsShort[a.month()];
        },
        monthsParse: function(a, b, c) {
            var d, e, f;
            for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), 
            d = 0; 12 > d; d++) {
                if (e = tb.utc([ 2e3, d ]), c && !this._longMonthsParse[d] && (this._longMonthsParse[d] = new RegExp("^" + this.months(e, "").replace(".", "") + "$", "i"), 
                this._shortMonthsParse[d] = new RegExp("^" + this.monthsShort(e, "").replace(".", "") + "$", "i")), 
                c || this._monthsParse[d] || (f = "^" + this.months(e, "") + "|^" + this.monthsShort(e, ""), 
                this._monthsParse[d] = new RegExp(f.replace(".", ""), "i")), c && "MMMM" === b && this._longMonthsParse[d].test(a)) return d;
                if (c && "MMM" === b && this._shortMonthsParse[d].test(a)) return d;
                if (!c && this._monthsParse[d].test(a)) return d;
            }
        },
        _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdays: function(a) {
            return this._weekdays[a.day()];
        },
        _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysShort: function(a) {
            return this._weekdaysShort[a.day()];
        },
        _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        weekdaysMin: function(a) {
            return this._weekdaysMin[a.day()];
        },
        weekdaysParse: function(a) {
            var b, c, d;
            for (this._weekdaysParse || (this._weekdaysParse = []), b = 0; 7 > b; b++) if (this._weekdaysParse[b] || (c = tb([ 2e3, 1 ]).day(b), 
            d = "^" + this.weekdays(c, "") + "|^" + this.weekdaysShort(c, "") + "|^" + this.weekdaysMin(c, ""), 
            this._weekdaysParse[b] = new RegExp(d.replace(".", ""), "i")), this._weekdaysParse[b].test(a)) return b;
        },
        _longDateFormat: {
            LTS: "h:mm:ss A",
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY LT",
            LLLL: "dddd, MMMM D, YYYY LT"
        },
        longDateFormat: function(a) {
            var b = this._longDateFormat[a];
            return !b && this._longDateFormat[a.toUpperCase()] && (b = this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(a) {
                return a.slice(1);
            }), this._longDateFormat[a] = b), b;
        },
        isPM: function(a) {
            return "p" === (a + "").toLowerCase().charAt(0);
        },
        _meridiemParse: /[ap]\.?m?\.?/i,
        meridiem: function(a, b, c) {
            return a > 11 ? c ? "pm" : "PM" : c ? "am" : "AM";
        },
        _calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        calendar: function(a, b, c) {
            var d = this._calendar[a];
            return "function" == typeof d ? d.apply(b, [ c ]) : d;
        },
        _relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        relativeTime: function(a, b, c, d) {
            var e = this._relativeTime[c];
            return "function" == typeof e ? e(a, b, c, d) : e.replace(/%d/i, a);
        },
        pastFuture: function(a, b) {
            var c = this._relativeTime[a > 0 ? "future" : "past"];
            return "function" == typeof c ? c(b) : c.replace(/%s/i, b);
        },
        ordinal: function(a) {
            return this._ordinal.replace("%d", a);
        },
        _ordinal: "%d",
        _ordinalParse: /\d{1,2}/,
        preparse: function(a) {
            return a;
        },
        postformat: function(a) {
            return a;
        },
        week: function(a) {
            return hb(a, this._week.dow, this._week.doy).week;
        },
        _week: {
            dow: 0,
            doy: 6
        },
        _invalidDate: "Invalid date",
        invalidDate: function() {
            return this._invalidDate;
        }
    }), tb = function(b, c, e, f) {
        var g;
        return "boolean" == typeof e && (f = e, e = a), g = {}, g._isAMomentObject = !0, 
        g._i = b, g._f = c, g._l = e, g._strict = f, g._isUTC = !1, g._pf = d(), jb(g);
    }, tb.suppressDeprecationWarnings = !1, tb.createFromInputFallback = f("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function(a) {
        a._d = new Date(a._i + (a._useUTC ? " UTC" : ""));
    }), tb.min = function() {
        var a = [].slice.call(arguments, 0);
        return kb("isBefore", a);
    }, tb.max = function() {
        var a = [].slice.call(arguments, 0);
        return kb("isAfter", a);
    }, tb.utc = function(b, c, e, f) {
        var g;
        return "boolean" == typeof e && (f = e, e = a), g = {}, g._isAMomentObject = !0, 
        g._useUTC = !0, g._isUTC = !0, g._l = e, g._i = b, g._f = c, g._strict = f, g._pf = d(), 
        jb(g).utc();
    }, tb.unix = function(a) {
        return tb(1e3 * a);
    }, tb.duration = function(a, b) {
        var d, e, f, g, h = a, i = null;
        return tb.isDuration(a) ? h = {
            ms: a._milliseconds,
            d: a._days,
            M: a._months
        } : "number" == typeof a ? (h = {}, b ? h[b] = a : h.milliseconds = a) : (i = Lb.exec(a)) ? (d = "-" === i[1] ? -1 : 1, 
        h = {
            y: 0,
            d: A(i[Cb]) * d,
            h: A(i[Db]) * d,
            m: A(i[Eb]) * d,
            s: A(i[Fb]) * d,
            ms: A(i[Gb]) * d
        }) : (i = Mb.exec(a)) ? (d = "-" === i[1] ? -1 : 1, f = function(a) {
            var b = a && parseFloat(a.replace(",", "."));
            return (isNaN(b) ? 0 : b) * d;
        }, h = {
            y: f(i[2]),
            M: f(i[3]),
            d: f(i[4]),
            h: f(i[5]),
            m: f(i[6]),
            s: f(i[7]),
            w: f(i[8])
        }) : "object" == typeof h && ("from" in h || "to" in h) && (g = r(tb(h.from), tb(h.to)), 
        h = {}, h.ms = g.milliseconds, h.M = g.months), e = new l(h), tb.isDuration(a) && c(a, "_locale") && (e._locale = a._locale), 
        e;
    }, tb.version = wb, tb.defaultFormat = ec, tb.ISO_8601 = function() {}, tb.momentProperties = Ib, 
    tb.updateOffset = function() {}, tb.relativeTimeThreshold = function(b, c) {
        return mc[b] === a ? !1 : c === a ? mc[b] : (mc[b] = c, !0);
    }, tb.lang = f("moment.lang is deprecated. Use moment.locale instead.", function(a, b) {
        return tb.locale(a, b);
    }), tb.locale = function(a, b) {
        var c;
        return a && (c = "undefined" != typeof b ? tb.defineLocale(a, b) : tb.localeData(a), 
        c && (tb.duration._locale = tb._locale = c)), tb._locale._abbr;
    }, tb.defineLocale = function(a, b) {
        return null !== b ? (b.abbr = a, Hb[a] || (Hb[a] = new j()), Hb[a].set(b), tb.locale(a), 
        Hb[a]) : (delete Hb[a], null);
    }, tb.langData = f("moment.langData is deprecated. Use moment.localeData instead.", function(a) {
        return tb.localeData(a);
    }), tb.localeData = function(a) {
        var b;
        if (a && a._locale && a._locale._abbr && (a = a._locale._abbr), !a) return tb._locale;
        if (!u(a)) {
            if (b = J(a)) return b;
            a = [ a ];
        }
        return I(a);
    }, tb.isMoment = function(a) {
        return a instanceof k || null != a && c(a, "_isAMomentObject");
    }, tb.isDuration = function(a) {
        return a instanceof l;
    };
    for (vb = rc.length - 1; vb >= 0; --vb) z(rc[vb]);
    tb.normalizeUnits = function(a) {
        return x(a);
    }, tb.invalid = function(a) {
        var b = tb.utc(0/0);
        return null != a ? m(b._pf, a) : b._pf.userInvalidated = !0, b;
    }, tb.parseZone = function() {
        return tb.apply(null, arguments).parseZone();
    }, tb.parseTwoDigitYear = function(a) {
        return A(a) + (A(a) > 68 ? 1900 : 2e3);
    }, m(tb.fn = k.prototype, {
        clone: function() {
            return tb(this);
        },
        valueOf: function() {
            return +this._d + 6e4 * (this._offset || 0);
        },
        unix: function() {
            return Math.floor(+this / 1e3);
        },
        toString: function() {
            return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
        },
        toDate: function() {
            return this._offset ? new Date(+this) : this._d;
        },
        toISOString: function() {
            var a = tb(this).utc();
            return 0 < a.year() && a.year() <= 9999 ? "function" == typeof Date.prototype.toISOString ? this.toDate().toISOString() : N(a, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : N(a, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
        },
        toArray: function() {
            var a = this;
            return [ a.year(), a.month(), a.date(), a.hours(), a.minutes(), a.seconds(), a.milliseconds() ];
        },
        isValid: function() {
            return G(this);
        },
        isDSTShifted: function() {
            return this._a ? this.isValid() && w(this._a, (this._isUTC ? tb.utc(this._a) : tb(this._a)).toArray()) > 0 : !1;
        },
        parsingFlags: function() {
            return m({}, this._pf);
        },
        invalidAt: function() {
            return this._pf.overflow;
        },
        utc: function(a) {
            return this.zone(0, a);
        },
        local: function(a) {
            return this._isUTC && (this.zone(0, a), this._isUTC = !1, a && this.add(this._dateTzOffset(), "m")), 
            this;
        },
        format: function(a) {
            var b = N(this, a || tb.defaultFormat);
            return this.localeData().postformat(b);
        },
        add: s(1, "add"),
        subtract: s(-1, "subtract"),
        diff: function(a, b, c) {
            var d, e, f, g = K(a, this), h = 6e4 * (this.zone() - g.zone());
            return b = x(b), "year" === b || "month" === b ? (d = 432e5 * (this.daysInMonth() + g.daysInMonth()), 
            e = 12 * (this.year() - g.year()) + (this.month() - g.month()), f = this - tb(this).startOf("month") - (g - tb(g).startOf("month")), 
            f -= 6e4 * (this.zone() - tb(this).startOf("month").zone() - (g.zone() - tb(g).startOf("month").zone())), 
            e += f / d, "year" === b && (e /= 12)) : (d = this - g, e = "second" === b ? d / 1e3 : "minute" === b ? d / 6e4 : "hour" === b ? d / 36e5 : "day" === b ? (d - h) / 864e5 : "week" === b ? (d - h) / 6048e5 : d), 
            c ? e : o(e);
        },
        from: function(a, b) {
            return tb.duration({
                to: this,
                from: a
            }).locale(this.locale()).humanize(!b);
        },
        fromNow: function(a) {
            return this.from(tb(), a);
        },
        calendar: function(a) {
            var b = a || tb(), c = K(b, this).startOf("day"), d = this.diff(c, "days", !0), e = -6 > d ? "sameElse" : -1 > d ? "lastWeek" : 0 > d ? "lastDay" : 1 > d ? "sameDay" : 2 > d ? "nextDay" : 7 > d ? "nextWeek" : "sameElse";
            return this.format(this.localeData().calendar(e, this, tb(b)));
        },
        isLeapYear: function() {
            return E(this.year());
        },
        isDST: function() {
            return this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone();
        },
        day: function(a) {
            var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            return null != a ? (a = eb(a, this.localeData()), this.add(a - b, "d")) : b;
        },
        month: ob("Month", !0),
        startOf: function(a) {
            switch (a = x(a)) {
              case "year":
                this.month(0);

              case "quarter":
              case "month":
                this.date(1);

              case "week":
              case "isoWeek":
              case "day":
                this.hours(0);

              case "hour":
                this.minutes(0);

              case "minute":
                this.seconds(0);

              case "second":
                this.milliseconds(0);
            }
            return "week" === a ? this.weekday(0) : "isoWeek" === a && this.isoWeekday(1), "quarter" === a && this.month(3 * Math.floor(this.month() / 3)), 
            this;
        },
        endOf: function(b) {
            return b = x(b), b === a || "millisecond" === b ? this : this.startOf(b).add(1, "isoWeek" === b ? "week" : b).subtract(1, "ms");
        },
        isAfter: function(a, b) {
            var c;
            return b = x("undefined" != typeof b ? b : "millisecond"), "millisecond" === b ? (a = tb.isMoment(a) ? a : tb(a), 
            +this > +a) : (c = tb.isMoment(a) ? +a : +tb(a), c < +this.clone().startOf(b));
        },
        isBefore: function(a, b) {
            var c;
            return b = x("undefined" != typeof b ? b : "millisecond"), "millisecond" === b ? (a = tb.isMoment(a) ? a : tb(a), 
            +a > +this) : (c = tb.isMoment(a) ? +a : +tb(a), +this.clone().endOf(b) < c);
        },
        isSame: function(a, b) {
            var c;
            return b = x(b || "millisecond"), "millisecond" === b ? (a = tb.isMoment(a) ? a : tb(a), 
            +this === +a) : (c = +tb(a), +this.clone().startOf(b) <= c && c <= +this.clone().endOf(b));
        },
        min: f("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function(a) {
            return a = tb.apply(null, arguments), this > a ? this : a;
        }),
        max: f("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function(a) {
            return a = tb.apply(null, arguments), a > this ? this : a;
        }),
        zone: function(a, b) {
            var c, d = this._offset || 0;
            return null == a ? this._isUTC ? d : this._dateTzOffset() : ("string" == typeof a && (a = Q(a)), 
            Math.abs(a) < 16 && (a = 60 * a), !this._isUTC && b && (c = this._dateTzOffset()), 
            this._offset = a, this._isUTC = !0, null != c && this.subtract(c, "m"), d !== a && (!b || this._changeInProgress ? t(this, tb.duration(d - a, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, 
            tb.updateOffset(this, !0), this._changeInProgress = null)), this);
        },
        zoneAbbr: function() {
            return this._isUTC ? "UTC" : "";
        },
        zoneName: function() {
            return this._isUTC ? "Coordinated Universal Time" : "";
        },
        parseZone: function() {
            return this._tzm ? this.zone(this._tzm) : "string" == typeof this._i && this.zone(this._i), 
            this;
        },
        hasAlignedHourOffset: function(a) {
            return a = a ? tb(a).zone() : 0, (this.zone() - a) % 60 === 0;
        },
        daysInMonth: function() {
            return B(this.year(), this.month());
        },
        dayOfYear: function(a) {
            var b = yb((tb(this).startOf("day") - tb(this).startOf("year")) / 864e5) + 1;
            return null == a ? b : this.add(a - b, "d");
        },
        quarter: function(a) {
            return null == a ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (a - 1) + this.month() % 3);
        },
        weekYear: function(a) {
            var b = hb(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
            return null == a ? b : this.add(a - b, "y");
        },
        isoWeekYear: function(a) {
            var b = hb(this, 1, 4).year;
            return null == a ? b : this.add(a - b, "y");
        },
        week: function(a) {
            var b = this.localeData().week(this);
            return null == a ? b : this.add(7 * (a - b), "d");
        },
        isoWeek: function(a) {
            var b = hb(this, 1, 4).week;
            return null == a ? b : this.add(7 * (a - b), "d");
        },
        weekday: function(a) {
            var b = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return null == a ? b : this.add(a - b, "d");
        },
        isoWeekday: function(a) {
            return null == a ? this.day() || 7 : this.day(this.day() % 7 ? a : a - 7);
        },
        isoWeeksInYear: function() {
            return C(this.year(), 1, 4);
        },
        weeksInYear: function() {
            var a = this.localeData()._week;
            return C(this.year(), a.dow, a.doy);
        },
        get: function(a) {
            return a = x(a), this[a]();
        },
        set: function(a, b) {
            return a = x(a), "function" == typeof this[a] && this[a](b), this;
        },
        locale: function(b) {
            var c;
            return b === a ? this._locale._abbr : (c = tb.localeData(b), null != c && (this._locale = c), 
            this);
        },
        lang: f("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(b) {
            return b === a ? this.localeData() : this.locale(b);
        }),
        localeData: function() {
            return this._locale;
        },
        _dateTzOffset: function() {
            return 15 * Math.round(this._d.getTimezoneOffset() / 15);
        }
    }), tb.fn.millisecond = tb.fn.milliseconds = ob("Milliseconds", !1), tb.fn.second = tb.fn.seconds = ob("Seconds", !1), 
    tb.fn.minute = tb.fn.minutes = ob("Minutes", !1), tb.fn.hour = tb.fn.hours = ob("Hours", !0), 
    tb.fn.date = ob("Date", !0), tb.fn.dates = f("dates accessor is deprecated. Use date instead.", ob("Date", !0)), 
    tb.fn.year = ob("FullYear", !0), tb.fn.years = f("years accessor is deprecated. Use year instead.", ob("FullYear", !0)), 
    tb.fn.days = tb.fn.day, tb.fn.months = tb.fn.month, tb.fn.weeks = tb.fn.week, tb.fn.isoWeeks = tb.fn.isoWeek, 
    tb.fn.quarters = tb.fn.quarter, tb.fn.toJSON = tb.fn.toISOString, m(tb.duration.fn = l.prototype, {
        _bubble: function() {
            var a, b, c, d = this._milliseconds, e = this._days, f = this._months, g = this._data, h = 0;
            g.milliseconds = d % 1e3, a = o(d / 1e3), g.seconds = a % 60, b = o(a / 60), g.minutes = b % 60, 
            c = o(b / 60), g.hours = c % 24, e += o(c / 24), h = o(pb(e)), e -= o(qb(h)), f += o(e / 30), 
            e %= 30, h += o(f / 12), f %= 12, g.days = e, g.months = f, g.years = h;
        },
        abs: function() {
            return this._milliseconds = Math.abs(this._milliseconds), this._days = Math.abs(this._days), 
            this._months = Math.abs(this._months), this._data.milliseconds = Math.abs(this._data.milliseconds), 
            this._data.seconds = Math.abs(this._data.seconds), this._data.minutes = Math.abs(this._data.minutes), 
            this._data.hours = Math.abs(this._data.hours), this._data.months = Math.abs(this._data.months), 
            this._data.years = Math.abs(this._data.years), this;
        },
        weeks: function() {
            return o(this.days() / 7);
        },
        valueOf: function() {
            return this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * A(this._months / 12);
        },
        humanize: function(a) {
            var b = gb(this, !a, this.localeData());
            return a && (b = this.localeData().pastFuture(+this, b)), this.localeData().postformat(b);
        },
        add: function(a, b) {
            var c = tb.duration(a, b);
            return this._milliseconds += c._milliseconds, this._days += c._days, this._months += c._months, 
            this._bubble(), this;
        },
        subtract: function(a, b) {
            var c = tb.duration(a, b);
            return this._milliseconds -= c._milliseconds, this._days -= c._days, this._months -= c._months, 
            this._bubble(), this;
        },
        get: function(a) {
            return a = x(a), this[a.toLowerCase() + "s"]();
        },
        as: function(a) {
            var b, c;
            if (a = x(a), "month" === a || "year" === a) return b = this._days + this._milliseconds / 864e5, 
            c = this._months + 12 * pb(b), "month" === a ? c : c / 12;
            switch (b = this._days + Math.round(qb(this._months / 12)), a) {
              case "week":
                return b / 7 + this._milliseconds / 6048e5;

              case "day":
                return b + this._milliseconds / 864e5;

              case "hour":
                return 24 * b + this._milliseconds / 36e5;

              case "minute":
                return 24 * b * 60 + this._milliseconds / 6e4;

              case "second":
                return 24 * b * 60 * 60 + this._milliseconds / 1e3;

              case "millisecond":
                return Math.floor(24 * b * 60 * 60 * 1e3) + this._milliseconds;

              default:
                throw new Error("Unknown unit " + a);
            }
        },
        lang: tb.fn.lang,
        locale: tb.fn.locale,
        toIsoString: f("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", function() {
            return this.toISOString();
        }),
        toISOString: function() {
            var a = Math.abs(this.years()), b = Math.abs(this.months()), c = Math.abs(this.days()), d = Math.abs(this.hours()), e = Math.abs(this.minutes()), f = Math.abs(this.seconds() + this.milliseconds() / 1e3);
            return this.asSeconds() ? (this.asSeconds() < 0 ? "-" : "") + "P" + (a ? a + "Y" : "") + (b ? b + "M" : "") + (c ? c + "D" : "") + (d || e || f ? "T" : "") + (d ? d + "H" : "") + (e ? e + "M" : "") + (f ? f + "S" : "") : "P0D";
        },
        localeData: function() {
            return this._locale;
        }
    }), tb.duration.fn.toString = tb.duration.fn.toISOString;
    for (vb in ic) c(ic, vb) && rb(vb.toLowerCase());
    tb.duration.fn.asMilliseconds = function() {
        return this.as("ms");
    }, tb.duration.fn.asSeconds = function() {
        return this.as("s");
    }, tb.duration.fn.asMinutes = function() {
        return this.as("m");
    }, tb.duration.fn.asHours = function() {
        return this.as("h");
    }, tb.duration.fn.asDays = function() {
        return this.as("d");
    }, tb.duration.fn.asWeeks = function() {
        return this.as("weeks");
    }, tb.duration.fn.asMonths = function() {
        return this.as("M");
    }, tb.duration.fn.asYears = function() {
        return this.as("y");
    }, tb.locale("en", {
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(a) {
            var b = a % 10, c = 1 === A(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
            return a + c;
        }
    }), Jb ? module.exports = tb : "function" == typeof define && define.amd ? (define("moment", function(a, b, c) {
        return c.config && c.config() && c.config().noGlobal === !0 && (xb.moment = ub), 
        tb;
    }), sb(!0)) : sb();
}.call(this), angular.module("ui.calendar", []).constant("uiCalendarConfig", {}).controller("uiCalendarCtrl", [ "$scope", "$timeout", function($scope, $timeout) {
    var sourceSerialId = 1, eventSerialId = 1, sources = $scope.eventSources, extraEventSignature = $scope.calendarWatchEvent ? $scope.calendarWatchEvent : angular.noop, wrapFunctionWithScopeApply = function(functionToWrap) {
        var wrapper;
        return functionToWrap && (wrapper = function() {
            var args = arguments;
            $timeout(function() {
                functionToWrap.apply(this, args);
            });
        }), wrapper;
    };
    this.eventsFingerprint = function(e) {
        return e.__uiCalId || (e.__uiCalId = eventSerialId++), "" + e.__uiCalId + (e.id || "") + (e.title || "") + (e.url || "") + (+e.start || "") + (+e.end || "") + (e.allDay || "") + (e.className || "") + extraEventSignature(e) || "";
    }, this.sourcesFingerprint = function(source) {
        return source.__id || (source.__id = sourceSerialId++);
    }, this.allEvents = function() {
        for (var arraySources = [], i = 0, srcLen = sources.length; srcLen > i; i++) {
            var source = sources[i];
            if (angular.isArray(source)) arraySources.push(source); else if (angular.isObject(source) && angular.isArray(source.events)) {
                var extEvent = {};
                for (var key in source) "_uiCalId" !== key && "events" !== key && (extEvent[key] = source[key]);
                for (var eI = 0; eI < source.events.length; eI++) angular.extend(source.events[eI], extEvent);
                arraySources.push(source.events);
            }
        }
        return Array.prototype.concat.apply([], arraySources);
    }, this.changeWatcher = function(arraySource, tokenFn) {
        var self, getTokens = function() {
            for (var token, el, array = angular.isFunction(arraySource) ? arraySource() : arraySource, result = [], i = 0, n = array.length; n > i; i++) el = array[i], 
            token = tokenFn(el), map[token] = el, result.push(token);
            return result;
        }, subtractAsSets = function(a, b) {
            var i, n, result = [], inB = {};
            for (i = 0, n = b.length; n > i; i++) inB[b[i]] = !0;
            for (i = 0, n = a.length; n > i; i++) inB[a[i]] || result.push(a[i]);
            return result;
        }, map = {}, applyChanges = function(newTokens, oldTokens) {
            var i, n, el, token, replacedTokens = {}, removedTokens = subtractAsSets(oldTokens, newTokens);
            for (i = 0, n = removedTokens.length; n > i; i++) {
                var removedToken = removedTokens[i];
                el = map[removedToken], delete map[removedToken];
                var newToken = tokenFn(el);
                newToken === removedToken ? self.onRemoved(el) : (replacedTokens[newToken] = removedToken, 
                self.onChanged(el));
            }
            var addedTokens = subtractAsSets(newTokens, oldTokens);
            for (i = 0, n = addedTokens.length; n > i; i++) token = addedTokens[i], el = map[token], 
            replacedTokens[token] || self.onAdded(el);
        };
        return self = {
            subscribe: function(scope, onChanged) {
                scope.$watch(getTokens, function(newTokens, oldTokens) {
                    onChanged && onChanged(newTokens, oldTokens) === !1 || applyChanges(newTokens, oldTokens);
                }, !0);
            },
            onAdded: angular.noop,
            onChanged: angular.noop,
            onRemoved: angular.noop
        };
    }, this.getFullCalendarConfig = function(calendarSettings, uiCalendarConfig) {
        var config = {};
        return angular.extend(config, uiCalendarConfig), angular.extend(config, calendarSettings), 
        angular.forEach(config, function(value, key) {
            "function" == typeof value && (config[key] = wrapFunctionWithScopeApply(config[key]));
        }), config;
    };
} ]).directive("uiCalendar", [ "uiCalendarConfig", "$locale", function(uiCalendarConfig, $locale) {
    var tValues = function(data) {
        var r, k;
        r = [];
        for (k in data) r[k] = data[k];
        return r;
    }, dtf = $locale.DATETIME_FORMATS;
    return uiCalendarConfig = angular.extend({
        monthNames: tValues(dtf.MONTH),
        monthNamesShort: tValues(dtf.SHORTMONTH),
        dayNames: tValues(dtf.DAY),
        dayNamesShort: tValues(dtf.SHORTDAY)
    }, uiCalendarConfig || {}), {
        restrict: "A",
        scope: {
            eventSources: "=ngModel",
            calendarWatchEvent: "&"
        },
        controller: "uiCalendarCtrl",
        link: function(scope, elm, attrs, controller) {
            function getOptions() {
                var fullCalendarConfig, calendarSettings = attrs.uiCalendar ? scope.$parent.$eval(attrs.uiCalendar) : {};
                fullCalendarConfig = controller.getFullCalendarConfig(calendarSettings, uiCalendarConfig), 
                options = {
                    eventSources: sources
                }, angular.extend(options, fullCalendarConfig);
                var options2 = {};
                for (var o in options) "eventSources" !== o && (options2[o] = options[o]);
                return JSON.stringify(options2);
            }
            var sources = scope.eventSources, sourcesChanged = !1, eventSourcesWatcher = controller.changeWatcher(sources, controller.sourcesFingerprint), eventsWatcher = controller.changeWatcher(controller.allEvents, controller.eventsFingerprint), options = null;
            scope.destroy = function() {
                scope.calendar = attrs.calendar ? scope.$parent[attrs.calendar] = elm.html("") : elm.html("");
            }, scope.init = function() {
                scope.calendar.fullCalendar(options);
            }, eventSourcesWatcher.onAdded = function(source) {
                scope.calendar.fullCalendar("addEventSource", source), sourcesChanged = !0;
            }, eventSourcesWatcher.onRemoved = function(source) {
                scope.calendar.fullCalendar("removeEventSource", source), sourcesChanged = !0;
            }, eventsWatcher.onAdded = function(event) {
                scope.calendar.fullCalendar("renderEvent", event);
            }, eventsWatcher.onRemoved = function(event) {
                scope.calendar.fullCalendar("removeEvents", function(e) {
                    return e === event;
                });
            }, eventsWatcher.onChanged = function(event) {
                scope.calendar.fullCalendar("updateEvent", event);
            }, eventSourcesWatcher.subscribe(scope), eventsWatcher.subscribe(scope, function() {
                return sourcesChanged === !0 ? (sourcesChanged = !1, !1) : void 0;
            }), scope.$watch(getOptions, function() {
                scope.destroy(), scope.init();
            });
        }
    };
} ]), !AmCharts) var AmCharts = {
    themes: {},
    maps: {},
    inheriting: {},
    charts: [],
    onReadyArray: [],
    useUTC: !1,
    updateRate: 40,
    uid: 0,
    lang: {},
    translations: {},
    mapTranslations: {},
    windows: {},
    initHandlers: []
};

AmCharts.Class = function(a) {
    var b = function() {
        arguments[0] !== AmCharts.inheriting && (this.events = {}, this.construct.apply(this, arguments));
    };
    a.inherits ? (b.prototype = new a.inherits(AmCharts.inheriting), b.base = a.inherits.prototype, 
    delete a.inherits) : (b.prototype.createEvents = function() {
        for (var a = 0, b = arguments.length; b > a; a++) this.events[arguments[a]] = [];
    }, b.prototype.listenTo = function(a, b, c) {
        this.removeListener(a, b, c), a.events[b].push({
            handler: c,
            scope: this
        });
    }, b.prototype.addListener = function(a, b, c) {
        this.removeListener(this, a, b), this.events[a].push({
            handler: b,
            scope: c
        });
    }, b.prototype.removeListener = function(a, b, c) {
        if (a && a.events) for (a = a.events[b], b = a.length - 1; b >= 0; b--) a[b].handler === c && a.splice(b, 1);
    }, b.prototype.fire = function(a, b) {
        for (var c = this.events[a], g = 0, h = c.length; h > g; g++) {
            var k = c[g];
            k.handler.call(k.scope, b);
        }
    });
    for (var c in a) b.prototype[c] = a[c];
    return b;
}, AmCharts.addChart = function(a) {
    AmCharts.charts.push(a);
}, AmCharts.removeChart = function(a) {
    for (var b = AmCharts.charts, c = b.length - 1; c >= 0; c--) b[c] == a && b.splice(c, 1);
}, AmCharts.isModern = !0, AmCharts.getIEVersion = function() {
    var a = 0;
    if ("Microsoft Internet Explorer" == navigator.appName) {
        var b = navigator.userAgent, c = /MSIE ([0-9]{1,}[.0-9]{0,})/;
        null != c.exec(b) && (a = parseFloat(RegExp.$1));
    } else "Netscape" == navigator.appName && (b = navigator.userAgent, c = /Trident\/.*rv:([0-9]{1,}[.0-9]{0,})/, 
    null != c.exec(b) && (a = parseFloat(RegExp.$1)));
    return a;
}, AmCharts.applyLang = function(a, b) {
    var c = AmCharts.translations;
    b.dayNames = AmCharts.dayNames, b.shortDayNames = AmCharts.shortDayNames, b.monthNames = AmCharts.monthNames, 
    b.shortMonthNames = AmCharts.shortMonthNames, c && (c = c[a]) && (AmCharts.lang = c, 
    c.monthNames && (b.dayNames = c.dayNames, b.shortDayNames = c.shortDayNames, b.monthNames = c.monthNames, 
    b.shortMonthNames = c.shortMonthNames));
}, AmCharts.IEversion = AmCharts.getIEVersion(), 9 > AmCharts.IEversion && 0 < AmCharts.IEversion && (AmCharts.isModern = !1, 
AmCharts.isIE = !0), AmCharts.dx = 0, AmCharts.dy = 0, (document.addEventListener || window.opera) && (AmCharts.isNN = !0, 
AmCharts.isIE = !1, AmCharts.dx = .5, AmCharts.dy = .5), document.attachEvent && (AmCharts.isNN = !1, 
AmCharts.isIE = !0, AmCharts.isModern || (AmCharts.dx = 0, AmCharts.dy = 0)), window.chrome && (AmCharts.chrome = !0), 
AmCharts.handleResize = function() {
    for (var a = AmCharts.charts, b = 0; b < a.length; b++) {
        var c = a[b];
        c && c.div && c.handleResize();
    }
}, AmCharts.handleMouseUp = function(a) {
    for (var b = AmCharts.charts, c = 0; c < b.length; c++) {
        var d = b[c];
        d && d.handleReleaseOutside(a);
    }
}, AmCharts.handleMouseMove = function(a) {
    for (var b = AmCharts.charts, c = 0; c < b.length; c++) {
        var d = b[c];
        d && d.handleMouseMove(a);
    }
}, AmCharts.handleWheel = function(a) {
    for (var b = AmCharts.charts, c = 0; c < b.length; c++) {
        var d = b[c];
        if (d && d.mouseIsOver) {
            d.mouseWheelScrollEnabled || d.mouseWheelZoomEnabled ? d.handleWheel(a) : a.stopPropagation && a.stopPropagation();
            break;
        }
    }
}, AmCharts.resetMouseOver = function() {
    for (var a = AmCharts.charts, b = 0; b < a.length; b++) {
        var c = a[b];
        c && (c.mouseIsOver = !1);
    }
}, AmCharts.ready = function(a) {
    AmCharts.onReadyArray.push(a);
}, AmCharts.handleLoad = function() {
    AmCharts.isReady = !0;
    for (var a = AmCharts.onReadyArray, b = 0; b < a.length; b++) {
        var c = a[b];
        isNaN(AmCharts.processDelay) ? c() : setTimeout(c, AmCharts.processDelay * b);
    }
}, AmCharts.addInitHandler = function(a, b) {
    AmCharts.initHandlers.push({
        method: a,
        types: b
    });
}, AmCharts.callInitHandler = function(a) {
    var b = AmCharts.initHandlers;
    if (AmCharts.initHandlers) for (var c = 0; c < b.length; c++) {
        var d = b[c];
        d.types ? -1 != d.types.indexOf(a.type) && d.method(a) : d.method(a);
    }
}, AmCharts.getUniqueId = function() {
    return AmCharts.uid++, "AmChartsEl-" + AmCharts.uid;
}, AmCharts.isNN && (document.addEventListener("mousemove", AmCharts.handleMouseMove, !0), 
window.addEventListener("resize", AmCharts.handleResize, !0), document.addEventListener("mouseup", AmCharts.handleMouseUp, !0), 
window.addEventListener("load", AmCharts.handleLoad, !0), window.addEventListener("DOMMouseScroll", AmCharts.handleWheel, !0), 
document.addEventListener("mousewheel", AmCharts.handleWheel, !0)), AmCharts.isIE && (document.attachEvent("onmousemove", AmCharts.handleMouseMove), 
window.attachEvent("onresize", AmCharts.handleResize), document.attachEvent("onmouseup", AmCharts.handleMouseUp), 
window.attachEvent("onload", AmCharts.handleLoad)), AmCharts.clear = function() {
    var a = AmCharts.charts;
    if (a) for (var b = 0; b < a.length; b++) a[b].clear();
    AmCharts.charts = null, AmCharts.isNN && (document.removeEventListener("mousemove", AmCharts.handleMouseMove, !0), 
    window.removeEventListener("resize", AmCharts.handleResize, !0), document.removeEventListener("mouseup", AmCharts.handleMouseUp, !0), 
    window.removeEventListener("load", AmCharts.handleLoad, !0), window.removeEventListener("DOMMouseScroll", AmCharts.handleWheel, !0), 
    document.removeEventListener("mousewheel", AmCharts.handleWheel, !0)), AmCharts.isIE && (document.detachEvent("onmousemove", AmCharts.handleMouseMove), 
    window.detachEvent("onresize", AmCharts.handleResize), document.detachEvent("onmouseup", AmCharts.handleMouseUp), 
    window.detachEvent("onload", AmCharts.handleLoad));
}, AmCharts.makeChart = function(a, b, c) {
    var d = b.type, e = b.theme;
    AmCharts.isString(e) && (e = AmCharts.themes[e], b.theme = e);
    var f;
    switch (d) {
      case "serial":
        f = new AmCharts.AmSerialChart(e);
        break;

      case "xy":
        f = new AmCharts.AmXYChart(e);
        break;

      case "pie":
        f = new AmCharts.AmPieChart(e);
        break;

      case "radar":
        f = new AmCharts.AmRadarChart(e);
        break;

      case "gauge":
        f = new AmCharts.AmAngularGauge(e);
        break;

      case "funnel":
        f = new AmCharts.AmFunnelChart(e);
        break;

      case "map":
        f = new AmCharts.AmMap(e);
        break;

      case "stock":
        f = new AmCharts.AmStockChart(e);
    }
    return AmCharts.extend(f, b), AmCharts.isReady ? isNaN(c) ? f.write(a) : setTimeout(function() {
        AmCharts.realWrite(f, a);
    }, c) : AmCharts.ready(function() {
        isNaN(c) ? f.write(a) : setTimeout(function() {
            AmCharts.realWrite(f, a);
        }, c);
    }), f;
}, AmCharts.realWrite = function(a, b) {
    a.write(b);
}, AmCharts.toBoolean = function(a, b) {
    if (void 0 === a) return b;
    switch (String(a).toLowerCase()) {
      case "true":
      case "yes":
      case "1":
        return !0;

      case "false":
      case "no":
      case "0":
      case null:
        return !1;

      default:
        return Boolean(a);
    }
}, AmCharts.removeFromArray = function(a, b) {
    var c;
    if (void 0 != b && void 0 != a) for (c = a.length - 1; c >= 0; c--) a[c] == b && a.splice(c, 1);
}, AmCharts.getDecimals = function(a) {
    var b = 0;
    return isNaN(a) || (a = String(a), -1 != a.indexOf("e-") ? b = Number(a.split("-")[1]) : -1 != a.indexOf(".") && (b = a.split(".")[1].length)), 
    b;
}, AmCharts.wrappedText = function(a, b, c, d, e, f, g, h, k) {
    var l = AmCharts.text(a, b, c, d, e, f, g), m = "\n";
    if (AmCharts.isModern || (m = "<br>"), k > 10) return l;
    if (l) {
        var n = l.getBBox();
        if (n.width > h) {
            n = Math.ceil(n.width / h), l.remove();
            for (var l = [], p = 0; -1 < (index = b.indexOf(" ", p)); ) l.push(index), p = index + 1;
            Math.round(b.length / 2);
            for (var q, p = 0; p < l.length; p += Math.ceil(l.length / n)) q = l[p], b = b.substr(0, q) + m + b.substr(q + 1);
            if (isNaN(q)) {
                if (0 == k) for (p = 1; n > p; p++) q = Math.round(b.length / n * p), b = b.substr(0, q) + m + b.substr(q);
                return AmCharts.text(a, b, c, d, e, f, g);
            }
            return AmCharts.wrappedText(a, b, c, d, e, f, g, h, k + 1);
        }
        return l;
    }
}, AmCharts.getStyle = function(a, b) {
    var c = "";
    return document.defaultView && document.defaultView.getComputedStyle ? c = document.defaultView.getComputedStyle(a, "").getPropertyValue(b) : a.currentStyle && (b = b.replace(/\-(\w)/g, function(a, b) {
        return b.toUpperCase();
    }), c = a.currentStyle[b]), c;
}, AmCharts.removePx = function(a) {
    return void 0 != a ? Number(a.substring(0, a.length - 2)) : void 0;
}, AmCharts.getURL = function(a, b) {
    if (a) if ("_self" != b && b) if ("_top" == b && window.top) window.top.location.href = a; else if ("_parent" == b && window.parent) window.parent.location.href = a; else if ("_blank" == b) window.open(a); else {
        var c = document.getElementsByName(b)[0];
        c ? c.src = a : (c = AmCharts.windows[b]) && c.opener && !c.opener.closed ? c.location.href = a : AmCharts.windows[b] = window.open(a);
    } else window.location.href = a;
}, AmCharts.ifArray = function(a) {
    return a && 0 < a.length ? !0 : !1;
}, AmCharts.callMethod = function(a, b) {
    var c;
    for (c = 0; c < b.length; c++) {
        var d = b[c];
        if (d) {
            d[a] && d[a]();
            var e = d.length;
            if (e > 0) {
                var f;
                for (f = 0; e > f; f++) {
                    var g = d[f];
                    g && g[a] && g[a]();
                }
            }
        }
    }
}, AmCharts.toNumber = function(a) {
    return "number" == typeof a ? a : Number(String(a).replace(/[^0-9\-.]+/g, ""));
}, AmCharts.toColor = function(a) {
    if ("" !== a && void 0 !== a) if (-1 != a.indexOf(",")) {
        a = a.split(",");
        var b;
        for (b = 0; b < a.length; b++) {
            var c = a[b].substring(a[b].length - 6, a[b].length);
            a[b] = "#" + c;
        }
    } else a = a.substring(a.length - 6, a.length), a = "#" + a;
    return a;
}, AmCharts.toCoordinate = function(a, b, c) {
    var d;
    return void 0 !== a && (a = String(a), c && b > c && (b = c), d = Number(a), -1 != a.indexOf("!") && (d = b - Number(a.substr(1))), 
    -1 != a.indexOf("%") && (d = b * Number(a.substr(0, a.length - 1)) / 100)), d;
}, AmCharts.fitToBounds = function(a, b, c) {
    return b > a && (a = b), a > c && (a = c), a;
}, AmCharts.isDefined = function(a) {
    return void 0 === a ? !1 : !0;
}, AmCharts.stripNumbers = function(a) {
    return a.replace(/[0-9]+/g, "");
}, AmCharts.roundTo = function(a, b) {
    if (0 > b) return a;
    var c = Math.pow(10, b);
    return Math.round(a * c) / c;
}, AmCharts.toFixed = function(a, b) {
    var c = String(Math.round(a * Math.pow(10, b)));
    if (b > 0) {
        var d = c.length;
        if (b > d) {
            var e;
            for (e = 0; b - d > e; e++) c = "0" + c;
        }
        return d = c.substring(0, c.length - b), "" === d && (d = 0), d + "." + c.substring(c.length - b, c.length);
    }
    return String(c);
}, AmCharts.formatDuration = function(a, b, c, d, e, f) {
    var g = AmCharts.intervals, h = f.decimalSeparator;
    if (a >= g[b].contains) {
        var k = a - Math.floor(a / g[b].contains) * g[b].contains;
        return "ss" == b && (k = AmCharts.formatNumber(k, f), 1 == k.split(h)[0].length && (k = "0" + k)), 
        ("mm" == b || "hh" == b) && 10 > k && (k = "0" + k), c = k + "" + d[b] + c, a = Math.floor(a / g[b].contains), 
        b = g[b].nextInterval, AmCharts.formatDuration(a, b, c, d, e, f);
    }
    if ("ss" == b && (a = AmCharts.formatNumber(a, f), 1 == a.split(h)[0].length && (a = "0" + a)), 
    ("mm" == b || "hh" == b) && 10 > a && (a = "0" + a), c = a + "" + d[b] + c, g[e].count > g[b].count) for (a = g[b].count; a < g[e].count; a++) b = g[b].nextInterval, 
    "ss" == b || "mm" == b || "hh" == b ? c = "00" + d[b] + c : "DD" == b && (c = "0" + d[b] + c);
    return ":" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1)), c;
}, AmCharts.formatNumber = function(a, b, c, d, e) {
    a = AmCharts.roundTo(a, b.precision), isNaN(c) && (c = b.precision);
    var f = b.decimalSeparator;
    b = b.thousandsSeparator;
    var g;
    g = 0 > a ? "-" : "", a = Math.abs(a);
    var h = String(a), k = !1;
    -1 != h.indexOf("e") && (k = !0), c >= 0 && !k && (h = AmCharts.toFixed(a, c));
    var l = "";
    if (k) l = h; else {
        var m, h = h.split("."), k = String(h[0]);
        for (m = k.length; m >= 0; m -= 3) l = m != k.length ? 0 !== m ? k.substring(m - 3, m) + b + l : k.substring(m - 3, m) + l : k.substring(m - 3, m);
        void 0 !== h[1] && (l = l + f + h[1]), void 0 !== c && c > 0 && "0" != l && (l = AmCharts.addZeroes(l, f, c));
    }
    return l = g + l, "" === g && !0 === d && 0 !== a && (l = "+" + l), !0 === e && (l += "%"), 
    l;
}, AmCharts.addZeroes = function(a, b, c) {
    return a = a.split(b), void 0 === a[1] && c > 0 && (a[1] = "0"), a[1].length < c ? (a[1] += "0", 
    AmCharts.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0];
}, AmCharts.scientificToNormal = function(a) {
    var b;
    a = String(a).split("e");
    var c;
    if ("-" == a[1].substr(0, 1)) {
        for (b = "0.", c = 0; c < Math.abs(Number(a[1])) - 1; c++) b += "0";
        b += a[0].split(".").join("");
    } else {
        var d = 0;
        for (b = a[0].split("."), b[1] && (d = b[1].length), b = a[0].split(".").join(""), 
        c = 0; c < Math.abs(Number(a[1])) - d; c++) b += "0";
    }
    return b;
}, AmCharts.toScientific = function(a, b) {
    if (0 === a) return "0";
    var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E);
    return Math.pow(10, c), mantissa = String(mantissa).split(".").join(b), String(mantissa) + "e" + c;
}, AmCharts.randomColor = function() {
    return "#" + ("00000" + (16777216 * Math.random() << 0).toString(16)).substr(-6);
}, AmCharts.hitTest = function(a, b, c) {
    var d = !1, e = a.x, f = a.x + a.width, g = a.y, h = a.y + a.height, k = AmCharts.isInRectangle;
    return d || (d = k(e, g, b)), d || (d = k(e, h, b)), d || (d = k(f, g, b)), d || (d = k(f, h, b)), 
    d || !0 === c || (d = AmCharts.hitTest(b, a, !0)), d;
}, AmCharts.isInRectangle = function(a, b, c) {
    return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1;
}, AmCharts.isPercents = function(a) {
    return -1 != String(a).indexOf("%") ? !0 : void 0;
}, AmCharts.findPosX = function(a) {
    var b = a, c = a.offsetLeft;
    if (a.offsetParent) {
        for (;a = a.offsetParent; ) c += a.offsetLeft;
        for (;(b = b.parentNode) && b != document.body; ) c -= b.scrollLeft || 0;
    }
    return c;
}, AmCharts.findPosY = function(a) {
    var b = a, c = a.offsetTop;
    if (a.offsetParent) {
        for (;a = a.offsetParent; ) c += a.offsetTop;
        for (;(b = b.parentNode) && b != document.body; ) c -= b.scrollTop || 0;
    }
    return c;
}, AmCharts.findIfFixed = function(a) {
    if (a.offsetParent) for (;a = a.offsetParent; ) if ("fixed" == AmCharts.getStyle(a, "position")) return !0;
    return !1;
}, AmCharts.findIfAuto = function(a) {
    return a.style && "auto" == AmCharts.getStyle(a, "overflow") ? !0 : a.parentNode ? AmCharts.findIfAuto(a.parentNode) : !1;
}, AmCharts.findScrollLeft = function(a, b) {
    return a.scrollLeft && (b += a.scrollLeft), a.parentNode ? AmCharts.findScrollLeft(a.parentNode, b) : b;
}, AmCharts.findScrollTop = function(a, b) {
    return a.scrollTop && (b += a.scrollTop), a.parentNode ? AmCharts.findScrollTop(a.parentNode, b) : b;
}, AmCharts.formatValue = function(a, b, c, d, e, f, g, h) {
    if (b) {
        void 0 === e && (e = "");
        var k;
        for (k = 0; k < c.length; k++) {
            var l = c[k], m = b[l];
            void 0 !== m && (m = f ? AmCharts.addPrefix(m, h, g, d) : AmCharts.formatNumber(m, d), 
            a = a.replace(new RegExp("\\[\\[" + e + l + "\\]\\]", "g"), m));
        }
    }
    return a;
}, AmCharts.formatDataContextValue = function(a, b) {
    if (a) {
        var d, c = a.match(/\[\[.*?\]\]/g);
        for (d = 0; d < c.length; d++) {
            var e = c[d], e = e.substr(2, e.length - 4);
            void 0 !== b[e] && (a = a.replace(new RegExp("\\[\\[" + e + "\\]\\]", "g"), b[e]));
        }
    }
    return a;
}, AmCharts.massReplace = function(a, b) {
    for (var c in b) if (b.hasOwnProperty(c)) {
        var d = b[c];
        void 0 === d && (d = ""), a = a.replace(c, d);
    }
    return a;
}, AmCharts.cleanFromEmpty = function(a) {
    return a.replace(/\[\[[^\]]*\]\]/g, "");
}, AmCharts.addPrefix = function(a, b, c, d, e) {
    var h, k, l, f = AmCharts.formatNumber(a, d), g = "";
    if (0 === a) return "0";
    if (0 > a && (g = "-"), a = Math.abs(a), a > 1) {
        for (h = b.length - 1; h > -1; h--) if (a >= b[h].number && (k = a / b[h].number, 
        l = Number(d.precision), 1 > l && (l = 1), c = AmCharts.roundTo(k, l), l = AmCharts.formatNumber(c, {
            precision: -1,
            decimalSeparator: d.decimalSeparator,
            thousandsSeparator: d.thousandsSeparator
        }), !e || k == c)) {
            f = g + "" + l + b[h].prefix;
            break;
        }
    } else for (h = 0; h < c.length; h++) if (a <= c[h].number) {
        k = a / c[h].number, l = Math.abs(Math.round(Math.log(k) * Math.LOG10E)), k = AmCharts.roundTo(k, l), 
        f = g + "" + k + c[h].prefix;
        break;
    }
    return f;
}, AmCharts.remove = function(a) {
    a && a.remove();
}, AmCharts.recommended = function() {
    var a = "js";
    return document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") || swfobject && swfobject.hasFlashPlayerVersion("8") && (a = "flash"), 
    a;
}, AmCharts.getEffect = function(a) {
    return ">" == a && (a = "easeOutSine"), "<" == a && (a = "easeInSine"), "elastic" == a && (a = "easeOutElastic"), 
    a;
}, AmCharts.getObjById = function(a, b) {
    var c, d;
    for (d = 0; d < a.length; d++) {
        var e = a[d];
        e.id == b && (c = e);
    }
    return c;
}, AmCharts.applyTheme = function(a, b, c) {
    b || (b = AmCharts.theme), b && b[c] && AmCharts.extend(a, b[c]);
}, AmCharts.isString = function(a) {
    return "string" == typeof a ? !0 : !1;
}, AmCharts.extend = function(a, b, c) {
    for (var d in b) c ? a.hasOwnProperty(d) || (a[d] = b[d]) : a[d] = b[d];
    return a;
}, AmCharts.copyProperties = function(a, b) {
    for (var c in a) a.hasOwnProperty(c) && "events" != c && void 0 !== a[c] && "function" != typeof a[c] && "cname" != c && (b[c] = a[c]);
}, AmCharts.processObject = function(a, b, c) {
    return !1 == a instanceof b && (a = AmCharts.extend(new b(c), a)), a;
}, AmCharts.fixNewLines = function(a) {
    var b = RegExp("\\n", "g");
    return a && (a = a.replace(b, "<br />")), a;
}, AmCharts.fixBrakes = function(a) {
    if (AmCharts.isModern) {
        var b = RegExp("<br>", "g");
        a && (a = a.replace(b, "\n"));
    } else a = AmCharts.fixNewLines(a);
    return a;
}, AmCharts.deleteObject = function(a, b) {
    if (a && ((void 0 === b || null === b) && (b = 20), 0 !== b)) if ("[object Array]" === Object.prototype.toString.call(a)) for (var c = 0; c < a.length; c++) AmCharts.deleteObject(a[c], b - 1), 
    a[c] = null; else if (a && !a.tagName) try {
        for (c in a) a[c] && ("object" == typeof a[c] && AmCharts.deleteObject(a[c], b - 1), 
        "function" != typeof a[c] && (a[c] = null));
    } catch (d) {}
}, AmCharts.bounce = function(a, b, c, d, e) {
    return (b /= e) < 1 / 2.75 ? 7.5625 * d * b * b + c : 2 / 2.75 > b ? d * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : 2.5 / 2.75 > b ? d * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : d * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c;
}, AmCharts.easeInSine = function(a, b, c, d, e) {
    return -d * Math.cos(b / e * (Math.PI / 2)) + d + c;
}, AmCharts.easeOutSine = function(a, b, c, d, e) {
    return d * Math.sin(b / e * (Math.PI / 2)) + c;
}, AmCharts.easeOutElastic = function(a, b, c, d, e) {
    a = 1.70158;
    var f = 0, g = d;
    return 0 === b ? c : 1 == (b /= e) ? c + d : (f || (f = .3 * e), g < Math.abs(d) ? (g = d, 
    a = f / 4) : a = f / (2 * Math.PI) * Math.asin(d / g), g * Math.pow(2, -10 * b) * Math.sin(2 * (b * e - a) * Math.PI / f) + d + c);
}, AmCharts.AxisBase = AmCharts.Class({
    construct: function(a) {
        this.createEvents("clickItem", "rollOverItem", "rollOutItem"), this.viY = this.viX = this.y = this.x = this.dy = this.dx = 0, 
        this.axisThickness = 1, this.axisColor = "#000000", this.axisAlpha = 1, this.gridCount = this.tickLength = 5, 
        this.gridAlpha = .15, this.gridThickness = 1, this.gridColor = "#000000", this.dashLength = 0, 
        this.labelFrequency = 1, this.showLastLabel = this.showFirstLabel = !0, this.fillColor = "#FFFFFF", 
        this.fillAlpha = 0, this.labelsEnabled = !0, this.labelRotation = 0, this.autoGridCount = !0, 
        this.valueRollOverColor = "#CC0000", this.offset = 0, this.guides = [], this.visible = !0, 
        this.counter = 0, this.guides = [], this.ignoreAxisWidth = this.inside = !1, this.minHorizontalGap = 75, 
        this.minVerticalGap = 35, this.titleBold = !0, this.minorGridEnabled = !1, this.minorGridAlpha = .07, 
        this.autoWrap = !1, this.titleAlign = "middle", this.labelOffset = 0, AmCharts.applyTheme(this, a, "AxisBase");
    },
    zoom: function(a, b) {
        this.start = a, this.end = b, this.dataChanged = !0, this.draw();
    },
    fixAxisPosition: function() {
        var a = this.position;
        "H" == this.orientation ? ("left" == a && (a = "bottom"), "right" == a && (a = "top")) : ("bottom" == a && (a = "left"), 
        "top" == a && (a = "right")), this.position = a;
    },
    draw: function() {
        var a = this.chart;
        this.allLabels = [], this.counter = 0, this.destroy(), this.fixAxisPosition(), this.labels = [];
        var b = a.container, c = b.set();
        a.gridSet.push(c), this.set = c, b = b.set(), a.axesLabelsSet.push(b), this.labelsSet = b, 
        this.axisLine = new this.axisRenderer(this), this.autoGridCount ? ("V" == this.orientation ? (a = this.height / this.minVerticalGap, 
        3 > a && (a = 3)) : a = this.width / this.minHorizontalGap, this.gridCountR = Math.max(a, 1)) : this.gridCountR = this.gridCount, 
        this.axisWidth = this.axisLine.axisWidth, this.addTitle();
    },
    setOrientation: function(a) {
        this.orientation = a ? "H" : "V";
    },
    addTitle: function() {
        var a = this.title;
        if (a) {
            var b = this.chart, c = this.titleColor;
            void 0 === c && (c = b.color);
            var d = this.titleFontSize;
            isNaN(d) && (d = b.fontSize + 1), this.titleLabel = AmCharts.text(b.container, a, c, b.fontFamily, d, this.titleAlign, this.titleBold);
        }
    },
    positionTitle: function() {
        var a = this.titleLabel;
        if (a) {
            var b, c, d = this.labelsSet, e = {};
            0 < d.length() ? e = d.getBBox() : (e.x = 0, e.y = 0, e.width = this.viW, e.height = this.viH), 
            d.push(a);
            var d = e.x, f = e.y;
            AmCharts.VML && (this.rotate ? d -= this.x : f -= this.y);
            var g = e.width, e = e.height, h = this.viW, k = this.viH, l = 0, m = a.getBBox().height / 2, n = this.inside, p = this.titleAlign;
            switch (this.position) {
              case "top":
                b = "left" == p ? -1 : "right" == p ? h : h / 2, c = f - 10 - m;
                break;

              case "bottom":
                b = "left" == p ? -1 : "right" == p ? h : h / 2, c = f + e + 10 + m;
                break;

              case "left":
                b = d - 10 - m, n && (b -= 5), c = "left" == p ? k + 1 : "right" == p ? -1 : k / 2, 
                l = -90;
                break;

              case "right":
                b = d + g + 10 + m - 3, n && (b += 7), c = "left" == p ? k + 2 : "right" == p ? -2 : k / 2, 
                l = -90;
            }
            this.marginsChanged ? (a.translate(b, c), this.tx = b, this.ty = c) : a.translate(this.tx, this.ty), 
            this.marginsChanged = !1, 0 !== l && a.rotate(l);
        }
    },
    pushAxisItem: function(a, b) {
        var c = this, d = a.graphics();
        0 < d.length() && (b ? c.labelsSet.push(d) : c.set.push(d)), (d = a.getLabel()) && (this.labelsSet.push(d), 
        d.click(function(b) {
            c.handleMouse(b, a, "clickItem");
        }).mouseover(function(b) {
            c.handleMouse(b, a, "rollOverItem");
        }).mouseout(function(b) {
            c.handleMouse(b, a, "rollOutItem");
        }));
    },
    handleMouse: function(a, b, c) {
        this.fire(c, {
            type: c,
            value: b.value,
            serialDataItem: b.serialDataItem,
            axis: this,
            target: b.label,
            chart: this.chart,
            event: a
        });
    },
    addGuide: function(a) {
        for (var b = this.guides, c = !1, d = 0; d < b.length; d++) b[d] == a && (c = !0);
        c || b.push(a);
    },
    removeGuide: function(a) {
        var c, b = this.guides;
        for (c = 0; c < b.length; c++) b[c] == a && b.splice(c, 1);
    },
    handleGuideOver: function(a) {
        clearTimeout(this.chart.hoverInt);
        var b = a.graphics.getBBox(), c = b.x + b.width / 2, b = b.y + b.height / 2, d = a.fillColor;
        void 0 === d && (d = a.lineColor), this.chart.showBalloon(a.balloonText, d, !0, c, b);
    },
    handleGuideOut: function() {
        this.chart.hideBalloon();
    },
    addEventListeners: function(a, b) {
        var c = this;
        a.mouseover(function() {
            c.handleGuideOver(b);
        }), a.mouseout(function() {
            c.handleGuideOut(b);
        });
    },
    getBBox: function() {
        var a = this.labelsSet.getBBox();
        return AmCharts.VML || (a = {
            x: a.x + this.x,
            y: a.y + this.y,
            width: a.width,
            height: a.height
        }), a;
    },
    destroy: function() {
        AmCharts.remove(this.set), AmCharts.remove(this.labelsSet);
        var a = this.axisLine;
        a && AmCharts.remove(a.set), AmCharts.remove(this.grid0);
    }
}), AmCharts.ValueAxis = AmCharts.Class({
    inherits: AmCharts.AxisBase,
    construct: function(a) {
        this.cname = "ValueAxis", this.createEvents("axisChanged", "logarithmicAxisFailed", "axisSelfZoomed", "axisZoomed"), 
        AmCharts.ValueAxis.base.construct.call(this, a), this.dataChanged = !0, this.stackType = "none", 
        this.position = "left", this.unitPosition = "right", this.recalculateToPercents = this.includeHidden = this.includeGuidesInMinMax = this.integersOnly = !1, 
        this.durationUnits = {
            DD: "d. ",
            hh: ":",
            mm: ":",
            ss: ""
        }, this.scrollbar = !1, this.baseValue = 0, this.radarCategoriesEnabled = !0, this.gridType = "polygons", 
        this.useScientificNotation = !1, this.axisTitleOffset = 10, this.minMaxMultiplier = 1, 
        this.logGridLimit = 2, this.treatZeroAs = 0, AmCharts.applyTheme(this, a, this.cname);
    },
    updateData: function() {
        0 >= this.gridCountR && (this.gridCountR = 1), this.totals = [], this.data = this.chart.chartData;
        var a = this.chart;
        "xy" != a.type && (this.stackGraphs("smoothedLine"), this.stackGraphs("line"), this.stackGraphs("column"), 
        this.stackGraphs("step")), this.recalculateToPercents && this.recalculate(), this.synchronizationMultiplier && this.synchronizeWith ? (AmCharts.isString(this.synchronizeWith) && (this.synchronizeWith = a.getValueAxisById(this.synchronizeWith)), 
        this.synchronizeWith && (this.synchronizeWithAxis(this.synchronizeWith), this.foundGraphs = !0)) : (this.foundGraphs = !1, 
        this.getMinMax());
    },
    draw: function() {
        AmCharts.ValueAxis.base.draw.call(this);
        var a = this.chart, b = this.set;
        if ("duration" == this.type && (this.duration = "ss"), !0 === this.dataChanged && (this.updateData(), 
        this.dataChanged = !1), this.logarithmic) {
            var c = this.treatZeroAs, d = this.getMin(0, this.data.length - 1);
            if (c > 0 && 0 == d && (this.minReal = d = c), 0 >= d || 0 >= this.minimum) return void this.fire("logarithmicAxisFailed", {
                type: "logarithmicAxisFailed",
                chart: a
            });
        }
        this.grid0 = null;
        var e, f, g = a.dx, h = a.dy, c = !1, d = this.logarithmic;
        if (isNaN(this.min) || isNaN(this.max) || !this.foundGraphs || 1/0 == this.min || -1/0 == this.max) c = !0; else {
            var r, k = this.labelFrequency, l = this.showFirstLabel, m = this.showLastLabel, n = 1, p = 0, q = Math.round((this.max - this.min) / this.step) + 1;
            !0 === d ? (r = Math.log(this.max) * Math.LOG10E - Math.log(this.minReal) * Math.LOG10E, 
            this.stepWidth = this.axisWidth / r, r > this.logGridLimit && (q = Math.ceil(Math.log(this.max) * Math.LOG10E) + 1, 
            p = Math.round(Math.log(this.minReal) * Math.LOG10E), q > this.gridCountR && (n = Math.ceil(q / this.gridCountR)))) : this.stepWidth = this.axisWidth / (this.max - this.min);
            var t = 0;
            1 > this.step && -1 < this.step && (t = AmCharts.getDecimals(this.step)), this.integersOnly && (t = 0), 
            t > this.maxDecCount && (t = this.maxDecCount);
            var w = this.precision;
            isNaN(w) || (t = w), this.max = AmCharts.roundTo(this.max, this.maxDecCount), this.min = AmCharts.roundTo(this.min, this.maxDecCount), 
            f = {}, f.precision = t, f.decimalSeparator = a.nf.decimalSeparator, f.thousandsSeparator = a.nf.thousandsSeparator, 
            this.numberFormatter = f;
            var v, s = this.guides;
            if (e = s.length, e > 0) {
                var u = this.fillAlpha;
                for (f = this.fillAlpha = 0; e > f; f++) {
                    var x = s[f], F = 0/0, B = x.above;
                    isNaN(x.toValue) || (F = this.getCoordinate(x.toValue), v = new this.axisItemRenderer(this, F, "", !0, 0/0, 0/0, x), 
                    this.pushAxisItem(v, B));
                    var z = 0/0;
                    isNaN(x.value) || (z = this.getCoordinate(x.value), v = new this.axisItemRenderer(this, z, x.label, !0, 0/0, (F - z) / 2, x), 
                    this.pushAxisItem(v, B)), isNaN(F - z) || (v = new this.guideFillRenderer(this, z, F, x), 
                    this.pushAxisItem(v, B), v = v.graphics(), x.graphics = v, x.balloonText && this.addEventListeners(v, x));
                }
                this.fillAlpha = u;
            }
            for (this.exponential = !1, f = p; q > f; f += n) s = AmCharts.roundTo(this.step * f + this.min, t), 
            -1 != String(s).indexOf("e") && (this.exponential = !0, String(s).split("e"));
            this.duration && (this.maxInterval = AmCharts.getMaxInterval(this.max, this.duration));
            var I, t = this.step, s = this.minorGridAlpha;
            for (this.minorGridEnabled && (I = this.getMinorGridStep(t, this.stepWidth * t)), 
            f = p; q > f; f += n) if (p = t * f + this.min, d && this.max - this.min > 5 * this.min && (p -= this.min), 
            p = AmCharts.roundTo(p, this.maxDecCount + 1), !(this.integersOnly && Math.round(p) != p || !isNaN(w) && Number(AmCharts.toFixed(p, w)) != p)) {
                if (!0 === d && (0 === p && (p = this.minReal), r > this.logGridLimit && (p = Math.pow(10, f))), 
                v = this.formatValue(p, !1, f), Math.round(f / k) != f / k && (v = void 0), (0 === f && !l || f == q - 1 && !m) && (v = " "), 
                e = this.getCoordinate(p), v = new this.axisItemRenderer(this, e, v, void 0, void 0, void 0, void 0, this.boldLabels), 
                this.pushAxisItem(v), p == this.baseValue && "radar" != a.type) {
                    var E, H, x = this.viW, B = this.viH;
                    v = this.viX, u = this.viY, "H" == this.orientation ? e >= 0 && x + 1 >= e && (E = [ e, e, e + g ], 
                    H = [ B, 0, h ]) : e >= 0 && B + 1 >= e && (E = [ 0, x, x + g ], H = [ e, e, e + h ]), 
                    E && (e = AmCharts.fitToBounds(2 * this.gridAlpha, 0, 1), e = AmCharts.line(a.container, E, H, this.gridColor, e, 1, this.dashLength), 
                    e.translate(v, u), this.grid0 = e, a.axesSet.push(e), e.toBack());
                }
                if (!isNaN(I) && s > 0 && q - 1 > f) {
                    for (v = this.gridAlpha, this.gridAlpha = this.minorGridAlpha, e = 1; t / I > e; e++) u = this.getCoordinate(p + I * e), 
                    u = new this.axisItemRenderer(this, u, "", !1, 0, 0, !1, !1, 0, !0), this.pushAxisItem(u);
                    this.gridAlpha = v;
                }
            }
            r = this.baseValue, this.min > this.baseValue && this.max > this.baseValue && (r = this.min), 
            this.min < this.baseValue && this.max < this.baseValue && (r = this.max), d && r < this.minReal && (r = this.minReal), 
            this.baseCoord = this.getCoordinate(r), r = {
                type: "axisChanged",
                target: this,
                chart: a
            }, r.min = d ? this.minReal : this.min, r.max = this.max, this.fire("axisChanged", r), 
            this.axisCreated = !0;
        }
        d = this.axisLine.set, r = this.labelsSet, this.positionTitle(), "radar" != a.type ? (a = this.viX, 
        I = this.viY, b.translate(a, I), r.translate(a, I)) : d.toFront(), !this.visible || c ? (b.hide(), 
        d.hide(), r.hide()) : (b.show(), d.show(), r.show()), this.axisY = this.y - this.viY, 
        this.axisX = this.x - this.viX;
    },
    formatValue: function(a, b, c) {
        var d = this.exponential, e = this.logarithmic, f = this.numberFormatter, g = this.chart;
        return !0 === this.logarithmic && (d = -1 != String(a).indexOf("e") ? !0 : !1), 
        this.useScientificNotation && (d = !0), this.usePrefixes && (d = !1), d ? (valueText = -1 == String(a).indexOf("e") ? a.toExponential(15) : String(a), 
        c = valueText.split("e"), b = Number(c[0]), c = Number(c[1]), b = AmCharts.roundTo(b, 14), 
        10 == b && (b = 1, c += 1), valueText = b + "e" + c, 0 === a && (valueText = "0"), 
        1 == a && (valueText = "1")) : (e && (d = String(a).split("."), d[1] ? (f.precision = d[1].length, 
        0 > c && (f.precision = Math.abs(c))) : f.precision = -1), valueText = this.usePrefixes ? AmCharts.addPrefix(a, g.prefixesOfBigNumbers, g.prefixesOfSmallNumbers, f, !b) : AmCharts.formatNumber(a, f, f.precision)), 
        this.duration && (valueText = AmCharts.formatDuration(a, this.duration, "", this.durationUnits, this.maxInterval, f)), 
        this.recalculateToPercents ? valueText += "%" : (f = this.unit) && (valueText = "left" == this.unitPosition ? f + valueText : valueText + f), 
        this.labelFunction && (valueText = this.labelFunction(a, valueText, this).toString()), 
        valueText;
    },
    getMinorGridStep: function(a, b) {
        var c = [ 5, 4, 2 ];
        60 > b && c.shift();
        for (var d = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E), e = 0; e < c.length; e++) {
            var f = a / c[e], g = Math.floor(Math.log(Math.abs(f)) * Math.LOG10E);
            if (!(0 < Math.abs(d - g))) if (1 > a) {
                if (g = Math.pow(10, -g) * f, g == Math.round(g)) return f;
            } else if (f == Math.round(f)) return f;
        }
    },
    stackGraphs: function(a) {
        var b = this.stackType;
        "stacked" == b && (b = "regular"), "line" == b && (b = "none"), "100% stacked" == b && (b = "100%"), 
        this.stackType = b;
        var g, k, l, m, n, c = [], d = [], e = [], f = [], h = this.chart.graphs, p = this.baseValue, q = !1;
        if (("line" == a || "step" == a || "smoothedLine" == a) && (q = !0), q && ("regular" == b || "100%" == b)) for (n = 0; n < h.length; n++) m = h[n], 
        m.hidden || (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable && (k && (m.stackGraph = k), 
        k = m));
        for (k = this.start; k <= this.end; k++) {
            var r = 0;
            for (n = 0; n < h.length; n++) if (m = h[n], m.hidden) m.newStack && (e[k] = 0/0, 
            d[k] = 0/0); else if (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable) if (l = this.data[k].axes[this.id].graphs[m.id], 
            g = l.values.value, isNaN(g)) m.newStack && (e[k] = 0/0, d[k] = 0/0); else {
                var t = AmCharts.getDecimals(g);
                t > r && (r = t), isNaN(f[k]) ? f[k] = Math.abs(g) : f[k] += Math.abs(g), f[k] = AmCharts.roundTo(f[k], r), 
                t = m.fillToGraph, q && t && (t = this.data[k].axes[this.id].graphs[t.id]) && (l.values.open = t.values.value), 
                "regular" == b && (q && (isNaN(c[k]) ? (c[k] = g, l.values.close = g, l.values.open = this.baseValue) : (l.values.close = isNaN(g) ? c[k] : g + c[k], 
                l.values.open = c[k], c[k] = l.values.close)), "column" == a && (m.newStack && (e[k] = 0/0, 
                d[k] = 0/0), l.values.close = g, 0 > g ? (l.values.close = g, isNaN(d[k]) ? l.values.open = p : (l.values.close += d[k], 
                l.values.open = d[k]), d[k] = l.values.close) : (l.values.close = g, isNaN(e[k]) ? l.values.open = p : (l.values.close += e[k], 
                l.values.open = e[k]), e[k] = l.values.close)));
            }
        }
        for (k = this.start; k <= this.end; k++) for (n = 0; n < h.length; n++) m = h[n], 
        m.hidden ? m.newStack && (e[k] = 0/0, d[k] = 0/0) : (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable && (l = this.data[k].axes[this.id].graphs[m.id], 
        g = l.values.value, isNaN(g) || (c = g / f[k] * 100, l.values.percents = c, l.values.total = f[k], 
        m.newStack && (e[k] = 0/0, d[k] = 0/0), "100%" == b && (isNaN(d[k]) && (d[k] = 0), 
        isNaN(e[k]) && (e[k] = 0), 0 > c ? (l.values.close = AmCharts.fitToBounds(c + d[k], -100, 100), 
        l.values.open = d[k], d[k] = l.values.close) : (l.values.close = AmCharts.fitToBounds(c + e[k], -100, 100), 
        l.values.open = e[k], e[k] = l.values.close)))));
    },
    recalculate: function() {
        var c, a = this.chart, b = a.graphs;
        for (c = 0; c < b.length; c++) {
            var d = b[c];
            if (d.valueAxis == this) {
                var e = "value";
                ("candlestick" == d.type || "ohlc" == d.type) && (e = "open");
                var f, g, h = this.end + 2, h = AmCharts.fitToBounds(this.end + 1, 0, this.data.length - 1), k = this.start;
                k > 0 && k--;
                var l;
                if (g = this.start, d.compareFromStart && (g = 0), !isNaN(a.startTime) && (l = a.categoryAxis)) {
                    minDuration = l.minDuration();
                    var m = new Date(a.startTime + minDuration / 2), n = AmCharts.resetDateToMin(new Date(a.startTime), l.minPeriod).getTime();
                    AmCharts.resetDateToMin(new Date(m), l.minPeriod).getTime() > n && g++;
                }
                for ((l = a.recalculateFromDate) && (a.dataDateFormat && (l = AmCharts.stringToDate(l, a.dataDateFormat)), 
                g = a.getClosestIndex(a.chartData, "time", l.getTime(), !0, 0, a.chartData.length), 
                h = a.chartData.length - 1), l = g; h >= l && (g = this.data[l].axes[this.id].graphs[d.id], 
                f = g.values[e], isNaN(f)); l++) ;
                for (this.recBaseValue = f, e = k; h >= e; e++) {
                    g = this.data[e].axes[this.id].graphs[d.id], g.percents = {};
                    var p, k = g.values;
                    for (p in k) g.percents[p] = "percents" != p ? k[p] / f * 100 - 100 : k[p];
                }
            }
        }
    },
    getMinMax: function() {
        var d, a = !1, b = this.chart, c = b.graphs;
        for (d = 0; d < c.length; d++) {
            var e = c[d].type;
            ("line" == e || "step" == e || "smoothedLine" == e) && this.expandMinMax && (a = !0);
        }
        if (a && (0 < this.start && this.start--, this.end < this.data.length - 1 && this.end++), 
        "serial" == b.type && (!0 !== b.categoryAxis.parseDates || a || this.end < this.data.length - 1 && this.end++), 
        a = this.minMaxMultiplier, this.min = this.getMin(this.start, this.end), this.max = this.getMax(), 
        a = (this.max - this.min) * (a - 1), this.min -= a, this.max += a, a = this.guides.length, 
        this.includeGuidesInMinMax && a > 0) for (b = 0; a > b; b++) c = this.guides[b], 
        c.toValue < this.min && (this.min = c.toValue), c.value < this.min && (this.min = c.value), 
        c.toValue > this.max && (this.max = c.toValue), c.value > this.max && (this.max = c.value);
        isNaN(this.minimum) || (this.min = this.minimum), isNaN(this.maximum) || (this.max = this.maximum), 
        this.min > this.max && (a = this.max, this.max = this.min, this.min = a), isNaN(this.minTemp) || (this.min = this.minTemp), 
        isNaN(this.maxTemp) || (this.max = this.maxTemp), this.minReal = this.min, this.maxReal = this.max, 
        0 === this.min && 0 === this.max && (this.max = 9), this.min > this.max && (this.min = this.max - 1), 
        a = this.min, b = this.max, c = this.max - this.min, d = 0 === c ? Math.pow(10, Math.floor(Math.log(Math.abs(this.max)) * Math.LOG10E)) / 10 : Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10, 
        isNaN(this.maximum) && isNaN(this.maxTemp) && (this.max = Math.ceil(this.max / d) * d + d), 
        isNaN(this.minimum) && isNaN(this.minTemp) && (this.min = Math.floor(this.min / d) * d - d), 
        0 > this.min && a >= 0 && (this.min = 0), 0 < this.max && 0 >= b && (this.max = 0), 
        "100%" == this.stackType && (this.min = 0 > this.min ? -100 : 0, this.max = 0 > this.max ? 0 : 100), 
        c = this.max - this.min, d = Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10, 
        this.step = Math.ceil(c / this.gridCountR / d) * d, c = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E)), 
        c = this.fixStepE(c), d = Math.ceil(this.step / c), d > 5 && (d = 10), 5 >= d && d > 2 && (d = 5), 
        this.step = Math.ceil(this.step / (c * d)) * c * d, 1 > c ? (this.maxDecCount = Math.abs(Math.log(Math.abs(c)) * Math.LOG10E), 
        this.maxDecCount = Math.round(this.maxDecCount), this.step = AmCharts.roundTo(this.step, this.maxDecCount + 1)) : this.maxDecCount = 0, 
        this.min = this.step * Math.floor(this.min / this.step), this.max = this.step * Math.ceil(this.max / this.step), 
        0 > this.min && a >= 0 && (this.min = 0), 0 < this.max && 0 >= b && (this.max = 0), 
        1 < this.minReal && 1 < this.max - this.minReal && (this.minReal = Math.floor(this.minReal)), 
        c = Math.pow(10, Math.floor(Math.log(Math.abs(this.minReal)) * Math.LOG10E)), 0 === this.min && (this.minReal = c), 
        0 === this.min && 1 < this.minReal && (this.minReal = 1), 0 < this.min && 0 < this.minReal - this.step && (this.minReal = this.min + this.step < this.minReal ? this.min + this.step : this.min), 
        c = Math.log(b) * Math.LOG10E - Math.log(a) * Math.LOG10E, this.logarithmic && (c > 2 ? (this.minReal = this.min = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)), 
        this.max = Math.pow(10, Math.ceil(Math.log(Math.abs(b)) * Math.LOG10E))) : (b = Math.pow(10, Math.floor(Math.log(Math.abs(this.min)) * Math.LOG10E)) / 10, 
        a = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)) / 10, a > b && (this.minReal = this.min = 10 * a)));
    },
    fixStepE: function(a) {
        a = a.toExponential(0).split("e");
        var b = Number(a[1]);
        return 9 == Number(a[0]) && b++, this.generateNumber(1, b);
    },
    generateNumber: function(a, b) {
        var d, c = "";
        d = 0 > b ? Math.abs(b) - 1 : Math.abs(b);
        var e;
        for (e = 0; d > e; e++) c += "0";
        return Number(0 > b ? "0." + c + String(a) : String(a) + c);
    },
    getMin: function(a, b) {
        var c, d;
        for (d = a; b >= d; d++) {
            var f, e = this.data[d].axes[this.id].graphs;
            for (f in e) if (e.hasOwnProperty(f)) {
                var g = this.chart.getGraphById(f);
                if (g.includeInMinMax && (!g.hidden || this.includeHidden)) {
                    isNaN(c) && (c = 1/0), this.foundGraphs = !0, g = e[f].values, this.recalculateToPercents && (g = e[f].percents);
                    var h;
                    if (this.minMaxField) h = g[this.minMaxField], c > h && (c = h); else for (var k in g) g.hasOwnProperty(k) && "percents" != k && "total" != k && (h = g[k], 
                    c > h && (c = h));
                }
            }
        }
        return c;
    },
    getMax: function() {
        var a, b;
        for (b = this.start; b <= this.end; b++) {
            var d, c = this.data[b].axes[this.id].graphs;
            for (d in c) if (c.hasOwnProperty(d)) {
                var e = this.chart.getGraphById(d);
                if (e.includeInMinMax && (!e.hidden || this.includeHidden)) {
                    isNaN(a) && (a = -1/0), this.foundGraphs = !0, e = c[d].values, this.recalculateToPercents && (e = c[d].percents);
                    var f;
                    if (this.minMaxField) f = e[this.minMaxField], f > a && (a = f); else for (var g in e) e.hasOwnProperty(g) && "percents" != g && "total" != g && (f = e[g], 
                    f > a && (a = f));
                }
            }
        }
        return a;
    },
    dispatchZoomEvent: function(a, b) {
        var c = {
            type: "axisZoomed",
            startValue: a,
            endValue: b,
            target: this,
            chart: this.chart
        };
        this.fire(c.type, c);
    },
    zoomToValues: function(a, b) {
        if (a > b) {
            var c = b;
            b = a, a = c;
        }
        a < this.min && (a = this.min), b > this.max && (b = this.max), c = {
            type: "axisSelfZoomed"
        }, c.chart = this.chart, c.valueAxis = this, c.multiplier = this.axisWidth / Math.abs(this.getCoordinate(b) - this.getCoordinate(a)), 
        c.position = this.getCoordinate("V" == this.orientation ? this.reversed ? a : b : this.reversed ? b : a), 
        this.fire(c.type, c);
    },
    coordinateToValue: function(a) {
        if (isNaN(a)) return 0/0;
        var b = this.axisWidth, c = this.stepWidth, d = this.reversed, e = this.rotate, f = this.min, g = this.minReal;
        return !0 === this.logarithmic ? Math.pow(10, (e ? !0 === d ? (b - a) / c : a / c : !0 === d ? a / c : (b - a) / c) + Math.log(g) * Math.LOG10E) : !0 === d ? e ? f - (a - b) / c : a / c + f : e ? a / c + f : f - (a - b) / c;
    },
    getCoordinate: function(a) {
        if (isNaN(a)) return 0/0;
        var b = this.rotate, c = this.reversed, d = this.axisWidth, e = this.stepWidth, f = this.min, g = this.minReal;
        return !0 === this.logarithmic ? (0 == a && (a = this.treatZeroAs), a = Math.log(a) * Math.LOG10E - Math.log(g) * Math.LOG10E, 
        b = b ? !0 === c ? d - e * a : e * a : !0 === c ? e * a : d - e * a) : b = !0 === c ? b ? d - e * (a - f) : e * (a - f) : b ? e * (a - f) : d - e * (a - f), 
        b = this.rotate ? b + (this.x - this.viX) : b + (this.y - this.viY), 1e7 < Math.abs(b) && (b = 1e7 * (b / Math.abs(b))), 
        Math.round(b);
    },
    synchronizeWithAxis: function(a) {
        this.synchronizeWith = a, this.listenTo(this.synchronizeWith, "axisChanged", this.handleSynchronization);
    },
    handleSynchronization: function(a) {
        var b = this.synchronizeWith;
        a = b.min;
        var c = b.max, b = b.step, d = this.synchronizationMultiplier;
        d && (this.min = a * d, this.max = c * d, this.step = b * d, a = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E)), 
        a = Math.abs(Math.log(Math.abs(a)) * Math.LOG10E), this.maxDecCount = a = Math.round(a), 
        this.draw());
    }
}), AmCharts.RecAxis = AmCharts.Class({
    construct: function(a) {
        var b = a.chart, c = a.axisThickness, d = a.axisColor, e = a.axisAlpha, f = a.offset, g = a.dx, h = a.dy, k = a.viX, l = a.viY, m = a.viH, n = a.viW, p = b.container;
        "H" == a.orientation ? (d = AmCharts.line(p, [ 0, n ], [ 0, 0 ], d, e, c), this.axisWidth = a.width, 
        "bottom" == a.position ? (a = c / 2 + f + m + l - 1, c = k) : (a = -c / 2 - f + l + h, 
        c = g + k)) : (this.axisWidth = a.height, "right" == a.position ? (d = AmCharts.line(p, [ 0, 0, -g ], [ 0, m, m - h ], d, e, c), 
        a = l + h, c = c / 2 + f + g + n + k - 1) : (d = AmCharts.line(p, [ 0, 0 ], [ 0, m ], d, e, c), 
        a = l, c = -c / 2 - f + k)), d.translate(c, a), b.axesSet.push(d), this.set = d;
    }
}), AmCharts.RecItem = AmCharts.Class({
    construct: function(a, b, c, d, e, f, g, h, k, l, m) {
        b = Math.round(b), this.value = c, void 0 == c && (c = ""), k || (k = 0), void 0 == d && (d = !0);
        var n = a.chart.fontFamily, p = a.fontSize;
        void 0 == p && (p = a.chart.fontSize);
        var q = a.color;
        void 0 == q && (q = a.chart.color), void 0 !== m && (q = m);
        var r = a.chart.container, t = r.set();
        this.set = t;
        var w = a.axisThickness, v = a.axisColor, s = a.axisAlpha, u = a.tickLength, x = a.gridAlpha, F = a.gridThickness, B = a.gridColor, z = a.dashLength, I = a.fillColor, E = a.fillAlpha, H = a.labelsEnabled;
        m = a.labelRotation;
        var $, W, V = a.counter, T = a.inside, fa = a.labelOffset, aa = a.dx, ga = a.dy, Na = a.orientation, ma = a.position, ba = a.previousCoord, O = a.viH, X = a.viW, na = a.offset;
        g ? (H = !0, isNaN(g.tickLength) || (u = g.tickLength), void 0 != g.lineColor && (B = g.lineColor), 
        void 0 != g.color && (q = g.color), isNaN(g.lineAlpha) || (x = g.lineAlpha), isNaN(g.dashLength) || (z = g.dashLength), 
        isNaN(g.lineThickness) || (F = g.lineThickness), !0 === g.inside && (T = !0), isNaN(g.labelRotation) || (m = g.labelRotation), 
        isNaN(g.fontSize) || (p = g.fontSize), g.position && (ma = g.position), void 0 !== g.boldLabel && (h = g.boldLabel), 
        isNaN(g.labelOffset) || (fa = g.labelOffset)) : "" === c && (u = 0), W = "start", 
        e && (W = "middle");
        var ja, Y = m * Math.PI / 180, G = 0, A = 0, ka = 0, S = ja = 0, y = 0;
        "V" == Na && (m = 0);
        var Z;
        H && (Z = a.autoWrap && 0 === m ? AmCharts.wrappedText(r, c, q, n, p, W, h, e, 0) : AmCharts.text(r, c, q, n, p, W, h), 
        W = Z.getBBox(), S = W.width, y = W.height), "H" == Na ? (b >= 0 && X + 1 >= b && (u > 0 && s > 0 && X + 1 >= b + k && ($ = AmCharts.line(r, [ b + k, b + k ], [ 0, u ], v, s, F), 
        t.push($)), x > 0 && (W = AmCharts.line(r, [ b, b + aa, b + aa ], [ O, O + ga, ga ], B, x, F, z), 
        t.push(W))), A = 0, G = b, g && 90 == m && T && (G -= p), !1 === d ? (W = "start", 
        A = "bottom" == ma ? T ? A + u : A - u : T ? A - u : A + u, G += 3, e && (G += e / 2 - 3, 
        W = "middle"), m > 0 && (W = "middle")) : W = "middle", 1 == V && E > 0 && !g && !l && X > ba && (d = AmCharts.fitToBounds(b, 0, X), 
        ba = AmCharts.fitToBounds(ba, 0, X), ja = d - ba, ja > 0 && (fill = AmCharts.rect(r, ja, a.height, I, E), 
        fill.translate(d - ja + aa, ga), t.push(fill))), "bottom" == ma ? (A += O + p / 2 + na, 
        T ? (m > 0 ? (A = O - S / 2 * Math.sin(Y) - u - 3, G += S / 2 * Math.cos(Y) - 4 + 2) : 0 > m ? (A = O + S * Math.sin(Y) - u - 3 + 2, 
        G += -S * Math.cos(Y) - y * Math.sin(Y) - 4) : A -= u + p + 3 + 3, A -= fa) : (m > 0 ? (A = O + S / 2 * Math.sin(Y) + u + 3, 
        G -= S / 2 * Math.cos(Y)) : 0 > m ? (A = O + u + 3 - S / 2 * Math.sin(Y) + 2, G += S / 2 * Math.cos(Y)) : A += u + w + 3 + 3, 
        A += fa)) : (A += ga + p / 2 - na, G += aa, T ? (m > 0 ? (A = S / 2 * Math.sin(Y) + u + 3, 
        G -= S / 2 * Math.cos(Y)) : A += u + 3, A += fa) : (m > 0 ? (A = -(S / 2) * Math.sin(Y) - u - 6, 
        G += S / 2 * Math.cos(Y)) : A -= u + p + 3 + w + 3, A -= fa)), "bottom" == ma ? ja = (T ? O - u - 1 : O + w - 1) + na : (ka = aa, 
        ja = (T ? ga : ga - u - w + 1) - na), f && (G += f), f = G, m > 0 && (f += S / 2 * Math.cos(Y)), 
        Z && (p = 0, T && (p = S / 2 * Math.cos(Y)), f + p > X + 2 || 0 > f) && (Z.remove(), 
        Z = null)) : (b >= 0 && O + 1 >= b && (u > 0 && s > 0 && O + 1 >= b + k && ($ = AmCharts.line(r, [ 0, u ], [ b + k, b + k ], v, s, F), 
        t.push($)), x > 0 && (W = AmCharts.line(r, [ 0, aa, X + aa ], [ b, b + ga, b + ga ], B, x, F, z), 
        t.push(W))), W = "end", (!0 === T && "left" == ma || !1 === T && "right" == ma) && (W = "start"), 
        A = b - p / 2, 1 == V && E > 0 && !g && !l && (d = AmCharts.fitToBounds(b, 0, O), 
        ba = AmCharts.fitToBounds(ba, 0, O), Y = d - ba, fill = AmCharts.polygon(r, [ 0, a.width, a.width, 0 ], [ 0, 0, Y, Y ], I, E), 
        fill.translate(aa, d - Y + ga), t.push(fill)), A += p / 2, "right" == ma ? (G += aa + X + na, 
        A += ga, T ? (f || (A -= p / 2 + 3), G = G - (u + 4) - fa) : (G += u + 4 + w, A -= 2, 
        G += fa)) : T ? (G += u + 4 - na, f || (A -= p / 2 + 3), g && (G += aa, A += ga), 
        G += fa) : (G += -u - w - 4 - 2 - na, A -= 2, G -= fa), $ && ("right" == ma ? (ka += aa + na + X, 
        ja += ga, ka = T ? ka - w : ka + w) : (ka -= na, T || (ka -= u + w))), f && (A += f), 
        T = -3, "right" == ma && (T += ga), Z && (A > O + 1 || T > A) && (Z.remove(), Z = null)), 
        $ && $.translate(ka, ja), !1 === a.visible && ($ && $.remove(), Z && (Z.remove(), 
        Z = null)), Z && (Z.attr({
            "text-anchor": W
        }), Z.translate(G, A), 0 !== m && Z.rotate(-m, a.chart.backgroundColor), a.allLabels.push(Z), 
        " " != c && (this.label = Z)), l || (a.counter = 0 === V ? 1 : 0, a.previousCoord = b), 
        0 === this.set.node.childNodes.length && this.set.remove();
    },
    graphics: function() {
        return this.set;
    },
    getLabel: function() {
        return this.label;
    }
}), AmCharts.RecFill = AmCharts.Class({
    construct: function(a, b, c, d) {
        var e = a.dx, f = a.dy, g = a.orientation, h = 0;
        if (b > c) {
            var k = b;
            b = c, c = k;
        }
        var l = d.fillAlpha;
        isNaN(l) && (l = 0), k = a.chart.container, d = d.fillColor, "V" == g ? (b = AmCharts.fitToBounds(b, 0, a.viH), 
        c = AmCharts.fitToBounds(c, 0, a.viH)) : (b = AmCharts.fitToBounds(b, 0, a.viW), 
        c = AmCharts.fitToBounds(c, 0, a.viW)), c -= b, isNaN(c) && (c = 4, h = 2, l = 0), 
        0 > c && "object" == typeof d && (d = d.join(",").split(",").reverse()), "V" == g ? (a = AmCharts.rect(k, a.width, c, d, l), 
        a.translate(e, b - h + f)) : (a = AmCharts.rect(k, c, a.height, d, l), a.translate(b - h + e, f)), 
        this.set = k.set([ a ]);
    },
    graphics: function() {
        return this.set;
    },
    getLabel: function() {}
}), AmCharts.AmChart = AmCharts.Class({
    construct: function(a) {
        this.theme = a, this.version = "3.11.3", AmCharts.addChart(this), this.createEvents("dataUpdated", "init", "rendered", "drawn", "failed"), 
        this.height = this.width = "100%", this.dataChanged = !0, this.chartCreated = !1, 
        this.previousWidth = this.previousHeight = 0, this.backgroundColor = "#FFFFFF", 
        this.borderAlpha = this.backgroundAlpha = 0, this.color = this.borderColor = "#000000", 
        this.fontFamily = "Verdana", this.fontSize = 11, this.usePrefixes = !1, this.precision = -1, 
        this.percentPrecision = 2, this.decimalSeparator = ".", this.thousandsSeparator = ",", 
        this.labels = [], this.allLabels = [], this.titles = [], this.marginRight = this.marginLeft = this.autoMarginOffset = 0, 
        this.timeOuts = [], this.creditsPosition = "top-left";
        var b = document.createElement("div"), c = b.style;
        c.overflow = "hidden", c.position = "relative", c.textAlign = "left", this.chartDiv = b, 
        b = document.createElement("div"), c = b.style, c.overflow = "hidden", c.position = "relative", 
        c.textAlign = "left", this.legendDiv = b, this.titleHeight = 0, this.hideBalloonTime = 150, 
        this.handDrawScatter = 2, this.handDrawThickness = 1, this.prefixesOfBigNumbers = [ {
            number: 1e3,
            prefix: "k"
        }, {
            number: 1e6,
            prefix: "M"
        }, {
            number: 1e9,
            prefix: "G"
        }, {
            number: 1e12,
            prefix: "T"
        }, {
            number: 1e15,
            prefix: "P"
        }, {
            number: 1e18,
            prefix: "E"
        }, {
            number: 1e21,
            prefix: "Z"
        }, {
            number: 1e24,
            prefix: "Y"
        } ], this.prefixesOfSmallNumbers = [ {
            number: 1e-24,
            prefix: "y"
        }, {
            number: 1e-21,
            prefix: "z"
        }, {
            number: 1e-18,
            prefix: "a"
        }, {
            number: 1e-15,
            prefix: "f"
        }, {
            number: 1e-12,
            prefix: "p"
        }, {
            number: 1e-9,
            prefix: "n"
        }, {
            number: 1e-6,
            prefix: "μ"
        }, {
            number: .001,
            prefix: "m"
        } ], this.panEventsEnabled = !0, AmCharts.bezierX = 3, AmCharts.bezierY = 6, this.product = "amcharts", 
        this.animations = [], this.balloon = new AmCharts.AmBalloon(this.theme), this.balloon.chart = this, 
        AmCharts.applyTheme(this, a, "AmChart");
    },
    drawChart: function() {
        this.drawBackground(), this.redrawLabels(), this.drawTitles(), this.brr();
    },
    drawBackground: function() {
        AmCharts.remove(this.background);
        var a = this.container, b = this.backgroundColor, c = this.backgroundAlpha, d = this.set;
        AmCharts.isModern || 0 !== c || (c = .001);
        var e = this.updateWidth();
        this.realWidth = e;
        var f = this.updateHeight();
        this.realHeight = f, this.background = b = AmCharts.polygon(a, [ 0, e - 1, e - 1, 0 ], [ 0, 0, f - 1, f - 1 ], b, c, 1, this.borderColor, this.borderAlpha), 
        d.push(b), (b = this.backgroundImage) && (this.path && (b = this.path + b), this.bgImg = a = a.image(b, 0, 0, e, f), 
        d.push(a));
    },
    drawTitles: function() {
        var a = this.titles;
        if (AmCharts.ifArray(a)) {
            var c, b = 20;
            for (c = 0; c < a.length; c++) {
                var d = a[c], e = d.color;
                void 0 === e && (e = this.color);
                var f = d.size;
                isNaN(f) && (f = this.fontSize + 2), isNaN(d.alpha);
                var g = this.marginLeft, e = AmCharts.text(this.container, d.text, e, this.fontFamily, f);
                e.translate(g + (this.realWidth - this.marginRight - g) / 2, b), e.node.style.pointerEvents = "none", 
                g = !0, void 0 !== d.bold && (g = d.bold), g && e.attr({
                    "font-weight": "bold"
                }), e.attr({
                    opacity: d.alpha
                }), b += f + 6, this.freeLabelsSet.push(e);
            }
        }
    },
    write: function(a) {
        if (a = "object" != typeof a ? document.getElementById(a) : a) {
            a.innerHTML = "", this.div = a, a.style.overflow = "hidden", a.style.textAlign = "left";
            var b = this.chartDiv, c = this.legendDiv, d = this.legend, e = c.style, f = b.style;
            this.measure();
            var g, h = document.createElement("div");
            g = h.style, g.position = "relative", this.containerDiv = h, a.appendChild(h);
            var k = this.exportConfig;
            if (k && AmCharts.AmExport && !this.AmExport && (this.AmExport = new AmCharts.AmExport(this, k)), 
            this.amExport && AmCharts.AmExport && (this.AmExport = AmCharts.extend(this.amExport, new AmCharts.AmExport(this), !0)), 
            this.AmExport && this.AmExport.init && this.AmExport.init(), d) switch (d = this.addLegend(d, d.divId), 
            d.position) {
              case "bottom":
                h.appendChild(b), h.appendChild(c);
                break;

              case "top":
                h.appendChild(c), h.appendChild(b);
                break;

              case "absolute":
                g.width = a.style.width, g.height = a.style.height, e.position = "absolute", f.position = "absolute", 
                void 0 !== d.left && (e.left = d.left + "px"), void 0 !== d.right && (e.right = d.right + "px"), 
                void 0 !== d.top && (e.top = d.top + "px"), void 0 !== d.bottom && (e.bottom = d.bottom + "px"), 
                d.marginLeft = 0, d.marginRight = 0, h.appendChild(b), h.appendChild(c);
                break;

              case "right":
                g.width = a.style.width, g.height = a.style.height, e.position = "relative", f.position = "absolute", 
                h.appendChild(b), h.appendChild(c);
                break;

              case "left":
                g.width = a.style.width, g.height = a.style.height, e.position = "absolute", f.position = "relative", 
                h.appendChild(b), h.appendChild(c);
                break;

              case "outside":
                h.appendChild(b);
            } else h.appendChild(b);
            this.listenersAdded || (this.addListeners(), this.listenersAdded = !0), this.initChart();
        }
    },
    createLabelsSet: function() {
        AmCharts.remove(this.labelsSet), this.labelsSet = this.container.set(), this.freeLabelsSet.push(this.labelsSet);
    },
    initChart: function() {
        this.initHC || (AmCharts.callInitHandler(this), this.initHC = !0), AmCharts.applyLang(this.language, this);
        var a = this.numberFormatter;
        a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), 
        void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator)), 
        (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision), 
        this.nf = {
            precision: this.precision,
            thousandsSeparator: this.thousandsSeparator,
            decimalSeparator: this.decimalSeparator
        }, this.pf = {
            precision: this.percentPrecision,
            thousandsSeparator: this.thousandsSeparator,
            decimalSeparator: this.decimalSeparator
        }, this.divIsFixed = AmCharts.findIfFixed(this.chartDiv), this.previousHeight = this.divRealHeight, 
        this.previousWidth = this.divRealWidth, this.destroy(), this.startInterval(), a = 0, 
        document.attachEvent && !window.opera && (a = 1), this.dmouseX = this.dmouseY = 0;
        var b = document.getElementsByTagName("html")[0];
        b && window.getComputedStyle && (b = window.getComputedStyle(b, null)) && (this.dmouseY = AmCharts.removePx(b.getPropertyValue("margin-top")), 
        this.dmouseX = AmCharts.removePx(b.getPropertyValue("margin-left"))), this.mouseMode = a, 
        (a = this.container) ? (a.container.innerHTML = "", this.chartDiv.appendChild(a.container), 
        a.setSize(this.realWidth, this.realHeight)) : a = new AmCharts.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this), 
        AmCharts.VML || AmCharts.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, 
        a.handDrawThickness = this.handDrawThickness, this.container = a, this.set && this.set.remove(), 
        this.set = a.set(), this.gridSet && this.gridSet.remove(), this.gridSet = a.set(), 
        this.cursorLineSet && this.cursorLineSet.remove(), this.cursorLineSet = a.set(), 
        this.graphsBehindSet && this.graphsBehindSet.remove(), this.graphsBehindSet = a.set(), 
        this.bulletBehindSet && this.bulletBehindSet.remove(), this.bulletBehindSet = a.set(), 
        this.columnSet && this.columnSet.remove(), this.columnSet = a.set(), this.graphsSet && this.graphsSet.remove(), 
        this.graphsSet = a.set(), this.trendLinesSet && this.trendLinesSet.remove(), this.trendLinesSet = a.set(), 
        this.axesSet && this.axesSet.remove(), this.axesSet = a.set(), this.cursorSet && this.cursorSet.remove(), 
        this.cursorSet = a.set(), this.scrollbarsSet && this.scrollbarsSet.remove(), this.scrollbarsSet = a.set(), 
        this.bulletSet && this.bulletSet.remove(), this.bulletSet = a.set(), this.freeLabelsSet && this.freeLabelsSet.remove(), 
        this.axesLabelsSet && this.axesLabelsSet.remove(), this.axesLabelsSet = a.set(), 
        this.freeLabelsSet = a.set(), this.balloonsSet && this.balloonsSet.remove(), this.balloonsSet = a.set(), 
        this.zoomButtonSet && this.zoomButtonSet.remove(), this.zoomButtonSet = a.set(), 
        this.linkSet && this.linkSet.remove(), this.linkSet = a.set(), this.renderFix()) : this.fire("failed", {
            type: "failed",
            chart: this
        });
    },
    measure: function() {
        var a = this.div;
        if (a) {
            var b = this.chartDiv, c = a.offsetWidth, d = a.offsetHeight, e = this.container;
            a.clientHeight && (c = a.clientWidth, d = a.clientHeight);
            var f = AmCharts.removePx(AmCharts.getStyle(a, "padding-left")), g = AmCharts.removePx(AmCharts.getStyle(a, "padding-right")), h = AmCharts.removePx(AmCharts.getStyle(a, "padding-top")), k = AmCharts.removePx(AmCharts.getStyle(a, "padding-bottom"));
            isNaN(f) || (c -= f), isNaN(g) || (c -= g), isNaN(h) || (d -= h), isNaN(k) || (d -= k), 
            f = a.style, a = f.width, f = f.height, -1 != a.indexOf("px") && (c = AmCharts.removePx(a)), 
            -1 != f.indexOf("px") && (d = AmCharts.removePx(f)), a = AmCharts.toCoordinate(this.width, c), 
            f = AmCharts.toCoordinate(this.height, d), this.balloon = AmCharts.processObject(this.balloon, AmCharts.AmBalloon, this.theme), 
            this.balloon.chart = this, (a != this.previousWidth || f != this.previousHeight) && a > 0 && f > 0 && (b.style.width = a + "px", 
            b.style.height = f + "px", e && e.setSize(a, f)), this.balloon.setBounds(2, 2, a - 2, f), 
            this.realWidth = a, this.realHeight = f, this.divRealWidth = c, this.divRealHeight = d;
        }
    },
    destroy: function() {
        this.chartDiv.innerHTML = "", this.clearTimeOuts(), this.interval && clearInterval(this.interval), 
        this.interval = 0/0;
    },
    clearTimeOuts: function() {
        var a = this.timeOuts;
        if (a) {
            var b;
            for (b = 0; b < a.length; b++) clearTimeout(a[b]);
        }
        this.timeOuts = [];
    },
    clear: function(a) {
        AmCharts.callMethod("clear", [ this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor ]), 
        this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null, 
        this.clearTimeOuts(), this.interval && clearInterval(this.interval), this.container && (this.container.remove(this.chartDiv), 
        this.container.remove(this.legendDiv)), a || AmCharts.removeChart(this);
    },
    setMouseCursor: function(a) {
        "auto" == a && AmCharts.isNN && (a = "default"), this.chartDiv.style.cursor = a, 
        this.legendDiv.style.cursor = a;
    },
    redrawLabels: function() {
        this.labels = [];
        var a = this.allLabels;
        this.createLabelsSet();
        var b;
        for (b = 0; b < a.length; b++) this.drawLabel(a[b]);
    },
    drawLabel: function(a) {
        if (this.container) {
            var b = a.y, c = a.text, d = a.align, e = a.size, f = a.color, g = a.rotation, h = a.alpha, k = a.bold, l = AmCharts.toCoordinate(a.x, this.realWidth), b = AmCharts.toCoordinate(b, this.realHeight);
            l || (l = 0), b || (b = 0), void 0 === f && (f = this.color), isNaN(e) && (e = this.fontSize), 
            d || (d = "start"), "left" == d && (d = "start"), "right" == d && (d = "end"), "center" == d && (d = "middle", 
            g ? b = this.realHeight - b + b / 2 : l = this.realWidth / 2 - l), void 0 === h && (h = 1), 
            void 0 === g && (g = 0), b += e / 2, c = AmCharts.text(this.container, c, f, this.fontFamily, e, d, k, h), 
            c.translate(l, b), 0 !== g && c.rotate(g), a.url ? (c.setAttr("cursor", "pointer"), 
            c.click(function() {
                AmCharts.getURL(a.url);
            })) : c.node.style.pointerEvents = "none", this.labelsSet.push(c), this.labels.push(c);
        }
    },
    addLabel: function(a, b, c, d, e, f, g, h, k, l) {
        a = {
            x: a,
            y: b,
            text: c,
            align: d,
            size: e,
            color: f,
            alpha: h,
            rotation: g,
            bold: k,
            url: l
        }, this.container && this.drawLabel(a), this.allLabels.push(a);
    },
    clearLabels: function() {
        var b, a = this.labels;
        for (b = a.length - 1; b >= 0; b--) a[b].remove();
        this.labels = [], this.allLabels = [];
    },
    updateHeight: function() {
        var a = this.divRealHeight, b = this.legend;
        if (b) {
            var c = this.legendDiv.offsetHeight, b = b.position;
            ("top" == b || "bottom" == b) && (a -= c, (0 > a || isNaN(a)) && (a = 0), this.chartDiv.style.height = a + "px");
        }
        return a;
    },
    updateWidth: function() {
        var a = this.divRealWidth, b = this.divRealHeight, c = this.legend;
        if (c) {
            var d = this.legendDiv, e = d.offsetWidth;
            isNaN(c.width) || (e = c.width);
            var f = d.offsetHeight, d = d.style, g = this.chartDiv.style, c = c.position;
            ("right" == c || "left" == c) && (a -= e, (0 > a || isNaN(a)) && (a = 0), g.width = a + "px", 
            "left" == c ? g.left = e + "px" : d.left = a + "px", b > f && (d.top = (b - f) / 2 + "px"));
        }
        return a;
    },
    getTitleHeight: function() {
        var a = 0, b = this.titles;
        if (0 < b.length) {
            var c, a = 15;
            for (c = 0; c < b.length; c++) {
                var d = b[c].size;
                isNaN(d) && (d = this.fontSize + 2), a += d + 6;
            }
        }
        return a;
    },
    addTitle: function(a, b, c, d, e) {
        return isNaN(b) && (b = this.fontSize + 2), a = {
            text: a,
            size: b,
            color: c,
            alpha: d,
            bold: e
        }, this.titles.push(a), a;
    },
    handleWheel: function(a) {
        var b = 0;
        a || (a = window.event), a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3), 
        b && this.handleWheelReal(b, a.shiftKey), a.preventDefault && a.preventDefault();
    },
    handleWheelReal: function() {},
    addListeners: function() {
        var a = this, b = a.chartDiv;
        document.addEventListener ? (a.panEventsEnabled && (b.style.msTouchAction = "none"), 
        "ontouchstart" in document.documentElement && (b.addEventListener("touchstart", function(b) {
            a.handleTouchMove.call(a, b), a.handleTouchStart.call(a, b);
        }, !0), b.addEventListener("touchmove", function(b) {
            a.handleTouchMove.call(a, b);
        }, !0), b.addEventListener("touchend", function(b) {
            a.handleTouchEnd.call(a, b);
        }, !0)), b.addEventListener("mousedown", function(b) {
            a.mouseIsOver = !0, a.handleMouseMove.call(a, b), a.handleMouseDown.call(a, b);
        }, !0), b.addEventListener("mouseover", function(b) {
            a.handleMouseOver.call(a, b);
        }, !0), b.addEventListener("mouseout", function(b) {
            a.handleMouseOut.call(a, b);
        }, !0)) : (b.attachEvent("onmousedown", function(b) {
            a.handleMouseDown.call(a, b);
        }), b.attachEvent("onmouseover", function(b) {
            a.handleMouseOver.call(a, b);
        }), b.attachEvent("onmouseout", function(b) {
            a.handleMouseOut.call(a, b);
        }));
    },
    dispDUpd: function() {
        var a;
        this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, a = "dataUpdated", this.fire(a, {
            type: a,
            chart: this
        })), this.chartCreated || (a = "init", this.fire(a, {
            type: a,
            chart: this
        })), this.chartRendered || (a = "rendered", this.fire(a, {
            type: a,
            chart: this
        }), this.chartRendered = !0), a = "drawn", this.fire(a, {
            type: a,
            chart: this
        });
    },
    validateSize: function() {
        var a = this;
        a.measure();
        var b = a.legend;
        if ((a.realWidth != a.previousWidth || a.realHeight != a.previousHeight) && 0 < a.realWidth && 0 < a.realHeight) {
            if (a.sizeChanged = !0, b) {
                clearTimeout(a.legendInitTO);
                var c = setTimeout(function() {
                    b.invalidateSize();
                }, 100);
                a.timeOuts.push(c), a.legendInitTO = c;
            }
            a.marginsUpdated = "xy" != a.type ? !1 : !0, clearTimeout(a.initTO), c = setTimeout(function() {
                a.initChart();
            }, 150), a.timeOuts.push(c), a.initTO = c;
        }
        a.renderFix(), b && b.renderFix();
    },
    invalidateSize: function() {
        this.previousHeight = this.previousWidth = 0/0, this.invalidateSizeReal();
    },
    invalidateSizeReal: function() {
        var a = this;
        a.marginsUpdated = !1, clearTimeout(a.validateTO);
        var b = setTimeout(function() {
            a.validateSize();
        }, 5);
        a.timeOuts.push(b), a.validateTO = b;
    },
    validateData: function(a) {
        this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = "xy" != this.type ? !1 : !0, 
        this.initChart(a));
    },
    validateNow: function() {
        this.chartRendered = !1, this.write(this.div);
    },
    showItem: function(a) {
        a.hidden = !1, this.initChart();
    },
    hideItem: function(a) {
        a.hidden = !0, this.initChart();
    },
    hideBalloon: function() {
        var a = this;
        clearInterval(a.hoverInt), clearTimeout(a.balloonTO), a.hoverInt = setTimeout(function() {
            a.hideBalloonReal.call(a);
        }, a.hideBalloonTime);
    },
    cleanChart: function() {},
    hideBalloonReal: function() {
        var a = this.balloon;
        a && a.hide();
    },
    showBalloon: function(a, b, c, d, e) {
        var f = this;
        clearTimeout(f.balloonTO), clearInterval(f.hoverInt), f.balloonTO = setTimeout(function() {
            f.showBalloonReal.call(f, a, b, c, d, e);
        }, 1);
    },
    showBalloonReal: function(a, b, c, d, e) {
        this.handleMouseMove();
        var f = this.balloon;
        f.enabled && (f.followCursor(!1), f.changeColor(b), !c || f.fixedPosition ? (f.setPosition(d, e), 
        f.followCursor(!1)) : f.followCursor(!0), a && f.showBalloon(a));
    },
    handleTouchMove: function(a) {
        this.hideBalloon();
        var b = this.chartDiv;
        a.touches && (a = a.touches.item(0), this.mouseX = a.pageX - AmCharts.findPosX(b), 
        this.mouseY = a.pageY - AmCharts.findPosY(b));
    },
    handleMouseOver: function() {
        AmCharts.resetMouseOver(), this.mouseIsOver = !0;
    },
    handleMouseOut: function() {
        AmCharts.resetMouseOver(), this.mouseIsOver = !1;
    },
    handleMouseMove: function(a) {
        if (this.mouseIsOver) {
            var b = this.chartDiv;
            a || (a = window.event);
            var c, d;
            if (a) {
                switch (this.posX = AmCharts.findPosX(b), this.posY = AmCharts.findPosY(b), this.mouseMode) {
                  case 1:
                    if (c = a.clientX - this.posX, d = a.clientY - this.posY, !this.divIsFixed) {
                        var e, f, b = document.body;
                        b && (e = b.scrollLeft, y1 = b.scrollTop), (b = document.documentElement) && (f = b.scrollLeft, 
                        y2 = b.scrollTop), e = Math.max(e, f), f = Math.max(y1, y2), c += e, d += f;
                    }
                    break;

                  case 0:
                    this.divIsFixed ? (c = a.clientX - this.posX, d = a.clientY - this.posY) : (c = a.pageX - this.posX, 
                    d = a.pageY - this.posY);
                }
                a.touches && (a = a.touches.item(0), c = a.pageX - this.posX, d = a.pageY - this.posY), 
                this.mouseX = c - this.dmouseX, this.mouseY = d - this.dmouseY;
            }
        }
    },
    handleTouchStart: function(a) {
        this.handleMouseDown(a);
    },
    handleTouchEnd: function(a) {
        AmCharts.resetMouseOver(), this.handleReleaseOutside(a);
    },
    handleReleaseOutside: function() {},
    handleMouseDown: function(a) {
        AmCharts.resetMouseOver(), this.mouseIsOver = !0, a && a.preventDefault && (this.panEventsEnabled ? a.preventDefault() : a.touches || a.preventDefault());
    },
    addLegend: function(a, b) {
        a = AmCharts.processObject(a, AmCharts.AmLegend, this.theme), a.divId = b;
        var c;
        return c = "object" != typeof b && b ? document.getElementById(b) : b, this.legend = a, 
        a.chart = this, c ? (a.div = c, a.position = "outside", a.autoMargins = !1) : a.div = this.legendDiv, 
        c = this.handleLegendEvent, this.listenTo(a, "showItem", c), this.listenTo(a, "hideItem", c), 
        this.listenTo(a, "clickMarker", c), this.listenTo(a, "rollOverItem", c), this.listenTo(a, "rollOutItem", c), 
        this.listenTo(a, "rollOverMarker", c), this.listenTo(a, "rollOutMarker", c), this.listenTo(a, "clickLabel", c), 
        a;
    },
    removeLegend: function() {
        this.legend = void 0, this.legendDiv.innerHTML = "";
    },
    handleResize: function() {
        (AmCharts.isPercents(this.width) || AmCharts.isPercents(this.height)) && this.invalidateSizeReal(), 
        this.renderFix();
    },
    renderFix: function() {
        if (!AmCharts.VML) {
            var a = this.container;
            a && a.renderFix();
        }
    },
    getSVG: function() {
        return AmCharts.hasSVG ? this.container : void 0;
    },
    animate: function(a, b, c, d, e, f, g) {
        return a["an_" + b] && AmCharts.removeFromArray(this.animations, a["an_" + b]), 
        c = {
            obj: a,
            frame: 0,
            attribute: b,
            from: c,
            to: d,
            time: e,
            effect: f,
            suffix: g
        }, a["an_" + b] = c, this.animations.push(c), c;
    },
    setLegendData: function(a) {
        var b = this.legend;
        b && b.setData(a);
    },
    startInterval: function() {
        var a = this;
        clearInterval(a.interval), a.interval = setInterval(function() {
            a.updateAnimations.call(a);
        }, AmCharts.updateRate);
    },
    stopAnim: function(a) {
        AmCharts.removeFromArray(this.animations, a);
    },
    updateAnimations: function() {
        var a;
        for (this.container && this.container.update(), a = this.animations.length - 1; a >= 0; a--) {
            var b = this.animations[a], c = 1e3 * b.time / AmCharts.updateRate, d = b.frame + 1, e = b.obj, f = b.attribute;
            if (c >= d) {
                b.frame++;
                var g = Number(b.from), h = Number(b.to) - g, c = AmCharts[b.effect](0, d, g, h, c);
                0 === h ? (this.animations.splice(a, 1), e.node.style[f] = Number(b.to) + b.suffix) : e.node.style[f] = c + b.suffix;
            } else e.node.style[f] = Number(b.to) + b.suffix, this.animations.splice(a, 1);
        }
    },
    inIframe: function() {
        try {
            return window.self !== window.top;
        } catch (a) {
            return !0;
        }
    },
    brr: function() {
        var b, a = window.location.hostname.split(".");
        if (2 <= a.length && (b = a[a.length - 2] + "." + a[a.length - 1]), this.amLink && (a = this.amLink.parentNode) && a.removeChild(this.amLink), 
        a = this.creditsPosition, "amcharts.com" != b || !0 === this.inIframe()) {
            var c = b = 0, d = this.realWidth, e = this.realHeight;
            ("serial" == this.type || "xy" == this.type) && (b = this.marginLeftReal, c = this.marginTopReal, 
            d = b + this.plotAreaWidth, e = c + this.plotAreaHeight);
            var f = "http://www.amcharts.com/javascript-charts/", g = "JavaScript charts", h = "JS chart by amCharts";
            "ammap" == this.product && (f = "http://www.ammap.com/javascript-maps/", g = "Interactive JavaScript maps", 
            h = "JS map by amCharts");
            var k = document.createElement("a"), h = document.createTextNode(h);
            k.setAttribute("href", f), k.setAttribute("title", g), k.appendChild(h), this.chartDiv.appendChild(k), 
            this.amLink = k, f = k.style, f.position = "absolute", f.textDecoration = "none", 
            f.color = this.color, f.fontFamily = this.fontFamily, f.fontSize = this.fontSize + "px", 
            f.opacity = .7, f.display = "block";
            var g = k.offsetWidth, k = k.offsetHeight, h = 5 + b, l = c + 5;
            "bottom-left" == a && (h = 5 + b, l = e - k - 3), "bottom-right" == a && (h = d - g - 5, 
            l = e - k - 3), "top-right" == a && (h = d - g - 5, l = c + 5), f.left = h + "px", 
            f.top = l + "px";
        }
    }
}), AmCharts.Slice = AmCharts.Class({
    construct: function() {}
}), AmCharts.SerialDataItem = AmCharts.Class({
    construct: function() {}
}), AmCharts.GraphDataItem = AmCharts.Class({
    construct: function() {}
}), AmCharts.Guide = AmCharts.Class({
    construct: function(a) {
        this.cname = "Guide", AmCharts.applyTheme(this, a, this.cname);
    }
}), AmCharts.AmGraph = AmCharts.Class({
    construct: function(a) {
        this.cname = "AmGraph", this.createEvents("rollOverGraphItem", "rollOutGraphItem", "clickGraphItem", "doubleClickGraphItem", "rightClickGraphItem", "clickGraph", "rollOverGraph", "rollOutGraph"), 
        this.type = "line", this.stackable = !0, this.columnCount = 1, this.columnIndex = 0, 
        this.centerCustomBullets = this.showBalloon = !0, this.maxBulletSize = 50, this.minBulletSize = 4, 
        this.balloonText = "[[value]]", this.hidden = this.scrollbar = this.animationPlayed = !1, 
        this.pointPosition = "middle", this.depthCount = 1, this.includeInMinMax = !0, this.negativeBase = 0, 
        this.visibleInLegend = !0, this.showAllValueLabels = !1, this.showBulletsAt = this.showBalloonAt = "close", 
        this.lineThickness = 1, this.dashLength = 0, this.connect = !0, this.lineAlpha = 1, 
        this.bullet = "none", this.bulletBorderThickness = 2, this.bulletBorderAlpha = 0, 
        this.bulletAlpha = 1, this.bulletSize = 8, this.cornerRadiusTop = this.hideBulletsCount = this.bulletOffset = 0, 
        this.cursorBulletAlpha = 1, this.gradientOrientation = "vertical", this.dy = this.dx = 0, 
        this.periodValue = "", this.clustered = !0, this.periodSpan = 1, this.y = this.x = 0, 
        this.switchable = !0, this.tcc = this.minDistance = 1, this.labelRotation = 0, this.labelAnchor = "auto", 
        this.labelOffset = 3, AmCharts.applyTheme(this, a, this.cname);
    },
    draw: function() {
        var a = this.chart, b = this.chart.type;
        isNaN(this.precision) || (this.numberFormatter ? this.numberFormatter.precision = this.precision : this.numberFormatter = {
            precision: this.precision,
            decimalSeparator: a.decimalSeparator,
            thousandsSeparator: a.thousandsSeparator
        });
        var c = a.container;
        this.container = c, this.destroy();
        var d = c.set(), e = c.set();
        this.behindColumns ? (a.graphsBehindSet.push(d), a.bulletBehindSet.push(e)) : (a.graphsSet.push(d), 
        a.bulletSet.push(e));
        var f = this.bulletAxis;
        if (AmCharts.isString(f) && (this.bulletAxis = a.getValueAxisById(f)), this.bulletSet = e, 
        !this.scrollbar) {
            var f = a.marginLeftReal, g = a.marginTopReal;
            d.translate(f, g), e.translate(f, g);
        }
        c = c.set(), AmCharts.remove(this.columnsSet), d.push(c), this.set = d, this.columnsSet = c, 
        this.columnsArray = [], this.ownColumns = [], this.allBullets = [], this.animationArray = [], 
        d = this.labelPosition, d || (c = this.valueAxis.stackType, d = "top", "column" == this.type && (a.rotate && (d = "right"), 
        "100%" == c || "regular" == c) && (d = "middle"), this.labelPosition = d), AmCharts.ifArray(this.data) && (a = !1, 
        "xy" == b ? this.xAxis.axisCreated && this.yAxis.axisCreated && (a = !0) : this.valueAxis.axisCreated && (a = !0), 
        !this.hidden && a && this.createGraph());
    },
    createGraph: function() {
        var a = this, b = a.chart;
        if (a.startAlpha = b.startAlpha, a.seqAn = b.sequencedAnimation, a.baseCoord = a.valueAxis.baseCoord, 
        void 0 === a.fillAlphas && (a.fillAlphas = 0), a.bulletColorR = a.bulletColor, void 0 === a.bulletColorR && (a.bulletColorR = a.lineColorR, 
        a.bulletColorNegative = a.negativeLineColor), void 0 === a.bulletAlpha && (a.bulletAlpha = a.lineAlpha), 
        clearTimeout(a.playedTO), !isNaN(a.valueAxis.min) && !isNaN(a.valueAxis.max)) {
            switch (b.type) {
              case "serial":
                a.categoryAxis && (a.createSerialGraph(), "candlestick" == a.type && 1 > a.valueAxis.minMaxMultiplier && a.positiveClip(a.set));
                break;

              case "radar":
                a.createRadarGraph();
                break;

              case "xy":
                a.createXYGraph(), a.positiveClip(a.set);
            }
            a.playedTO = setTimeout(function() {
                a.setAnimationPlayed.call(a);
            }, 500 * a.chart.startDuration);
        }
    },
    setAnimationPlayed: function() {
        this.animationPlayed = !0;
    },
    createXYGraph: function() {
        var a = [], b = [], c = this.xAxis, d = this.yAxis;
        this.pmh = d.viH + 1, this.pmw = c.viW + 1, this.pmy = this.pmx = 0;
        var e;
        for (e = this.start; e <= this.end; e++) {
            var f = this.data[e].axes[c.id].graphs[this.id], g = f.values, h = g.x, k = g.y, g = c.getCoordinate(h), l = d.getCoordinate(k);
            !isNaN(h) && !isNaN(k) && (a.push(g), b.push(l), h = this.createBullet(f, g, l, e), 
            k = this.labelText) && (f = this.createLabel(f, g, l, k), this.positionLabel(g, l, f, h), 
            this.allBullets.push(f));
        }
        this.drawLineGraph(a, b), this.launchAnimation();
    },
    createRadarGraph: function() {
        var d, e, f, a = this.valueAxis.stackType, b = [], c = [];
        for (f = this.start; f <= this.end; f++) {
            var h, g = this.data[f].axes[this.valueAxis.id].graphs[this.id];
            if (h = "none" == a || "3d" == a ? g.values.value : g.values.close, isNaN(h)) this.drawLineGraph(b, c), 
            b = [], c = []; else {
                var k = this.y - (this.valueAxis.getCoordinate(h) - this.height), l = 180 - 360 / (this.end - this.start + 1) * f;
                h = k * Math.sin(l / 180 * Math.PI), k *= Math.cos(l / 180 * Math.PI), b.push(h), 
                c.push(k);
                var l = this.createBullet(g, h, k, f), m = this.labelText;
                m && (g = this.createLabel(g, h, k, m), this.positionLabel(h, k, g, l), this.allBullets.push(g)), 
                isNaN(d) && (d = h), isNaN(e) && (e = k);
            }
        }
        b.push(d), c.push(e), this.drawLineGraph(b, c), this.launchAnimation();
    },
    positionLabel: function(a, b, c, d, e, f) {
        switch (fontSize = this.fontSize, lA = "middle", lR = 0, lC = !1, lP = this.labelPosition, 
        lBB = c.getBBox(), cBB = null, graphDataItem = d.graphDataItem, isRotated = this.chart.rotate, 
        isNegative = graphDataItem.isNegative, void 0 === fontSize && (fontSize = this.chart.fontSize), 
        b -= lBB.height / 4 / 2, lP) {
          case "top":
            lP = isRotated ? "top" : isNegative ? "bottom" : "top";
            break;

          case "right":
            lP = isRotated && isNegative ? "left" : "right";
            break;

          case "bottom":
            lP = isRotated ? "bottom" : isNegative ? "top" : "bottom";
            break;

          case "left":
            lP = isRotated && isNegative ? "right" : "left";
        }
        e = graphDataItem.columnGraphics;
        var g = f = 0;
        switch (e && (f = e.x, g = e.y), lP) {
          case "top":
            b -= d.size / 2 + lBB.height / 2 + this.labelOffset;
            break;

          case "right":
            lA = "start", a += d.size / 2 + this.labelOffset;
            break;

          case "bottom":
            b += d.size / 2 + lBB.height / 2 + this.labelOffset;
            break;

          case "left":
            lA = "end", a -= d.size / 2 + this.labelOffset;
            break;

          case "inside":
            "column" == this.type && (lC = !0, isRotated ? isNegative ? (lA = "end", a = f - 3 - this.labelOffset) : (lA = "start", 
            a = f + 3 + this.labelOffset) : b = isNegative ? g + 7 + this.labelOffset : g - 10 - this.labelOffset);
            break;

          case "middle":
            "column" == this.type && (lC = !0, isRotated ? a -= (a - f) / 2 + this.labelOffset - 3 : b -= (b - g) / 2 + this.labelOffset - 3);
        }
        return "auto" != this.labelAnchor && (lA = this.labelAnchor), c.attr({
            "text-anchor": lA
        }), this.labelRotation && c.rotate(this.labelRotation), c.translate(a, b), lBB = c.getBBox(), 
        e && lC && (lBB.height > graphDataItem.columnHeight || lBB.width > graphDataItem.columnWidth) && (c.remove(), 
        c = !1), c && "serial" == this.chart.type && (isRotated ? (0 > b || b > this.height) && (c.remove(), 
        c = !1) : (0 > a || a > this.width) && (c.remove(), c = !1)), c;
    },
    getGradRotation: function() {
        var a = 270;
        return "horizontal" == this.gradientOrientation && (a = 0), this.gradientRotation = a;
    },
    createSerialGraph: function() {
        this.dashLengthSwitched = this.fillColorsSwitched = this.lineColorSwitched = void 0;
        var a = this.chart, b = this.id, c = this.index, d = this.data, e = this.chart.container, f = this.valueAxis, g = this.type, h = this.columnWidthReal, k = this.showBulletsAt;
        isNaN(this.columnWidth) || (h = this.columnWidth), isNaN(h) && (h = .8);
        var u, x, F, B, I, Y, l = this.useNegativeColorIfDown, m = this.width, n = this.height, p = this.y, q = this.rotate, r = this.columnCount, t = AmCharts.toCoordinate(this.cornerRadiusTop, h / 2), w = this.connect, v = [], s = [], z = this.chart.graphs.length, E = this.dx / this.tcc, H = this.dy / this.tcc, V = f.stackType, T = this.start, fa = this.end, aa = this.scrollbar, ga = this.categoryAxis, Na = this.baseCoord, ma = this.negativeBase, ba = this.columnIndex, O = this.lineThickness, X = this.lineAlpha, na = this.lineColorR, $ = this.dashLength, W = this.set, ja = this.getGradRotation(), G = this.chart.columnSpacing, A = ga.cellWidth, ka = (A * h - r) / r;
        G > ka && (G = ka);
        var S, y, Z, hb, ib, Xa, Ya, eb = n + 1, fb = m + 1, Wa = 0, gb = 0, jb = this.fillColorsR, Da = this.negativeFillColors, wa = this.negativeLineColor, Oa = this.fillAlphas, Pa = this.negativeFillAlphas;
        "object" == typeof Oa && (Oa = Oa[0]), "object" == typeof Pa && (Pa = Pa[0]);
        var Za = f.getCoordinate(f.min);
        if (f.logarithmic && (Za = f.getCoordinate(f.minReal)), this.minCoord = Za, this.resetBullet && (this.bullet = "none"), 
        !(aa || "line" != g && "smoothedLine" != g && "step" != g || (1 == d.length && "step" != g && "none" == this.bullet && (this.bullet = "round", 
        this.resetBullet = !0), !Da && void 0 == wa || l))) {
            var Ja = ma;
            Ja > f.max && (Ja = f.max), Ja < f.min && (Ja = f.min), f.logarithmic && (Ja = f.minReal);
            var Aa = f.getCoordinate(Ja), Cb = f.getCoordinate(f.max);
            q ? (eb = n, fb = Math.abs(Cb - Aa), hb = n, ib = Math.abs(Za - Aa), Ya = gb = 0, 
            f.reversed ? (Wa = 0, Xa = Aa) : (Wa = Aa, Xa = 0)) : (fb = m, eb = Math.abs(Cb - Aa), 
            ib = m, hb = Math.abs(Za - Aa), Xa = Wa = 0, f.reversed ? (Ya = p, gb = Aa) : Ya = Aa + 1);
        }
        var Ba = Math.round;
        this.pmx = Ba(Wa), this.pmy = Ba(gb), this.pmh = Ba(eb), this.pmw = Ba(fb), this.nmx = Ba(Xa), 
        this.nmy = Ba(Ya), this.nmh = Ba(hb), this.nmw = Ba(ib), AmCharts.isModern || (this.nmy = this.nmx = 0, 
        this.nmh = this.height), this.clustered || (r = 1), h = "column" == g ? (A * h - G * (r - 1)) / r : A * h, 
        1 > h && (h = 1);
        var Db = this.fixedColumnWidth;
        isNaN(Db) || (h = Db);
        var J;
        if ("line" == g || "step" == g || "smoothedLine" == g) {
            if (T > 0) {
                for (J = T - 1; J > -1; J--) if (S = d[J], y = S.axes[f.id].graphs[b], Z = y.values.value, 
                !isNaN(Z)) {
                    T = J;
                    break;
                }
                if (this.lineColorField) for (J = T; J > -1; J--) if (S = d[J], y = S.axes[f.id].graphs[b], 
                y.lineColor) {
                    this.bulletColorSwitched = this.lineColorSwitched = y.lineColor;
                    break;
                }
                if (this.fillColorsField) for (J = T; J > -1; J--) if (S = d[J], y = S.axes[f.id].graphs[b], 
                y.fillColors) {
                    this.fillColorsSwitched = y.fillColors;
                    break;
                }
                if (this.dashLengthField) for (J = T; J > -1; J--) if (S = d[J], y = S.axes[f.id].graphs[b], 
                !isNaN(y.dashLength)) {
                    this.dashLengthSwitched = y.dashLength;
                    break;
                }
            }
            if (fa < d.length - 1) for (J = fa + 1; J < d.length; J++) if (S = d[J], y = S.axes[f.id].graphs[b], 
            Z = y.values.value, !isNaN(Z)) {
                fa = J;
                break;
            }
        }
        fa < d.length - 1 && fa++;
        var P = [], Q = [], Ea = !1;
        ("line" == g || "step" == g || "smoothedLine" == g) && (this.stackable && "regular" == V || "100%" == V || this.fillToGraph) && (Ea = !0);
        var Eb = this.noStepRisers, $a = -1e3, ab = -1e3, bb = this.minDistance, Fa = !0, Qa = !1;
        for (J = T; fa >= J; J++) {
            S = d[J], y = S.axes[f.id].graphs[b], y.index = J;
            var Ra, Ga = 0/0;
            if (l && void 0 == this.openField) for (var kb = J + 1; kb < d.length && (!d[kb] || !(Ra = d[J + 1].axes[f.id].graphs[b]) || !Ra.values || (Ga = Ra.values.value, 
            isNaN(Ga))); kb++) ;
            var R, N, L, ca, oa, ra, ha = 0/0, D = 0/0, C = 0/0, M = 0/0, K = 0/0, Ha = 0/0, xa = 0/0, Ia = 0/0, ya = 0/0, sa = 0/0, ta = 0/0, da = 0/0, ea = 0/0, U = 0/0, lb = 0/0, mb = 0/0, ia = 0/0, qa = void 0, Ca = jb, Ka = Oa, ua = na, nb = this.proCandlesticks, Sa = this.pattern;
            void 0 != y.pattern && (Sa = y.pattern), void 0 != y.color && (Ca = y.color), y.fillColors && (Ca = y.fillColors), 
            isNaN(y.alpha) || (Ka = y.alpha), isNaN(y.dashLength) || ($ = y.dashLength);
            var va = y.values;
            if (f.recalculateToPercents && (va = y.percents), va) {
                if (U = this.stackable && "none" != V && "3d" != V ? va.close : va.value, ("candlestick" == g || "ohlc" == g) && (U = va.close, 
                mb = va.low, xa = f.getCoordinate(mb), lb = va.high, ya = f.getCoordinate(lb)), 
                ia = va.open, C = f.getCoordinate(U), isNaN(ia) || (K = f.getCoordinate(ia), l && (Ga = ia, 
                ia = K = 0/0)), l && (void 0 == this.openField ? Ra && (Ra.isNegative = U > Ga ? !0 : !1, 
                isNaN(Ga) && (y.isNegative = !Fa)) : y.isNegative = Ga > U ? !0 : !1), !aa) switch (this.showBalloonAt) {
                  case "close":
                    y.y = C;
                    break;

                  case "open":
                    y.y = K;
                    break;

                  case "high":
                    y.y = ya;
                    break;

                  case "low":
                    y.y = xa;
                }
                var ha = S.x[ga.id], La = this.periodSpan - 1, la = Math.floor(A / 2) + Math.floor(La * A / 2), za = la, cb = 0;
                if ("left" == this.stepDirection && (cb = (2 * A + La * A) / 2, ha -= cb), "center" == this.stepDirection && (cb = A / 2, 
                ha -= cb), "start" == this.pointPosition && (ha -= A / 2 + Math.floor(La * A / 2), 
                la = 0, za = Math.floor(A) + Math.floor(La * A)), "end" == this.pointPosition && (ha += A / 2 + Math.floor(La * A / 2), 
                la = Math.floor(A) + Math.floor(La * A), za = 0), Eb) {
                    var ob = this.columnWidth;
                    isNaN(ob) || (la *= ob, za *= ob);
                }
                switch (aa || (y.x = ha), -1e5 > ha && (ha = -1e5), ha > m + 1e5 && (ha = m + 1e5), 
                q ? (D = C, M = K, K = C = ha, isNaN(ia) && !this.fillToGraph && (M = Na), Ha = xa, 
                Ia = ya) : (M = D = ha, isNaN(ia) && !this.fillToGraph && (K = Na)), (!nb && ia > U || nb && Y > U) && (y.isNegative = !0, 
                Da && (Ca = Da), Pa && (Ka = Pa), void 0 != wa && (ua = wa)), Qa = !1, isNaN(U) || (l ? U > Ga ? (Fa && (Qa = !0), 
                Fa = !1) : (Fa || (Qa = !0), Fa = !0) : y.isNegative = ma > U ? !0 : !1, Y = U), 
                g) {
                  case "line":
                    isNaN(U) ? w || (this.drawLineGraph(v, s, P, Q), v = [], s = [], P = [], Q = []) : ((Math.abs(D - $a) >= bb || Math.abs(C - ab) >= bb) && (v.push(D), 
                    s.push(C), $a = D, ab = C), sa = D, ta = C, da = D, ea = C, !Ea || isNaN(K) || isNaN(M) || (P.push(M), 
                    Q.push(K)), (Qa || void 0 != y.lineColor || void 0 != y.fillColors || !isNaN(y.dashLength)) && (this.drawLineGraph(v, s, P, Q), 
                    v = [ D ], s = [ C ], P = [], Q = [], !Ea || isNaN(K) || isNaN(M) || (P.push(M), 
                    Q.push(K)), l ? Fa ? (this.lineColorSwitched = na, this.fillColorsSwitched = jb) : (this.lineColorSwitched = wa, 
                    this.fillColorsSwitched = Da) : (this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors), 
                    this.dashLengthSwitched = y.dashLength), y.gap && (this.drawLineGraph(v, s, P, Q), 
                    v = [], s = [], P = [], Q = []));
                    break;

                  case "smoothedLine":
                    isNaN(U) ? w || (this.drawSmoothedGraph(v, s, P, Q), v = [], s = [], P = [], Q = []) : ((Math.abs(D - $a) >= bb || Math.abs(C - ab) >= bb) && (v.push(D), 
                    s.push(C), $a = D, ab = C), sa = D, ta = C, da = D, ea = C, !Ea || isNaN(K) || isNaN(M) || (P.push(M), 
                    Q.push(K)), void 0 == y.lineColor && void 0 == y.fillColors && isNaN(y.dashLength) || (this.drawSmoothedGraph(v, s, P, Q), 
                    v = [ D ], s = [ C ], P = [], Q = [], !Ea || isNaN(K) || isNaN(M) || (P.push(M), 
                    Q.push(K)), this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors, 
                    this.dashLengthSwitched = y.dashLength), y.gap && (this.drawSmoothedGraph(v, s, P, Q), 
                    v = [], s = [], P = [], Q = []));
                    break;

                  case "step":
                    if (isNaN(U)) w || ((1 >= this.periodSpan || 1 < this.periodSpan && D - u > la + za) && (u = x = 0/0), 
                    this.drawLineGraph(v, s, P, Q), v = [], s = [], P = [], Q = []); else {
                        if (q ? (isNaN(u) || (v.push(u), s.push(C - la)), s.push(C - la), v.push(D), s.push(C + za), 
                        v.push(D), !Ea || isNaN(K) || isNaN(M) || (P.push(F), Q.push(K - la), P.push(M), 
                        Q.push(K - la), P.push(M), Q.push(K + za))) : (isNaN(x) || (s.push(x), v.push(u), 
                        s.push(x), v.push(D - la)), v.push(D - la), s.push(C), v.push(D + za), s.push(C), 
                        !Ea || isNaN(K) || isNaN(M) || (P.push(M - la), Q.push(B), P.push(M - la), Q.push(K), 
                        P.push(M + za), Q.push(K))), u = D, x = C, F = M, B = K, sa = D, ta = C, da = D, 
                        ea = C, Qa || void 0 != y.lineColor || void 0 != y.fillColors || !isNaN(y.dashLength)) {
                            var Rb = v[v.length - 2], Sb = s[s.length - 2];
                            v.pop(), s.pop(), this.drawLineGraph(v, s, P, Q), v = [ Rb ], s = [ Sb ], P = [], 
                            Q = [], this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors, 
                            this.dashLengthSwitched = y.dashLength, l && (Fa ? (this.lineColorSwitched = na, 
                            this.fillColorsSwitched = jb) : (this.lineColorSwitched = wa, this.fillColorsSwitched = Da));
                        }
                        (Eb || y.gap) && (u = x = 0/0, this.drawLineGraph(v, s, P, Q), v = [], s = [], P = [], 
                        Q = []);
                    }
                    break;

                  case "column":
                    oa = ua, void 0 != y.lineColor && (oa = y.lineColor);
                    var Fb = this.topRadius;
                    if (!isNaN(U)) {
                        l || (y.isNegative = ma > U ? !0 : !1), y.isNegative && (Da && (Ca = Da), void 0 != wa && (oa = wa));
                        var Gb = f.min, Hb = f.max;
                        if (!(Gb > U && Gb > ia || U > Hb && ia > Hb)) {
                            var pa;
                            if (q) {
                                "3d" == V ? (N = C - (r / 2 - this.depthCount + 1) * (h + G) + G / 2 + H * ba, R = M + E * ba, 
                                pa = ba) : (N = Math.floor(C - (r / 2 - ba) * (h + G) + G / 2), R = M, pa = 0), 
                                L = h, sa = D, ta = N + h / 2, isNaN(M) || M > D && !y.isNegative && (sa = M), da = D, 
                                ea = N + h / 2, N + L > n + pa * H && (L = n - N + pa * H), pa * H > N && (L += N, 
                                N = pa * H), ca = D - M;
                                var Tb = R;
                                R = AmCharts.fitToBounds(R, 0, m), ca += Tb - R, ca = AmCharts.fitToBounds(ca, -R, m - R + E * ba), 
                                n > N && L > 0 && (qa = new AmCharts.Cuboid(e, ca, L, E - a.d3x, H - a.d3y, Ca, Ka, O, oa, X, ja, t, q, $, Sa, Fb), 
                                y.columnWidth = Math.abs(ca), y.columnHeight = Math.abs(L));
                            } else {
                                "3d" == V ? (R = D - (r / 2 - this.depthCount + 1) * (h + G) + G / 2 + E * ba, N = K + H * ba, 
                                pa = ba) : (R = D - (r / 2 - ba) * (h + G) + G / 2, N = K, pa = 0), L = h, sa = R + h / 2, 
                                ta = C, isNaN(K) || C > K && !y.isNegative && (ta = K), da = R + h / 2, ea = C, 
                                R + L > m + pa * E && (L = m - R + pa * E), pa * E > R && (L += R - pa * E, R = pa * E), 
                                ca = C - K;
                                var Ub = N;
                                N = AmCharts.fitToBounds(N, this.dy, n), ca += Ub - N, ca = AmCharts.fitToBounds(ca, -N + H * ba, n - N), 
                                m + ba * E > R && L > 0 && (this.showOnAxis && (N -= H / 2), qa = new AmCharts.Cuboid(e, L, ca, E - a.d3x, H - a.d3y, Ca, Ka, O, oa, this.lineAlpha, ja, t, q, $, Sa, Fb), 
                                y.columnHeight = Math.abs(ca), y.columnWidth = Math.abs(L));
                            }
                        }
                        qa && (ra = qa.set, y.columnGraphics = ra, ra.translate(R, N), this.columnsSet.push(ra), 
                        (y.url || this.showHandOnHover) && ra.setAttr("cursor", "pointer"), !aa) && ("none" == V && (I = q ? (this.end + 1 - J) * z - c : z * J + c), 
                        "3d" == V && (q ? (I = (this.end + 1 - J) * z - c - 1e3 * this.depthCount, sa += E * this.columnIndex, 
                        da += E * this.columnIndex, y.y += E * this.columnIndex) : (I = (z - c) * (J + 1) + 1e3 * this.depthCount, 
                        ta += H * this.columnIndex, ea += H * this.columnIndex, y.y += H * this.columnIndex)), 
                        ("regular" == V || "100%" == V) && (I = q ? 0 < va.value ? (this.end + 1 - J) * z + c : (this.end + 1 - J) * z - c : 0 < va.value ? z * J + c : z * J - c), 
                        this.columnsArray.push({
                            column: qa,
                            depth: I
                        }), y.x = q ? N + L / 2 : R + L / 2, this.ownColumns.push(qa), this.animateColumns(qa, J, D, M, C, K), 
                        this.addListeners(ra, y));
                    }
                    break;

                  case "candlestick":
                    if (!isNaN(ia) && !isNaN(U)) {
                        var db, pb;
                        if (oa = ua, void 0 != y.lineColor && (oa = y.lineColor), q) {
                            if (N = C - h / 2, R = M, L = h, N + L > n && (L = n - N), 0 > N && (L += N, N = 0), 
                            n > N && L > 0) {
                                var qb, rb;
                                U > ia ? (qb = [ D, Ia ], rb = [ M, Ha ]) : (qb = [ M, Ia ], rb = [ D, Ha ]), !isNaN(Ia) && !isNaN(Ha) && n > C && C > 0 && (db = AmCharts.line(e, qb, [ C, C ], oa, X, O), 
                                pb = AmCharts.line(e, rb, [ C, C ], oa, X, O)), ca = D - M, qa = new AmCharts.Cuboid(e, ca, L, E, H, Ca, Oa, O, oa, X, ja, t, q, $, Sa);
                            }
                        } else if (R = D - h / 2, N = K + O / 2, L = h, R + L > m && (L = m - R), 0 > R && (L += R, 
                        R = 0), ca = C - K, m > R && L > 0) {
                            nb && U >= ia && (Ka = 0);
                            var sb, tb, qa = new AmCharts.Cuboid(e, L, ca, E, H, Ca, Ka, O, oa, X, ja, t, q, $, Sa);
                            U > ia ? (sb = [ C, ya ], tb = [ K, xa ]) : (sb = [ K, ya ], tb = [ C, xa ]), !isNaN(ya) && !isNaN(xa) && m > D && D > 0 && (db = AmCharts.line(e, [ D, D ], sb, oa, X, O), 
                            pb = AmCharts.line(e, [ D, D ], tb, oa, X, O));
                        }
                        qa && (ra = qa.set, y.columnGraphics = ra, W.push(ra), ra.translate(R, N - O / 2), 
                        (y.url || this.showHandOnHover) && ra.setAttr("cursor", "pointer"), db && (W.push(db), 
                        W.push(pb)), sa = D, ta = C, q ? (ea = C, da = D, "open" == k && (da = M), "high" == k && (da = Ia), 
                        "low" == k && (da = Ha)) : (ea = C, "open" == k && (ea = K), "high" == k && (ea = ya), 
                        "low" == k && (ea = xa), da = D), aa || (y.x = q ? N + L / 2 : R + L / 2, this.animateColumns(qa, J, D, M, C, K), 
                        this.addListeners(ra, y)));
                    }
                    break;

                  case "ohlc":
                    if (!(isNaN(ia) || isNaN(lb) || isNaN(mb) || isNaN(U))) {
                        ia > U && (y.isNegative = !0, void 0 != wa && (ua = wa));
                        var ub, vb, wb;
                        if (q) {
                            var xb = C - h / 2, xb = AmCharts.fitToBounds(xb, 0, n), Ib = AmCharts.fitToBounds(C, 0, n), yb = C + h / 2, yb = AmCharts.fitToBounds(yb, 0, n);
                            vb = AmCharts.line(e, [ M, M ], [ xb, Ib ], ua, X, O, $), C > 0 && n > C && (ub = AmCharts.line(e, [ Ha, Ia ], [ C, C ], ua, X, O, $)), 
                            wb = AmCharts.line(e, [ D, D ], [ Ib, yb ], ua, X, O, $), ea = C, da = D, "open" == k && (da = M), 
                            "high" == k && (da = Ia), "low" == k && (da = Ha);
                        } else {
                            var zb = D - h / 2, zb = AmCharts.fitToBounds(zb, 0, m), Jb = AmCharts.fitToBounds(D, 0, m), Ab = D + h / 2, Ab = AmCharts.fitToBounds(Ab, 0, m);
                            vb = AmCharts.line(e, [ zb, Jb ], [ K, K ], ua, X, O, $), D > 0 && m > D && (ub = AmCharts.line(e, [ D, D ], [ xa, ya ], ua, X, O, $)), 
                            wb = AmCharts.line(e, [ Jb, Ab ], [ C, C ], ua, X, O, $), ea = C, "open" == k && (ea = K), 
                            "high" == k && (ea = ya), "low" == k && (ea = xa), da = D;
                        }
                        W.push(vb), W.push(ub), W.push(wb), sa = D, ta = C;
                    }
                }
                if (!aa && !isNaN(U)) {
                    var Kb = this.hideBulletsCount;
                    if (this.end - this.start <= Kb || 0 === Kb) {
                        var Vb = this.createBullet(y, da, ea, J), Lb = this.labelText;
                        if (Lb) {
                            var Bb = this.createLabel(y, da, ea, Lb);
                            (Bb = this.positionLabel(sa, ta, Bb, Vb, L, ca)) && this.allBullets.push(Bb);
                        }
                        if ("regular" == V || "100%" == V) {
                            var Mb = f.totalText;
                            if (Mb) {
                                var Ma = this.createLabel(y, 0, 0, Mb, f.totalTextColor);
                                this.allBullets.push(Ma);
                                var Ta, Ua, Nb = Ma.getBBox(), Ob = Nb.width, Pb = Nb.height, Qb = f.totals[J];
                                Qb && Qb.remove();
                                var Va = 0;
                                "column" != g && (Va = bulletSize), q ? (Ua = C, Ta = 0 > U ? D - Ob / 2 - 2 - Va : D + Ob / 2 + 3 + Va) : (Ta = D, 
                                Ua = 0 > U ? C + Pb / 2 + Va : C - Pb / 2 - 3 - Va), Ma.translate(Ta, Ua), f.totals[J] = Ma, 
                                q ? (0 > Ua || Ua > n) && Ma.remove() : (0 > Ta || Ta > m) && Ma.remove();
                            }
                        }
                    }
                }
            }
        }
        ("line" == g || "step" == g || "smoothedLine" == g) && ("smoothedLine" == g ? this.drawSmoothedGraph(v, s, P, Q) : this.drawLineGraph(v, s, P, Q), 
        aa || this.launchAnimation()), this.bulletsHidden && this.hideBullets();
    },
    animateColumns: function(a, b, c) {
        var g = this;
        c = g.chart.startDuration, c > 0 && !g.animationPlayed && (g.seqAn ? (a.set.hide(), 
        g.animationArray.push(a), a = setTimeout(function() {
            g.animate.call(g);
        }, c / (g.end - g.start + 1) * (b - g.start) * 1e3), g.timeOuts.push(a)) : g.animate(a));
    },
    createLabel: function(a, b, c, d, e) {
        var f = this.chart, g = a.labelColor;
        g || (g = this.color), g || (g = f.color), e && (g = e), e = this.fontSize, void 0 === e && (this.fontSize = e = f.fontSize);
        var h = this.labelFunction;
        return d = f.formatString(d, a), d = AmCharts.cleanFromEmpty(d), h && (d = h(a, d)), 
        a = AmCharts.text(this.container, d, g, f.fontFamily, e), a.node.style.pointerEvents = "none", 
        a.translate(b, c), this.bulletSet.push(a), a;
    },
    positiveClip: function(a) {
        a.clipRect(this.pmx, this.pmy, this.pmw, this.pmh);
    },
    negativeClip: function(a) {
        a.clipRect(this.nmx, this.nmy, this.nmw, this.nmh);
    },
    drawLineGraph: function(a, b, c, d) {
        var e = this;
        if (1 < a.length) {
            var f = e.set, g = e.chart, h = e.container, k = h.set(), l = h.set();
            f.push(l), f.push(k);
            var m = e.lineAlpha, n = e.lineThickness, f = e.fillAlphas, p = e.lineColorR, q = e.negativeLineAlpha;
            isNaN(q) && (q = m);
            var r = e.lineColorSwitched;
            r && (p = r);
            var r = e.fillColorsR, t = e.fillColorsSwitched;
            t && (r = t);
            var w = e.dashLength;
            (t = e.dashLengthSwitched) && (w = t);
            var t = e.negativeLineColor, v = e.negativeFillColors, s = e.negativeFillAlphas, u = e.baseCoord;
            0 !== e.negativeBase && (u = e.valueAxis.getCoordinate(e.negativeBase)), m = AmCharts.line(h, a, b, p, m, n, w, !1, !0), 
            k.push(m), k.click(function(a) {
                e.handleGraphEvent(a, "clickGraph");
            }).mouseover(function(a) {
                e.handleGraphEvent(a, "rollOverGraph");
            }).mouseout(function(a) {
                e.handleGraphEvent(a, "rollOutGraph");
            }), void 0 === t || e.useNegativeColorIfDown || (n = AmCharts.line(h, a, b, t, q, n, w, !1, !0), 
            l.push(n)), (f > 0 || s > 0) && (n = a.join(";").split(";"), q = b.join(";").split(";"), 
            m = g.type, "serial" == m ? 0 < c.length ? (c.reverse(), d.reverse(), n = a.concat(c), 
            q = b.concat(d)) : e.rotate ? (q.push(q[q.length - 1]), n.push(u), q.push(q[0]), 
            n.push(u), q.push(q[0]), n.push(n[0])) : (n.push(n[n.length - 1]), q.push(u), n.push(n[0]), 
            q.push(u), n.push(a[0]), q.push(q[0])) : "xy" == m && (b = e.fillToAxis) && (AmCharts.isString(b) && (b = g.getValueAxisById(b)), 
            "H" == b.orientation ? (u = "top" == b.position ? 0 : b.viH, n.push(n[n.length - 1]), 
            q.push(u), n.push(n[0]), q.push(u), n.push(a[0]), q.push(q[0])) : (u = "left" == b.position ? 0 : b.viW, 
            q.push(q[q.length - 1]), n.push(u), q.push(q[0]), n.push(u), q.push(q[0]), n.push(n[0]))), 
            a = e.gradientRotation, f > 0 && (g = AmCharts.polygon(h, n, q, r, f, 1, "#000", 0, a), 
            g.pattern(e.pattern), k.push(g)), (v || void 0 !== t) && (isNaN(s) && (s = f), v || (v = t), 
            h = AmCharts.polygon(h, n, q, v, s, 1, "#000", 0, a), h.pattern(e.pattern), l.push(h), 
            l.click(function(a) {
                e.handleGraphEvent(a, "clickGraph");
            }).mouseover(function(a) {
                e.handleGraphEvent(a, "rollOverGraph");
            }).mouseout(function(a) {
                e.handleGraphEvent(a, "rollOutGraph");
            }))), e.applyMask(l, k);
        }
    },
    applyMask: function(a, b) {
        var c = a.length();
        "serial" != this.chart.type || this.scrollbar || (this.positiveClip(b), c > 0 && this.negativeClip(a));
    },
    drawSmoothedGraph: function(a, b, c, d) {
        if (1 < a.length) {
            var e = this.set, f = this.container, g = f.set(), h = f.set();
            e.push(h), e.push(g);
            var k = this.lineAlpha, l = this.lineThickness, e = this.dashLength, m = this.fillAlphas, n = this.lineColorR, p = this.fillColorsR, q = this.negativeLineColor, r = this.negativeFillColors, t = this.negativeFillAlphas, w = this.baseCoord, v = this.lineColorSwitched;
            v && (n = v), (v = this.fillColorsSwitched) && (p = v), v = this.negativeLineAlpha, 
            isNaN(v) && (v = k), k = new AmCharts.Bezier(f, a, b, n, k, l, p, 0, e), g.push(k.path), 
            void 0 !== q && (l = new AmCharts.Bezier(f, a, b, q, v, l, p, 0, e), h.push(l.path)), 
            m > 0 && (k = a.join(";").split(";"), n = b.join(";").split(";"), l = "", 0 < c.length ? (c.push("M"), 
            d.push("M"), c.reverse(), d.reverse(), k = a.concat(c), n = b.concat(d)) : (this.rotate ? (l += " L" + w + "," + b[b.length - 1], 
            l += " L" + w + "," + b[0]) : (l += " L" + a[a.length - 1] + "," + w, l += " L" + a[0] + "," + w), 
            l += " L" + a[0] + "," + b[0]), c = new AmCharts.Bezier(f, k, n, 0/0, 0, 0, p, m, e, l), 
            c.path.pattern(this.pattern), g.push(c.path), r || void 0 !== q) && (t || (t = m), 
            r || (r = q), a = new AmCharts.Bezier(f, a, b, 0/0, 0, 0, r, t, e, l), a.path.pattern(this.pattern), 
            h.push(a.path)), this.applyMask(h, g);
        }
    },
    launchAnimation: function() {
        var a = this, b = a.chart.startDuration;
        if (b > 0 && !a.animationPlayed) {
            var c = a.set, d = a.bulletSet;
            AmCharts.VML || (c.attr({
                opacity: a.startAlpha
            }), d.attr({
                opacity: a.startAlpha
            })), c.hide(), d.hide(), a.seqAn ? (b = setTimeout(function() {
                a.animateGraphs.call(a);
            }, a.index * b * 1e3), a.timeOuts.push(b)) : a.animateGraphs();
        }
    },
    animateGraphs: function() {
        var a = this.chart, b = this.set, c = this.bulletSet, d = this.x, e = this.y;
        b.show(), c.show();
        var f = a.startDuration, a = a.startEffect;
        b && (this.rotate ? (b.translate(-1e3, e), c.translate(-1e3, e)) : (b.translate(d, -1e3), 
        c.translate(d, -1e3)), b.animate({
            opacity: 1,
            translate: d + "," + e
        }, f, a), c.animate({
            opacity: 1,
            translate: d + "," + e
        }, f, a));
    },
    animate: function(a) {
        var b = this.chart, c = this.animationArray;
        !a && 0 < c.length && (a = c[0], c.shift()), c = AmCharts[AmCharts.getEffect(b.startEffect)], 
        b = b.startDuration, a && (this.rotate ? a.animateWidth(b, c) : a.animateHeight(b, c), 
        a.set.show());
    },
    legendKeyColor: function() {
        var a = this.legendColor, b = this.lineAlpha;
        return void 0 === a && (a = this.lineColorR, 0 === b && (b = this.fillColorsR) && (a = "object" == typeof b ? b[0] : b)), 
        a;
    },
    legendKeyAlpha: function() {
        var a = this.legendAlpha;
        return void 0 === a && (a = this.lineAlpha, this.fillAlphas > a && (a = this.fillAlphas), 
        0 === a && (a = this.bulletAlpha), 0 === a && (a = 1)), a;
    },
    createBullet: function(a, b, c, d) {
        if (!isNaN(b) && !isNaN(c)) {
            d = this.container;
            var e = this.bulletOffset, f = this.bulletSize;
            isNaN(a.bulletSize) || (f = a.bulletSize);
            var g = a.values.value, h = this.maxValue, k = this.minValue, l = this.maxBulletSize, m = this.minBulletSize;
            isNaN(h) || (isNaN(g) || (f = (g - k) / (h - k) * (l - m) + m), k == h && (f = l)), 
            h = f, this.bulletAxis && (f = a.values.error, isNaN(f) || (g = f), f = this.bulletAxis.stepWidth * g), 
            f < this.minBulletSize && (f = this.minBulletSize), this.rotate ? b = a.isNegative ? b - e : b + e : c = a.isNegative ? c + e : c - e;
            var n, m = this.bulletColorR;
            a.lineColor && (this.bulletColorSwitched = a.lineColor), this.bulletColorSwitched && (m = this.bulletColorSwitched), 
            a.isNegative && void 0 !== this.bulletColorNegative && (m = this.bulletColorNegative), 
            void 0 !== a.color && (m = a.color);
            var p;
            "xy" == this.chart.type && this.valueField && (p = this.pattern, a.pattern && (p = a.pattern)), 
            e = this.bullet, a.bullet && (e = a.bullet);
            var g = this.bulletBorderThickness, k = this.bulletBorderColorR, l = this.bulletBorderAlpha, q = this.bulletAlpha;
            k || (k = m), this.useLineColorForBulletBorder && (k = this.lineColorR);
            var r = a.alpha;
            return isNaN(r) || (q = r), ("none" != this.bullet || a.bullet) && (n = AmCharts.bullet(d, e, f, m, q, g, k, l, h, 0, p)), 
            (this.customBullet || a.customBullet) && (p = this.customBullet, a.customBullet && (p = a.customBullet), 
            p && (n && n.remove(), "function" == typeof p ? (n = new p(), n.chart = this.chart, 
            a.bulletConfig && (n.availableSpace = c, n.graph = this, n.graphDataItem = a, n.bulletY = c, 
            a.bulletConfig.minCoord = this.minCoord - c, n.bulletConfig = a.bulletConfig), n.write(d), 
            n = n.set) : (this.chart.path && (p = this.chart.path + p), n = d.set(), d = d.image(p, 0, 0, f, f), 
            n.push(d), this.centerCustomBullets && d.translate(-f / 2, -f / 2)))), n && ((a.url || this.showHandOnHover) && n.setAttr("cursor", "pointer"), 
            "serial" == this.chart.type && (0 > b - 0 || b - 0 > this.width || -f / 2 > c || c - 0 > this.height) && (n.remove(), 
            n = null), n && (this.bulletSet.push(n), n.translate(b, c), this.addListeners(n, a), 
            this.allBullets.push(n)), a.bx = b, a.by = c), n ? (n.size = f || 0, a.bulletGraphics = n) : n = {
                size: 0
            }, n.graphDataItem = a, n;
        }
    },
    showBullets: function() {
        var b, a = this.allBullets;
        for (this.bulletsHidden = !1, b = 0; b < a.length; b++) a[b].show();
    },
    hideBullets: function() {
        var b, a = this.allBullets;
        for (this.bulletsHidden = !0, b = 0; b < a.length; b++) a[b].hide();
    },
    addListeners: function(a, b) {
        var c = this;
        a.mouseover(function(a) {
            c.handleRollOver(b, a);
        }).mouseout(function(a) {
            c.handleRollOut(b, a);
        }).touchend(function(a) {
            c.handleRollOver(b, a), c.chart.panEventsEnabled && c.handleClick(b, a);
        }).touchstart(function(a) {
            c.handleRollOver(b, a);
        }).click(function(a) {
            c.handleClick(b, a);
        }).dblclick(function(a) {
            c.handleDoubleClick(b, a);
        }).contextmenu(function(a) {
            c.handleRightClick(b, a);
        });
    },
    handleRollOver: function(a, b) {
        if (a) {
            var c = this.chart, d = {
                type: "rollOverGraphItem",
                item: a,
                index: a.index,
                graph: this,
                target: this,
                chart: this.chart,
                event: b
            };
            if (this.fire("rollOverGraphItem", d), c.fire("rollOverGraphItem", d), clearTimeout(c.hoverInt), 
            d = this.showBalloon, c.chartCursor && "serial" == c.type && (d = !1, !c.chartCursor.valueBalloonsEnabled && this.showBalloon && (d = !0)), 
            d) {
                var d = c.formatString(this.balloonText, a, !0), e = this.balloonFunction;
                e && (d = e(a, a.graph)), d = AmCharts.cleanFromEmpty(d), e = c.getBalloonColor(this, a), 
                c.balloon.showBullet = !1, c.balloon.pointerOrientation = "V";
                var f = a.x, g = a.y;
                c.rotate && (f = a.y, g = a.x), c.showBalloon(d, e, !0, f + c.marginLeftReal, g + c.marginTopReal);
            }
        }
        this.handleGraphEvent(b, "rollOverGraph");
    },
    handleRollOut: function(a, b) {
        if (this.chart.hideBalloon(), a) {
            var c = {
                type: "rollOutGraphItem",
                item: a,
                index: a.index,
                graph: this,
                target: this,
                chart: this.chart,
                event: b
            };
            this.fire("rollOutGraphItem", c), this.chart.fire("rollOutGraphItem", c);
        }
        this.handleGraphEvent(b, "rollOutGraph");
    },
    handleClick: function(a, b) {
        if (a) {
            var c = {
                type: "clickGraphItem",
                item: a,
                index: a.index,
                graph: this,
                target: this,
                chart: this.chart,
                event: b
            };
            this.fire("clickGraphItem", c), this.chart.fire("clickGraphItem", c), AmCharts.getURL(a.url, this.urlTarget);
        }
        this.handleGraphEvent(b, "clickGraph");
    },
    handleGraphEvent: function(a, b) {
        var c = {
            type: b,
            graph: this,
            target: this,
            chart: this.chart,
            event: a
        };
        this.fire(b, c), this.chart.fire(b, c);
    },
    handleRightClick: function(a, b) {
        if (a) {
            var c = {
                type: "rightClickGraphItem",
                item: a,
                index: a.index,
                graph: this,
                target: this,
                chart: this.chart,
                event: b
            };
            this.fire("rightClickGraphItem", c), this.chart.fire("rightClickGraphItem", c);
        }
    },
    handleDoubleClick: function(a, b) {
        if (a) {
            var c = {
                type: "doubleClickGraphItem",
                item: a,
                index: a.index,
                graph: this,
                target: this,
                chart: this.chart,
                event: b
            };
            this.fire("doubleClickGraphItem", c), this.chart.fire("doubleClickGraphItem", c);
        }
    },
    zoom: function(a, b) {
        this.start = a, this.end = b, this.draw();
    },
    changeOpacity: function(a) {
        var b = this.set;
        if (b && b.setAttr("opacity", a), b = this.ownColumns) {
            var c;
            for (c = 0; c < b.length; c++) {
                var d = b[c].set;
                d && d.setAttr("opacity", a);
            }
        }
        (b = this.bulletSet) && b.setAttr("opacity", a);
    },
    destroy: function() {
        AmCharts.remove(this.set), AmCharts.remove(this.bulletSet);
        var a = this.timeOuts;
        if (a) {
            var b;
            for (b = 0; b < a.length; b++) clearTimeout(a[b]);
        }
        this.timeOuts = [];
    }
}), AmCharts.ChartCursor = AmCharts.Class({
    construct: function(a) {
        this.cname = "ChartCursor", this.createEvents("changed", "zoomed", "onHideCursor", "draw", "selected", "moved"), 
        this.enabled = !0, this.cursorAlpha = 1, this.selectionAlpha = .2, this.cursorColor = "#CC0000", 
        this.categoryBalloonAlpha = 1, this.color = "#FFFFFF", this.type = "cursor", this.zoomed = !1, 
        this.zoomable = !0, this.pan = !1, this.categoryBalloonDateFormat = "MMM DD, YYYY", 
        this.categoryBalloonEnabled = this.valueBalloonsEnabled = !0, this.rolledOver = !1, 
        this.cursorPosition = "middle", this.bulletsEnabled = this.skipZoomDispatch = !1, 
        this.bulletSize = 8, this.selectWithoutZooming = this.oneBalloonOnly = !1, this.graphBulletSize = 1.7, 
        this.animationDuration = .3, this.zooming = !1, this.adjustment = 0, this.avoidBalloonOverlapping = !0, 
        AmCharts.applyTheme(this, a, this.cname);
    },
    draw: function() {
        var a = this;
        a.destroy();
        var b = a.chart, c = b.container;
        a.rotate = b.rotate, a.container = c, c = c.set(), c.translate(a.x, a.y), a.set = c, 
        b.cursorSet.push(c), c = new AmCharts.AmBalloon(), c.chart = b, a.categoryBalloon = c, 
        AmCharts.copyProperties(b.balloon, c), c.cornerRadius = 0, c.shadowAlpha = 0, c.borderThickness = 1, 
        c.borderAlpha = 1, c.showBullet = !1;
        var d = a.categoryBalloonColor;
        if (void 0 === d && (d = a.cursorColor), c.fillColor = d, c.fillAlpha = a.categoryBalloonAlpha, 
        c.borderColor = d, c.color = a.color, d = a.valueLineAxis, AmCharts.isString(d) && (d = b.getValueAxisById(d)), 
        d || (d = b.valueAxes[0]), a.valueLineAxis = d, a.valueLineBalloonEnabled && (d = new AmCharts.AmBalloon(), 
        a.vaBalloon = d, AmCharts.copyProperties(c, d), d.animationDuration = 0, a.rotate || (d.pointerOrientation = "H")), 
        a.rotate && (c.pointerOrientation = "H"), a.extraWidth = 0, a.prevX = [], a.prevY = [], 
        a.prevTX = [], a.prevTY = [], a.valueBalloonsEnabled) for (c = 0; c < b.graphs.length; c++) d = new AmCharts.AmBalloon(), 
        d.chart = b, AmCharts.copyProperties(b.balloon, d), b.graphs[c].valueBalloon = d;
        "cursor" == a.type ? a.createCursor() : a.createCrosshair(), a.interval = setInterval(function() {
            a.detectMovement.call(a);
        }, 40);
    },
    updateData: function() {
        var a = this.chart;
        this.data = a.chartData, this.firstTime = a.firstTime, this.lastTime = a.lastTime;
    },
    createCursor: function() {
        var e, f, g, h, a = this.chart, b = this.cursorAlpha, c = a.categoryAxis, d = this.categoryBalloon;
        g = a.dx, h = a.dy;
        var k = this.width, l = this.height, a = a.rotate;
        d.pointerWidth = c.tickLength, a ? (e = [ 0, k, k + g ], f = [ 0, 0, h ], g = [ g, 0, 0 ], 
        h = [ h, 0, l ]) : (e = [ g, 0, 0 ], f = [ h, 0, l ], g = [ 0, k, k + g ], h = [ 0, 0, h ]), 
        this.line = e = AmCharts.line(this.container, e, f, this.cursorColor, b, 1), (f = this.fullRectSet) ? (f.push(e), 
        f.translate(this.x, this.y)) : this.set.push(e), this.valueLineEnabled && (e = this.valueLineAlpha, 
        isNaN(e) || (b = e), this.vLine = b = AmCharts.line(this.container, g, h, this.cursorColor, b, 1), 
        this.set.push(b)), this.setBalloonBounds(d, c, a), (c = this.vaBalloon) && this.setBalloonBounds(c, this.valueLineAxis, !a), 
        this.hideCursor();
    },
    createCrosshair: function() {
        var a = this.cursorAlpha, b = this.container, c = AmCharts.line(b, [ 0, 0 ], [ 0, this.height ], this.cursorColor, a, 1), a = AmCharts.line(b, [ 0, this.width ], [ 0, 0 ], this.cursorColor, a, 1);
        this.set.push(c), this.set.push(a), this.vLine = c, this.hLine = a, this.hideCursor();
    },
    detectMovement: function() {
        var a = this.chart;
        if (a.mouseIsOver) {
            var b = a.mouseX - this.x, c = a.mouseY - this.y;
            b > -.5 && b < this.width + 1 && c > 0 && c < this.height ? (this.drawing ? this.rolledOver || a.setMouseCursor("crosshair") : this.pan && (this.rolledOver || a.setMouseCursor("move")), 
            this.rolledOver = !0, (this.valueLineEnabled || this.valueLineBalloonEnabled) && this.updateVLine(b, c), 
            this.setPosition()) : this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1);
        } else this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1);
    },
    updateVLine: function(a, b) {
        var c = this.vLine, d = this.vaBalloon;
        if ((c || d) && !this.panning && !this.drawing) {
            c && c.show();
            var f, e = this.valueLineAxis, g = this.rotate;
            if (g ? (c && c.translate(a, 0), e && (f = e.coordinateToValue(a)), c = a) : (c && c.translate(0, b), 
            e && (f = e.coordinateToValue(b)), c = b - 1), d && !isNaN(f) && this.prevLineValue != f) {
                var h = e.formatValue(f, !0);
                d && (this.setBalloonPosition(d, e, c, !g), d.showBalloon(h));
            }
            this.prevLineValue = f;
        }
    },
    getMousePosition: function() {
        var a, b = this.width, c = this.height;
        return a = this.chart, this.rotate ? (a = a.mouseY - this.y, 0 > a && (a = 0), a > c && (a = c)) : (a = a.mouseX - this.x - 1, 
        0 > a && (a = 0), a > b && (a = b)), a;
    },
    updateCrosshair: function() {
        var a = this.chart, b = a.mouseX - this.x, c = a.mouseY - this.y, d = this.vLine, e = this.hLine, b = AmCharts.fitToBounds(b, 0, this.width), c = AmCharts.fitToBounds(c, 0, this.height);
        0 < this.cursorAlpha && (d.show(), e.show(), d.translate(b, 0), e.translate(0, c)), 
        this.zooming && (a.hideXScrollbar && (b = 0/0), a.hideYScrollbar && (c = 0/0), this.updateSelectionSize(b, c)), 
        this.fireMoved(), a.mouseIsOver || this.zooming || this.hideCursor();
    },
    fireMoved: function() {
        var a = this.chart, b = {
            type: "moved",
            target: this
        };
        b.chart = a, b.zooming = this.zooming, b.x = a.mouseX - this.x, b.y = a.mouseY - this.y, 
        this.fire("moved", b);
    },
    updateSelectionSize: function(a, b) {
        AmCharts.remove(this.selection);
        var c = this.selectionPosX, d = this.selectionPosY, e = 0, f = 0, g = this.width, h = this.height;
        isNaN(a) || (c > a && (e = a, g = c - a), a > c && (e = c, g = a - c), c == a && (e = a, 
        g = 0), g += this.extraWidth, e -= this.extraWidth / 2), isNaN(b) || (d > b && (f = b, 
        h = d - b), b > d && (f = d, h = b - d), d == b && (f = b, h = 0), h += this.extraWidth, 
        f -= this.extraWidth / 2), g > 0 && h > 0 && (c = AmCharts.rect(this.container, g, h, this.cursorColor, this.selectionAlpha), 
        c.translate(e + this.x, f + this.y), this.selection = c);
    },
    arrangeBalloons: function() {
        var a = this.valueBalloons, b = this.x, c = this.y, d = this.height + c;
        a.sort(this.compareY);
        var e;
        for (e = 0; e < a.length; e++) {
            var f = a[e].balloon;
            f.setBounds(b, c, b + this.width, d), f.prevX = this.prevX[e], f.prevY = this.prevY[e], 
            f.prevTX = this.prevTX[e], f.prevTY = this.prevTY[e], f.draw(), d = f.yPos - 3;
        }
        this.arrangeBalloons2();
    },
    compareY: function(a, b) {
        return a.yy < b.yy ? 1 : -1;
    },
    arrangeBalloons2: function() {
        var a = this.valueBalloons;
        a.reverse();
        var b, d, e, c = this.x, f = a.length;
        for (e = 0; f > e; e++) {
            var g = a[e].balloon;
            b = g.bottom;
            var h = g.bottom - g.yPos, k = f - e - 1;
            e > 0 && d + 3 > b - h && (g.setBounds(c, d + 3, c + this.width, d + h + 3), g.prevX = this.prevX[k], 
            g.prevY = this.prevY[k], g.prevTX = this.prevTX[k], g.prevTY = this.prevTY[k], g.draw()), 
            g.set && g.set.show(), this.prevX[k] = g.prevX, this.prevY[k] = g.prevY, this.prevTX[k] = g.prevTX, 
            this.prevTY[k] = g.prevTY, d = g.bottom;
        }
    },
    showBullets: function() {
        AmCharts.remove(this.allBullets);
        var a = this.container, b = a.set();
        this.set.push(b), this.set.show(), this.allBullets = b;
        var c, b = this.chart.graphs;
        for (c = 0; c < b.length; c++) {
            var d = b[c];
            if (!d.hidden && d.balloonText) {
                var e = this.data[this.index].axes[d.valueAxis.id].graphs[d.id], f = e.y;
                if (!isNaN(f)) {
                    var g, h;
                    g = e.x, this.rotate ? (h = f, f = g) : h = g, d = AmCharts.circle(a, this.bulletSize / 2, this.chart.getBalloonColor(d, e, !0), d.cursorBulletAlpha), 
                    d.translate(h, f), this.allBullets.push(d);
                }
            }
        }
    },
    destroy: function() {
        this.clear(), AmCharts.remove(this.selection), this.selection = null;
        var a = this.categoryBalloon;
        a && a.destroy(), (a = this.vaBalloon) && a.destroy(), this.destroyValueBalloons(), 
        AmCharts.remove(this.set);
    },
    clear: function() {
        clearInterval(this.interval);
    },
    destroyValueBalloons: function() {
        var a = this.valueBalloons;
        if (a) {
            var b;
            for (b = 0; b < a.length; b++) a[b].balloon.hide();
        }
    },
    zoom: function(a, b, c, d) {
        var e = this.chart;
        this.destroyValueBalloons(), this.zooming = !1;
        var f;
        this.rotate ? this.selectionPosY = f = e.mouseY : this.selectionPosX = f = e.mouseX, 
        this.start = a, this.end = b, this.startTime = c, this.endTime = d, this.zoomed = !0, 
        d = e.categoryAxis, e = this.rotate, b = this.width, c = this.height, a = d.stepWidth, 
        this.fullWidth && (f = 1, d.parseDates && !d.equalSpacing && (f = d.minDuration()), 
        e ? this.extraWidth = c = a * f : (this.extraWidth = b = a * f, this.categoryBalloon.minWidth = b), 
        this.line && this.line.remove(), this.line = AmCharts.rect(this.container, b, c, this.cursorColor, this.cursorAlpha, 0), 
        this.fullRectSet && this.fullRectSet.push(this.line)), this.stepWidth = a, this.tempVal = this.valueBalloonsEnabled, 
        this.valueBalloonsEnabled = !1, this.setPosition(), this.valueBalloonsEnabled = this.tempVal, 
        this.hideCursor();
    },
    hideObj: function(a) {
        a && a.hide();
    },
    hideCursor: function(a) {
        void 0 === a && (a = !0), this.hideObj(this.set), this.hideObj(this.categoryBalloon), 
        this.hideObj(this.line), this.hideObj(this.vLine), this.hideObj(this.hLine), this.hideObj(this.vaBalloon), 
        this.hideObj(this.allBullets), this.destroyValueBalloons(), this.selectWithoutZooming || AmCharts.remove(this.selection), 
        this.previousIndex = 0/0, a && this.fire("onHideCursor", {
            type: "onHideCursor",
            chart: this.chart,
            target: this
        }), this.drawing || this.chart.setMouseCursor("auto"), this.normalizeBulletSize();
    },
    setPosition: function(a, b, c) {
        void 0 === b && (b = !0), "cursor" == this.type ? (this.tempPosition = 0/0, AmCharts.ifArray(this.data) && (isNaN(a) && (a = this.getMousePosition()), 
        (a != this.previousMousePosition || !0 === this.zoomed || this.oneBalloonOnly) && !isNaN(a) && ("mouse" == this.cursorPosition && (this.tempPosition = a), 
        isNaN(c) && (c = this.chart.categoryAxis.xToIndex(a)), c != this.previousIndex || this.zoomed || "mouse" == this.cursorPosition || this.oneBalloonOnly) && (this.updateCursor(c, b), 
        this.zoomed = !1), this.previousMousePosition = a)) : this.updateCrosshair();
    },
    normalizeBulletSize: function() {
        var a = this.resizedBullets;
        if (a) for (var b = 0; b < a.length; b++) {
            var c = a[b], d = c.bulletGraphics;
            d && (d.translate(c.bx, c.by, 1), c = c.graph, isNaN(this.graphBulletAlpha) || (d.setAttr("fill-opacity", c.bulletAlpha), 
            d.setAttr("stroke-opacity", c.bulletBorderAlpha)));
        }
    },
    updateCursor: function(a, b) {
        var c = this.chart, d = this.fullWidth, e = c.mouseX - this.x, f = c.mouseY - this.y;
        if (this.drawingNow && (AmCharts.remove(this.drawingLine), this.drawingLine = AmCharts.line(this.container, [ this.x + this.drawStartX, this.x + e ], [ this.y + this.drawStartY, this.y + f ], this.cursorColor, 1, 1)), 
        this.enabled) {
            void 0 === b && (b = !0), this.index = a += this.adjustment;
            var g = c.categoryAxis, h = c.dx, k = c.dy, l = this.x + 1, m = this.y + 1, n = this.width, p = this.height, q = this.data[a];
            if (this.fireMoved(), q) {
                var r = q.x[g.id], t = c.rotate, w = this.stepWidth, v = this.categoryBalloon, s = this.firstTime, u = this.lastTime, x = this.cursorPosition, F = this.zooming, B = this.panning, z = c.graphs;
                if (c.mouseIsOver || F || B || this.forceShow) if (this.forceShow = !1, B) {
                    var h = this.panClickPos, c = this.panClickEndTime, F = this.panClickStartTime, I = this.panClickEnd, l = this.panClickStart, e = (t ? h - f : h - e) / w;
                    (!g.parseDates || g.equalSpacing) && (e = Math.round(e)), 0 !== e && (h = {
                        type: "zoomed",
                        target: this
                    }, h.chart = this.chart, g.parseDates && !g.equalSpacing ? (c + e > u && (e = u - c), 
                    s > F + e && (e = s - F), h.start = Math.round(F + e), h.end = Math.round(c + e), 
                    this.fire(h.type, h)) : I + e >= this.data.length || 0 > l + e || (h.start = l + e, 
                    h.end = I + e, this.fire(h.type, h)));
                } else {
                    if ("start" == x ? r -= g.cellWidth / 2 : "mouse" == x && (c.mouseIsOver ? r = t ? f - 2 : e - 2 : isNaN(this.tempPosition) || (r = this.tempPosition - 2)), 
                    t) {
                        if (0 > r) {
                            if (!F) return void this.hideCursor();
                            r = 0;
                        }
                        if (r > p + 1) {
                            if (!F) return void this.hideCursor();
                            r = p + 1;
                        }
                    } else {
                        if (0 > r) {
                            if (!F) return void this.hideCursor();
                            r = 0;
                        }
                        if (r > n) {
                            if (!F) return void this.hideCursor();
                            r = n;
                        }
                    }
                    if (0 < this.cursorAlpha) {
                        var E = this.line;
                        t ? (s = 0, u = r + k, d && (u -= g.cellWidth / 2)) : (s = r, u = 0, d && (s -= g.cellWidth / 2)), 
                        w = this.animationDuration, w > 0 && !this.zooming ? isNaN(this.previousX) ? E.translate(s, u) : (E.translate(this.previousX, this.previousY), 
                        E.animate({
                            translate: s + "," + u
                        }, w, "easeOutSine")) : E.translate(s, u), this.previousX = s, this.previousY = u, 
                        E.show();
                    }
                    if (this.linePos = t ? r + k : r, F && (d && E.hide(), t ? this.updateSelectionSize(0/0, r) : this.updateSelectionSize(r, 0/0)), 
                    w = !0, F && (w = !1), this.categoryBalloonEnabled && w ? (this.setBalloonPosition(v, g, r, t), 
                    (s = this.categoryBalloonFunction) ? v.showBalloon(s(q.category)) : g.parseDates ? (g = AmCharts.formatDate(q.category, this.categoryBalloonDateFormat, c), 
                    -1 != g.indexOf("fff") && (g = AmCharts.formatMilliseconds(g, q.category)), v.showBalloon(g)) : v.showBalloon(AmCharts.fixNewLines(q.category))) : v.hide(), 
                    z && this.bulletsEnabled && this.showBullets(), this.oneBalloonOnly) {
                        for (r = 1/0, g = 0; g < z.length; g++) s = z[g], s.showBalloon && !s.hidden && s.balloonText && (u = q.axes[s.valueAxis.id].graphs[s.id], 
                        v = u.y, isNaN(v) || (t ? Math.abs(e - v) < r && (r = Math.abs(e - v), I = s) : Math.abs(f - v) < r && (r = Math.abs(f - v), 
                        I = s)));
                        this.mostCloseGraph && (I = this.mostCloseGraph);
                    }
                    if ((a != this.previousIndex || I != this.previousMostCloseGraph) && (this.normalizeBulletSize(), 
                    this.destroyValueBalloons(), this.resizedBullets = [], z && this.valueBalloonsEnabled && w && c.balloon.enabled)) {
                        for (this.valueBalloons = w = [], g = 0; g < z.length; g++) if (s = z[g], v = 0/0, 
                        (!this.oneBalloonOnly || s == I) && s.showBalloon && !s.hidden && s.balloonText && ("step" == s.type && "left" == s.stepDirection && (q = this.data[a + 1]), 
                        q)) {
                            if ((u = q.axes[s.valueAxis.id].graphs[s.id]) && (v = u.y), this.showNextAvailable && isNaN(v) && a + 1 < this.data.length) for (r = a + 1; r < this.data.length && (!(d = this.data[r]) || (u = d.axes[s.valueAxis.id].graphs[s.id], 
                            v = u.y, isNaN(v))); r++) ;
                            isNaN(v) || (d = u.x, k = !0, t ? (r = v, (0 > d || d > p) && (k = !1)) : (r = d, 
                            d = v, (0 > r || r > n + h + 1) && (k = !1)), k && (k = this.graphBulletSize, E = this.graphBulletAlpha, 
                            1 == k && isNaN(E) || !AmCharts.isModern || !(x = u.bulletGraphics) || (x.getBBox(), 
                            x.translate(u.bx, u.by, k), this.resizedBullets.push(u), isNaN(E) || (x.setAttr("fill-opacity", E), 
                            x.setAttr("stroke-opacity", E))), k = s.valueBalloon, E = c.getBalloonColor(s, u), 
                            k.setBounds(l, m, l + n, m + p), k.pointerOrientation = "H", x = this.balloonPointerOrientation, 
                            "vertical" == x && (k.pointerOrientation = "V"), "horizontal" == x && (k.pointerOrientation = "H"), 
                            k.changeColor(E), void 0 !== s.balloonAlpha && (k.fillAlpha = s.balloonAlpha), void 0 !== s.balloonTextColor && (k.color = s.balloonTextColor), 
                            k.setPosition(r + l, d + m), r = c.formatString(s.balloonText, u, !0), (d = s.balloonFunction) && (r = d(u, s).toString()), 
                            "" !== r && (t ? k.showBalloon(r) : (k.text = r, k.show = !0), w.push({
                                yy: v,
                                balloon: k
                            })), !t && k.set && (k.set.hide(), s = k.textDiv) && (s.style.visibility = "hidden")));
                        }
                        this.avoidBalloonOverlapping && this.arrangeBalloons();
                    }
                    b ? (h = {
                        type: "changed"
                    }, h.index = a, h.chart = this.chart, h.zooming = F, h.mostCloseGraph = I, h.position = t ? f : e, 
                    h.target = this, c.fire("changed", h), this.fire("changed", h), this.skipZoomDispatch = !1) : (this.skipZoomDispatch = !0, 
                    c.updateLegendValues(a)), this.previousIndex = a, this.previousMostCloseGraph = I;
                }
            }
        } else this.hideCursor();
    },
    setBalloonPosition: function(a, b, c, d) {
        var e = b.position, f = b.inside;
        b = b.axisThickness;
        var g = this.chart, h = g.dx, g = g.dy, k = this.x, l = this.y, m = this.width, n = this.height;
        d ? (f && ("right" == e ? a.setBounds(k, l + g, k + m + h, l + c + g) : a.setBounds(k, l + g, k + m + h, l + c)), 
        "right" == e ? f ? a.setPosition(k + m + h, l + c + g) : a.setPosition(k + m + h + b, l + c + g) : f ? a.setPosition(k, l + c) : a.setPosition(k - b, l + c)) : "top" == e ? f ? a.setPosition(k + c + h, l + g) : a.setPosition(k + c + h, l + g - b + 1) : f ? a.setPosition(k + c, l + n) : a.setPosition(k + c, l + n + b - 1);
    },
    setBalloonBounds: function(a, b, c) {
        var d = b.position, e = b.inside, f = b.axisThickness, g = b.tickLength, h = this.chart, k = h.dx, h = h.dy, l = this.x, m = this.y, n = this.width, p = this.height;
        c ? (e && (a.pointerWidth = 0), "right" == d ? e ? a.setBounds(l, m + h, l + n + k, m + p + h) : a.setBounds(l + n + k + f, m + h, l + n + 1e3, m + p + h) : e ? a.setBounds(l, m, n + l, p + m) : a.setBounds(-1e3, -1e3, l - g - f, m + p + 15)) : (a.maxWidth = n, 
        b.parseDates && (g = 0, a.pointerWidth = 0), "top" == d ? e ? a.setBounds(l + k, m + h, n + k + l, p + m) : a.setBounds(l + k, -1e3, n + k + l, m + h - g - f) : e ? a.setBounds(l, m, n + l, p + m - g) : a.setBounds(l, m + p + g + f - 1, l + n, m + p + g + f));
    },
    enableDrawing: function(a) {
        this.enabled = !a, this.hideCursor(), this.rolledOver = !1, this.drawing = a;
    },
    isZooming: function(a) {
        a && a != this.zooming && this.handleMouseDown("fake"), a || a == this.zooming || this.handleMouseUp();
    },
    handleMouseOut: function() {
        if (this.enabled) if (this.zooming) this.setPosition(); else {
            this.index = void 0;
            var a = {
                type: "changed",
                index: void 0,
                target: this
            };
            a.chart = this.chart, this.fire("changed", a), this.hideCursor();
        }
    },
    handleReleaseOutside: function() {
        this.handleMouseUp();
    },
    handleMouseUp: function() {
        var c, a = this.chart, b = this.data;
        if (a) {
            var d = a.mouseX - this.x, e = a.mouseY - this.y;
            if (this.drawingNow) {
                this.drawingNow = !1, AmCharts.remove(this.drawingLine), c = this.drawStartX;
                var f = this.drawStartY;
                (2 < Math.abs(c - d) || 2 < Math.abs(f - e)) && (c = {
                    type: "draw",
                    target: this,
                    chart: a,
                    initialX: c,
                    initialY: f,
                    finalX: d,
                    finalY: e
                }, this.fire(c.type, c));
            }
            if (this.enabled && 0 < b.length) {
                if (this.pan) this.rolledOver = !1; else if (this.zoomable && this.zooming) {
                    if (c = this.selectWithoutZooming ? {
                        type: "selected"
                    } : {
                        type: "zoomed"
                    }, c.target = this, c.chart = a, "cursor" == this.type) this.rotate ? this.selectionPosY = e : this.selectionPosX = e = d, 
                    4 > Math.abs(e - this.initialMouse) && this.fromIndex == this.index || (this.index < this.fromIndex ? (c.end = this.fromIndex, 
                    c.start = this.index) : (c.end = this.index, c.start = this.fromIndex), e = a.categoryAxis, 
                    e.parseDates && !e.equalSpacing && (b[c.start] && (c.start = b[c.start].time), b[c.end] && (c.end = a.getEndTime(b[c.end].time))), 
                    this.skipZoomDispatch || this.fire(c.type, c)); else {
                        var g = this.initialMouseX, h = this.initialMouseY;
                        3 > Math.abs(d - g) && 3 > Math.abs(e - h) || (b = Math.min(g, d), f = Math.min(h, e), 
                        d = Math.abs(g - d), e = Math.abs(h - e), a.hideXScrollbar && (b = 0, d = this.width), 
                        a.hideYScrollbar && (f = 0, e = this.height), c.selectionHeight = e, c.selectionWidth = d, 
                        c.selectionY = f, c.selectionX = b, this.skipZoomDispatch || this.fire(c.type, c));
                    }
                    this.selectWithoutZooming || AmCharts.remove(this.selection);
                }
                this.skipZoomDispatch = !1;
            }
        }
        this.panning = this.zooming = !1;
    },
    showCursorAt: function(a) {
        var b = this.chart.categoryAxis;
        a = b.parseDates ? b.dateToCoordinate(a) : b.categoryToCoordinate(a), this.previousMousePosition = 0/0, 
        this.forceShow = !0, this.setPosition(a, !1);
    },
    clearSelection: function() {
        AmCharts.remove(this.selection);
    },
    handleMouseDown: function(a) {
        if (this.zoomable || this.pan || this.drawing) {
            var b = this.rotate, c = this.chart, d = c.mouseX - this.x, e = c.mouseY - this.y;
            (d > 0 && d < this.width && e > 0 && e < this.height || "fake" == a) && (this.setPosition(), 
            this.selectWithoutZooming && AmCharts.remove(this.selection), this.drawing ? (this.drawStartY = e, 
            this.drawStartX = d, this.drawingNow = !0) : this.pan ? (this.zoomable = !1, c.setMouseCursor("move"), 
            this.panning = !0, this.panClickPos = b ? e : d, this.panClickStart = this.start, 
            this.panClickEnd = this.end, this.panClickStartTime = this.startTime, this.panClickEndTime = this.endTime) : this.zoomable && ("cursor" == this.type ? (this.fromIndex = this.index, 
            b ? (this.initialMouse = e, this.selectionPosY = this.linePos) : (this.initialMouse = d, 
            this.selectionPosX = this.linePos)) : (this.initialMouseX = d, this.initialMouseY = e, 
            this.selectionPosX = d, this.selectionPosY = e), this.zooming = !0));
        }
    }
}), AmCharts.SimpleChartScrollbar = AmCharts.Class({
    construct: function(a) {
        this.createEvents("zoomed"), this.backgroundColor = "#D4D4D4", this.backgroundAlpha = 1, 
        this.selectedBackgroundColor = "#EFEFEF", this.scrollDuration = this.selectedBackgroundAlpha = 1, 
        this.resizeEnabled = !0, this.hideResizeGrips = !1, this.scrollbarHeight = 20, this.updateOnReleaseOnly = !1, 
        9 > document.documentMode && (this.updateOnReleaseOnly = !0), this.dragIconWidth = 18, 
        this.dragIconHeight = 25, AmCharts.applyTheme(this, a, "SimpleChartScrollbar");
    },
    draw: function() {
        var a = this;
        a.destroy(), a.interval = setInterval(function() {
            a.updateScrollbar.call(a);
        }, 40);
        var b = a.chart.container, c = a.rotate, d = a.chart, e = b.set();
        a.set = e, d.scrollbarsSet.push(e);
        var f, g;
        if (c ? (f = a.scrollbarHeight, g = d.plotAreaHeight) : (g = a.scrollbarHeight, 
        f = d.plotAreaWidth), a.width = f, (a.height = g) && f) {
            var h = AmCharts.rect(b, f, g, a.backgroundColor, a.backgroundAlpha, 1, a.backgroundColor, a.backgroundAlpha);
            a.bg = h, e.push(h), h = AmCharts.rect(b, f, g, "#000", .005), e.push(h), a.invisibleBg = h, 
            h.click(function() {
                a.handleBgClick();
            }).mouseover(function() {
                a.handleMouseOver();
            }).mouseout(function() {
                a.handleMouseOut();
            }).touchend(function() {
                a.handleBgClick();
            }), h = AmCharts.rect(b, f, g, a.selectedBackgroundColor, a.selectedBackgroundAlpha), 
            a.selectedBG = h, e.push(h), f = AmCharts.rect(b, f, g, "#000", .005), a.dragger = f, 
            e.push(f), f.mousedown(function(b) {
                a.handleDragStart(b);
            }).mouseup(function() {
                a.handleDragStop();
            }).mouseover(function() {
                a.handleDraggerOver();
            }).mouseout(function() {
                a.handleMouseOut();
            }).touchstart(function(b) {
                a.handleDragStart(b);
            }).touchend(function() {
                a.handleDragStop();
            }), f = d.pathToImages, c ? (h = f + "dragIconH.gif", f = a.dragIconWidth, c = a.dragIconHeight) : (h = f + "dragIcon.gif", 
            c = a.dragIconWidth, f = a.dragIconHeight), g = b.image(h, 0, 0, c, f);
            var h = b.image(h, 0, 0, c, f), k = 10, l = 20;
            d.panEventsEnabled && (k = 25, l = a.scrollbarHeight);
            var m = AmCharts.rect(b, k, l, "#000", .005), n = AmCharts.rect(b, k, l, "#000", .005);
            n.translate(-(k - c) / 2, -(l - f) / 2), m.translate(-(k - c) / 2, -(l - f) / 2), 
            c = b.set([ g, n ]), b = b.set([ h, m ]), a.iconLeft = c, e.push(a.iconLeft), a.iconRight = b, 
            e.push(b), c.mousedown(function() {
                a.leftDragStart();
            }).mouseup(function() {
                a.leftDragStop();
            }).mouseover(function() {
                a.iconRollOver();
            }).mouseout(function() {
                a.iconRollOut();
            }).touchstart(function() {
                a.leftDragStart();
            }).touchend(function() {
                a.leftDragStop();
            }), b.mousedown(function() {
                a.rightDragStart();
            }).mouseup(function() {
                a.rightDragStop();
            }).mouseover(function() {
                a.iconRollOver();
            }).mouseout(function() {
                a.iconRollOut();
            }).touchstart(function() {
                a.rightDragStart();
            }).touchend(function() {
                a.rightDragStop();
            }), AmCharts.ifArray(d.chartData) ? e.show() : e.hide(), a.hideDragIcons(), a.clipDragger(!1);
        }
        e.translate(a.x, a.y), e.node.style.msTouchAction = "none";
    },
    updateScrollbarSize: function(a, b) {
        a = Math.round(a), b = Math.round(b);
        var d, e, f, g, c = this.dragger;
        this.rotate ? (d = 0, e = a, f = this.width + 1, g = b - a, c.setAttr("height", b - a), 
        c.setAttr("y", e)) : (d = a, e = 0, f = b - a, g = this.height + 1, c.setAttr("width", b - a), 
        c.setAttr("x", d)), this.clipAndUpdate(d, e, f, g);
    },
    updateScrollbar: function() {
        var a, c, d, b = !1, e = this.x, f = this.y, g = this.dragger, h = this.getDBox();
        if (h) {
            c = h.x + e, d = h.y + f;
            var k = h.width, h = h.height, l = this.rotate, m = this.chart, n = this.width, p = this.height, q = m.mouseX, r = m.mouseY;
            a = this.initialMouse, this.forceClip && this.clipDragger(!0), m.mouseIsOver && (this.dragging && (m = this.initialCoord, 
            l ? (a = m + (r - a), 0 > a && (a = 0), m = p - h, a > m && (a = m), g.setAttr("y", a)) : (a = m + (q - a), 
            0 > a && (a = 0), m = n - k, a > m && (a = m), g.setAttr("x", a)), this.clipDragger(!0)), 
            this.resizingRight && (l ? (a = r - d, a + d > p + f && (a = p - d + f), 0 > a ? (this.resizingRight = !1, 
            b = this.resizingLeft = !0) : (0 === a && (a = .1), g.setAttr("height", a))) : (a = q - c, 
            a + c > n + e && (a = n - c + e), 0 > a ? (this.resizingRight = !1, b = this.resizingLeft = !0) : (0 === a && (a = .1), 
            g.setAttr("width", a))), this.clipDragger(!0)), this.resizingLeft && (l ? (c = d, 
            d = r, f > d && (d = f), d > p + f && (d = p + f), a = !0 === b ? c - d : h + c - d, 
            0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, g.setAttr("y", c + h - f)) : (0 === a && (a = .1), 
            g.setAttr("y", d - f), g.setAttr("height", a))) : (d = q, e > d && (d = e), d > n + e && (d = n + e), 
            a = !0 === b ? c - d : k + c - d, 0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, 
            g.setAttr("x", c + k - e)) : (0 === a && (a = .1), g.setAttr("x", d - e), g.setAttr("width", a))), 
            this.clipDragger(!0)));
        }
    },
    stopForceClip: function() {
        this.forceClip = !1;
    },
    clipDragger: function(a) {
        var b = this.getDBox();
        if (b) {
            var c = b.x, d = b.y, e = b.width, b = b.height, f = !1;
            this.rotate ? (c = 0, e = this.width + 1, (this.clipY != d || this.clipH != b) && (f = !0)) : (d = 0, 
            b = this.height + 1, (this.clipX != c || this.clipW != e) && (f = !0)), f && (this.clipAndUpdate(c, d, e, b), 
            a && (this.updateOnReleaseOnly || this.dispatchScrollbarEvent()));
        }
    },
    maskGraphs: function() {},
    clipAndUpdate: function(a, b, c, d) {
        this.clipX = a, this.clipY = b, this.clipW = c, this.clipH = d, this.selectedBG.clipRect(a, b, c, d), 
        this.updateDragIconPositions(), this.maskGraphs(a, b, c, d);
    },
    dispatchScrollbarEvent: function() {
        if (this.skipEvent) this.skipEvent = !1; else {
            var a = this.chart;
            a.hideBalloon();
            var b = this.getDBox(), c = b.x, d = b.y, e = b.width, b = b.height;
            this.rotate ? (c = d, e = this.height / b) : e = this.width / e, a = {
                type: "zoomed",
                position: c,
                chart: a,
                target: this,
                multiplier: e
            }, this.fire(a.type, a);
        }
    },
    updateDragIconPositions: function() {
        var f, g, a = this.getDBox(), b = a.x, c = a.y, d = this.iconLeft, e = this.iconRight, h = this.scrollbarHeight;
        this.rotate ? (f = this.dragIconWidth, g = this.dragIconHeight, d.translate((h - g) / 2, c - f / 2), 
        e.translate((h - g) / 2, c + a.height - f / 2)) : (f = this.dragIconHeight, g = this.dragIconWidth, 
        d.translate(b - g / 2, (h - f) / 2), e.translate(b - g / 2 + a.width, (h - f) / 2));
    },
    showDragIcons: function() {
        this.resizeEnabled && (this.iconLeft.show(), this.iconRight.show());
    },
    hideDragIcons: function() {
        this.resizingLeft || this.resizingRight || this.dragging || ((this.hideResizeGrips || !this.resizeEnabled) && (this.iconLeft.hide(), 
        this.iconRight.hide()), this.removeCursors());
    },
    removeCursors: function() {
        this.chart.setMouseCursor("auto");
    },
    relativeZoom: function(a, b) {
        this.dragger.stop(), this.multiplier = a, this.position = b, this.updateScrollbarSize(b, this.rotate ? b + this.height / a : b + this.width / a);
    },
    destroy: function() {
        this.clear(), AmCharts.remove(this.set), AmCharts.remove(this.iconRight), AmCharts.remove(this.iconLeft);
    },
    clear: function() {
        clearInterval(this.interval);
    },
    handleDragStart: function() {
        var a = this.chart;
        this.dragger.stop(), this.removeCursors(), this.dragging = !0;
        var b = this.getDBox();
        this.rotate ? (this.initialCoord = b.y, this.initialMouse = a.mouseY) : (this.initialCoord = b.x, 
        this.initialMouse = a.mouseX);
    },
    handleDragStop: function() {
        this.updateOnReleaseOnly && (this.updateScrollbar(), this.skipEvent = !1, this.dispatchScrollbarEvent()), 
        this.dragging = !1, this.mouseIsOver && this.removeCursors(), this.updateScrollbar();
    },
    handleDraggerOver: function() {
        this.handleMouseOver();
    },
    leftDragStart: function() {
        this.dragger.stop(), this.resizingLeft = !0;
    },
    leftDragStop: function() {
        this.resizingLeft = !1, this.mouseIsOver || this.removeCursors(), this.updateOnRelease();
    },
    rightDragStart: function() {
        this.dragger.stop(), this.resizingRight = !0;
    },
    rightDragStop: function() {
        this.resizingRight = !1, this.mouseIsOver || this.removeCursors(), this.updateOnRelease();
    },
    iconRollOut: function() {
        this.removeCursors();
    },
    iconRollOver: function() {
        this.chart.setMouseCursor(this.rotate ? "n-resize" : "e-resize"), this.handleMouseOver();
    },
    getDBox: function() {
        return this.dragger ? this.dragger.getBBox() : void 0;
    },
    handleBgClick: function() {
        var a = this;
        if (!a.resizingRight && !a.resizingLeft) {
            a.zooming = !0;
            var b, c, d = a.scrollDuration, e = a.dragger;
            b = a.getDBox();
            var f = b.height, g = b.width;
            c = a.chart;
            var h = a.y, k = a.x, l = a.rotate;
            l ? (b = "y", c = c.mouseY - f / 2 - h, c = AmCharts.fitToBounds(c, 0, a.height - f)) : (b = "x", 
            c = c.mouseX - g / 2 - k, c = AmCharts.fitToBounds(c, 0, a.width - g)), a.updateOnReleaseOnly ? (a.skipEvent = !1, 
            e.setAttr(b, c), a.dispatchScrollbarEvent(), a.clipDragger()) : (c = Math.round(c), 
            l ? e.animate({
                y: c
            }, d, ">") : e.animate({
                x: c
            }, d, ">"), a.forceClip = !0, clearTimeout(a.forceTO), a.forceTO = setTimeout(function() {
                a.stopForceClip.call(a);
            }, 5e3 * d));
        }
    },
    updateOnRelease: function() {
        this.updateOnReleaseOnly && (this.updateScrollbar(), this.skipEvent = !1, this.dispatchScrollbarEvent());
    },
    handleReleaseOutside: function() {
        this.set && ((this.resizingLeft || this.resizingRight || this.dragging) && (this.updateOnRelease(), 
        this.removeCursors()), this.mouseIsOver = this.dragging = this.resizingRight = this.resizingLeft = !1, 
        this.hideDragIcons(), this.updateScrollbar());
    },
    handleMouseOver: function() {
        this.mouseIsOver = !0, this.showDragIcons();
    },
    handleMouseOut: function() {
        this.mouseIsOver = !1, this.hideDragIcons();
    }
}), AmCharts.ChartScrollbar = AmCharts.Class({
    inherits: AmCharts.SimpleChartScrollbar,
    construct: function(a) {
        this.cname = "ChartScrollbar", AmCharts.ChartScrollbar.base.construct.call(this, a), 
        this.graphLineColor = "#BBBBBB", this.graphLineAlpha = 0, this.graphFillColor = "#BBBBBB", 
        this.graphFillAlpha = 1, this.selectedGraphLineColor = "#888888", this.selectedGraphLineAlpha = 0, 
        this.selectedGraphFillColor = "#888888", this.selectedGraphFillAlpha = 1, this.gridCount = 0, 
        this.gridColor = "#FFFFFF", this.gridAlpha = .7, this.skipEvent = this.autoGridCount = !1, 
        this.color = "#FFFFFF", this.scrollbarCreated = !1, this.offset = 0, AmCharts.applyTheme(this, a, this.cname);
    },
    init: function() {
        var a = this.categoryAxis, b = this.chart;
        if (a || (this.categoryAxis = a = new AmCharts.CategoryAxis()), a.chart = b, a.id = "scrollbar", 
        a.dateFormats = b.categoryAxis.dateFormats, a.markPeriodChange = b.categoryAxis.markPeriodChange, 
        a.boldPeriodBeginning = b.categoryAxis.boldPeriodBeginning, a.axisItemRenderer = AmCharts.RecItem, 
        a.axisRenderer = AmCharts.RecAxis, a.guideFillRenderer = AmCharts.RecFill, a.inside = !0, 
        a.fontSize = this.fontSize, a.tickLength = 0, a.axisAlpha = 0, AmCharts.isString(this.graph) && (this.graph = AmCharts.getObjById(b.graphs, this.graph)), 
        a = this.graph) {
            var c = this.valueAxis;
            c || (this.valueAxis = c = new AmCharts.ValueAxis(), c.visible = !1, c.scrollbar = !0, 
            c.axisItemRenderer = AmCharts.RecItem, c.axisRenderer = AmCharts.RecAxis, c.guideFillRenderer = AmCharts.RecFill, 
            c.labelsEnabled = !1, c.chart = b), b = this.unselectedGraph, b || (b = new AmCharts.AmGraph(), 
            b.scrollbar = !0, this.unselectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers), 
            b = this.selectedGraph, b || (b = new AmCharts.AmGraph(), b.scrollbar = !0, this.selectedGraph = b, 
            b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers);
        }
        this.scrollbarCreated = !0;
    },
    draw: function() {
        var a = this;
        AmCharts.ChartScrollbar.base.draw.call(a), a.scrollbarCreated || a.init();
        var b = a.chart, c = b.chartData, d = a.categoryAxis, e = a.rotate, f = a.x, g = a.y, h = a.width, k = a.height, l = b.categoryAxis, m = a.set;
        if (d.setOrientation(!e), d.parseDates = l.parseDates, d.rotate = e, d.equalSpacing = l.equalSpacing, 
        d.minPeriod = l.minPeriod, d.startOnAxis = l.startOnAxis, d.viW = h, d.viH = k, 
        d.width = h, d.height = k, d.gridCount = a.gridCount, d.gridColor = a.gridColor, 
        d.gridAlpha = a.gridAlpha, d.color = a.color, d.tickLength = 0, d.axisAlpha = 0, 
        d.autoGridCount = a.autoGridCount, d.parseDates && !d.equalSpacing && d.timeZoom(b.firstTime, b.lastTime), 
        d.zoom(0, c.length - 1), l = a.graph) {
            var n = a.valueAxis, p = l.valueAxis;
            n.id = p.id, n.rotate = e, n.setOrientation(e), n.width = h, n.height = k, n.viW = h, 
            n.viH = k, n.dataProvider = c, n.reversed = p.reversed, n.logarithmic = p.logarithmic, 
            n.gridAlpha = 0, n.axisAlpha = 0, m.push(n.set), e ? (n.y = g, n.x = 0) : (n.x = f, 
            n.y = 0);
            var q, f = 1/0, g = -1/0;
            for (q = 0; q < c.length; q++) {
                var t, r = c[q].axes[p.id].graphs[l.id].values;
                for (t in r) if (r.hasOwnProperty(t) && "percents" != t && "total" != t) {
                    var w = r[t];
                    f > w && (f = w), w > g && (g = w);
                }
            }
            1/0 != f && (n.minimum = f), -1/0 != g && (n.maximum = g + .1 * (g - f)), f == g && (--n.minimum, 
            n.maximum += 1), void 0 !== a.minimum && (n.minimum = a.minimum), void 0 !== a.maximum && (n.maximum = a.maximum), 
            n.zoom(0, c.length - 1), t = a.unselectedGraph, t.id = l.id, t.rotate = e, t.chart = b, 
            t.data = c, t.valueAxis = n, t.chart = l.chart, t.categoryAxis = a.categoryAxis, 
            t.periodSpan = l.periodSpan, t.valueField = l.valueField, t.openField = l.openField, 
            t.closeField = l.closeField, t.highField = l.highField, t.lowField = l.lowField, 
            t.lineAlpha = a.graphLineAlpha, t.lineColorR = a.graphLineColor, t.fillAlphas = a.graphFillAlpha, 
            t.fillColorsR = a.graphFillColor, t.connect = l.connect, t.hidden = l.hidden, t.width = h, 
            t.height = k, t.pointPosition = l.pointPosition, t.stepDirection = l.stepDirection, 
            t.periodSpan = l.periodSpan, p = a.selectedGraph, p.id = l.id, p.rotate = e, p.chart = b, 
            p.data = c, p.valueAxis = n, p.chart = l.chart, p.categoryAxis = d, p.periodSpan = l.periodSpan, 
            p.valueField = l.valueField, p.openField = l.openField, p.closeField = l.closeField, 
            p.highField = l.highField, p.lowField = l.lowField, p.lineAlpha = a.selectedGraphLineAlpha, 
            p.lineColorR = a.selectedGraphLineColor, p.fillAlphas = a.selectedGraphFillAlpha, 
            p.fillColorsR = a.selectedGraphFillColor, p.connect = l.connect, p.hidden = l.hidden, 
            p.width = h, p.height = k, p.pointPosition = l.pointPosition, p.stepDirection = l.stepDirection, 
            p.periodSpan = l.periodSpan, b = a.graphType, b || (b = l.type), t.type = b, p.type = b, 
            c = c.length - 1, t.zoom(0, c), p.zoom(0, c), p.set.click(function() {
                a.handleBackgroundClick();
            }).mouseover(function() {
                a.handleMouseOver();
            }).mouseout(function() {
                a.handleMouseOut();
            }), t.set.click(function() {
                a.handleBackgroundClick();
            }).mouseover(function() {
                a.handleMouseOver();
            }).mouseout(function() {
                a.handleMouseOut();
            }), m.push(t.set), m.push(p.set);
        }
        m.push(d.set), m.push(d.labelsSet), a.bg.toBack(), a.invisibleBg.toFront(), a.dragger.toFront(), 
        a.iconLeft.toFront(), a.iconRight.toFront();
    },
    timeZoom: function(a, b, c) {
        this.startTime = a, this.endTime = b, this.timeDifference = b - a, this.skipEvent = !AmCharts.toBoolean(c), 
        this.zoomScrollbar(), this.skipEvent || this.dispatchScrollbarEvent();
    },
    zoom: function(a, b) {
        this.start = a, this.end = b, this.skipEvent = !0, this.zoomScrollbar();
    },
    dispatchScrollbarEvent: function() {
        if (this.skipEvent) this.skipEvent = !1; else {
            var b, c, a = this.chart.chartData, d = this.dragger.getBBox();
            b = d.x;
            var e = d.y, f = d.width, d = d.height, g = this.chart;
            this.rotate ? (b = e, c = d) : c = f, f = {
                type: "zoomed",
                target: this
            }, f.chart = g;
            var h = this.categoryAxis, k = this.stepWidth, e = g.minSelectedTime, d = !1;
            h.parseDates && !h.equalSpacing ? (a = g.lastTime, g = g.firstTime, h.minDuration(), 
            h = Math.round(b / k) + g, b = this.dragging ? h + this.timeDifference : Math.round((b + c) / k) + g, 
            h > b && (h = b), e > 0 && e > b - h && (b = Math.round(h + (b - h) / 2), d = Math.round(e / 2), 
            h = b - d, b += d, d = !0), b > a && (b = a), h > b - e && (h = b - e), g > h && (h = g), 
            h + e > b && (b = h + e), (h != this.startTime || b != this.endTime) && (this.startTime = h, 
            this.endTime = b, f.start = h, f.end = b, f.startDate = new Date(h), f.endDate = new Date(b), 
            this.fire(f.type, f))) : (h.startOnAxis || (b += k / 2), c -= this.stepWidth / 2, 
            e = h.xToIndex(b), b = h.xToIndex(b + c), (e != this.start || this.end != b) && (h.startOnAxis && (this.resizingRight && e == b && b++, 
            this.resizingLeft && e == b && (e > 0 ? e-- : b = 1)), this.start = e, this.end = this.dragging ? this.start + this.difference : b, 
            f.start = this.start, f.end = this.end, h.parseDates && (a[this.start] && (f.startDate = new Date(a[this.start].time)), 
            a[this.end] && (f.endDate = new Date(a[this.end].time))), this.fire(f.type, f))), 
            d && this.zoomScrollbar();
        }
    },
    zoomScrollbar: function() {
        var a, b;
        a = this.chart;
        var c = a.chartData, d = this.categoryAxis;
        d.parseDates && !d.equalSpacing ? (c = d.stepWidth, d = a.firstTime, a = c * (this.startTime - d), 
        b = c * (this.endTime - d)) : (a = c[this.start].x[d.id], b = c[this.end].x[d.id], 
        c = d.stepWidth, d.startOnAxis || (d = c / 2, a -= d, b += d)), this.stepWidth = c, 
        this.updateScrollbarSize(a, b);
    },
    maskGraphs: function(a, b, c, d) {
        var e = this.selectedGraph;
        e && e.set.clipRect(a, b, c, d);
    },
    handleDragStart: function() {
        AmCharts.ChartScrollbar.base.handleDragStart.call(this), this.difference = this.end - this.start, 
        this.timeDifference = this.endTime - this.startTime, 0 > this.timeDifference && (this.timeDifference = 0);
    },
    handleBackgroundClick: function() {
        AmCharts.ChartScrollbar.base.handleBackgroundClick.call(this), this.dragging || (this.difference = this.end - this.start, 
        this.timeDifference = this.endTime - this.startTime, 0 > this.timeDifference && (this.timeDifference = 0));
    }
}), AmCharts.AmBalloon = AmCharts.Class({
    construct: function(a) {
        this.cname = "AmBalloon", this.enabled = !0, this.fillColor = "#FFFFFF", this.fillAlpha = .8, 
        this.borderThickness = 2, this.borderColor = "#FFFFFF", this.borderAlpha = 1, this.cornerRadius = 0, 
        this.maxWidth = 220, this.horizontalPadding = 8, this.verticalPadding = 4, this.pointerWidth = 6, 
        this.pointerOrientation = "V", this.color = "#000000", this.adjustBorderColor = !0, 
        this.show = this.follow = this.showBullet = !1, this.bulletSize = 3, this.shadowAlpha = .4, 
        this.shadowColor = "#000000", this.fadeOutDuration = this.animationDuration = .3, 
        this.fixedPosition = !1, this.offsetY = 6, this.offsetX = 1, this.textAlign = "center", 
        AmCharts.isModern || (this.offsetY *= 1.5), AmCharts.applyTheme(this, a, this.cname);
    },
    draw: function() {
        var a = this.pointToX, b = this.pointToY;
        this.deltaSignX = this.deltaSignY = 1;
        var c = this.chart;
        if (AmCharts.VML && (this.fadeOutDuration = 0), this.xAnim && c.stopAnim(this.xAnim), 
        this.yAnim && c.stopAnim(this.yAnim), !isNaN(a)) {
            var d = this.follow, e = c.container, f = this.set;
            if (AmCharts.remove(f), this.removeDiv(), f = e.set(), f.node.style.pointerEvents = "none", 
            this.set = f, c.balloonsSet.push(f), this.show) {
                var g = this.l, h = this.t, k = this.r, l = this.b, m = this.balloonColor, n = this.fillColor, p = this.borderColor, q = n;
                void 0 != m && (this.adjustBorderColor ? q = p = m : n = m);
                var r = this.horizontalPadding, t = this.verticalPadding, w = this.pointerWidth, v = this.pointerOrientation, s = this.cornerRadius, u = c.fontFamily, x = this.fontSize;
                void 0 == x && (x = c.fontSize);
                var m = document.createElement("div"), F = m.style;
                F.pointerEvents = "none", F.position = "absolute";
                var B = this.minWidth, z = "";
                isNaN(B) || (z = "min-width:" + (B - 2 * r) + "px; "), m.innerHTML = '<div style="text-align:' + this.textAlign + "; " + z + "max-width:" + this.maxWidth + "px; font-size:" + x + "px; color:" + this.color + "; font-family:" + u + '">' + this.text + "</div>", 
                c.chartDiv.appendChild(m), this.textDiv = m, x = m.offsetWidth, u = m.offsetHeight, 
                m.clientHeight && (x = m.clientWidth, u = m.clientHeight), u += 2 * t, z = x + 2 * r, 
                !isNaN(B) && B > z && (z = B), window.opera && (u += 2);
                var I = !1, x = this.offsetY;
                c.handDrawn && (x += c.handDrawScatter + 2), "H" != v ? (B = a - z / 2, h + u + 10 > b && "down" != v ? (I = !0, 
                d && (b += x), x = b + w, this.deltaSignY = -1) : (d && (b -= x), x = b - u - w, 
                this.deltaSignY = 1)) : (2 * w > u && (w = u / 2), x = b - u / 2, g + (k - g) / 2 > a ? (B = a + w, 
                this.deltaSignX = -1) : (B = a - z - w, this.deltaSignX = 1)), x + u >= l && (x = l - u), 
                h > x && (x = h), g > B && (B = g), B + z > k && (B = k - z);
                var V, h = x + t, l = B + r, t = this.shadowAlpha, E = this.shadowColor, r = this.borderThickness, H = this.bulletSize;
                s > 0 || 0 === w ? (t > 0 && (a = AmCharts.rect(e, z, u, n, 0, r + 1, E, t, this.cornerRadius), 
                AmCharts.isModern ? a.translate(1, 1) : a.translate(4, 4), f.push(a)), n = AmCharts.rect(e, z, u, n, this.fillAlpha, r, p, this.borderAlpha, this.cornerRadius), 
                this.showBullet && (V = AmCharts.circle(e, H, q, this.fillAlpha), f.push(V))) : (q = [], 
                s = [], "H" != v ? (g = a - B, g > z - w && (g = z - w), w > g && (g = w), q = [ 0, g - w, a - B, g + w, z, z, 0, 0 ], 
                s = I ? [ 0, 0, b - x, 0, 0, u, u, 0 ] : [ u, u, b - x, u, u, 0, 0, u ]) : (q = b - x, 
                q > u - w && (q = u - w), w > q && (q = w), s = [ 0, q - w, b - x, q + w, u, u, 0, 0 ], 
                q = g + (k - g) / 2 > a ? [ 0, 0, a > B ? 0 : a - B, 0, 0, z, z, 0 ] : [ z, z, B + z > a ? z : a - B, z, z, 0, 0, z ]), 
                t > 0 && (a = AmCharts.polygon(e, q, s, n, 0, r, E, t), a.translate(1, 1), f.push(a)), 
                n = AmCharts.polygon(e, q, s, n, this.fillAlpha, r, p, this.borderAlpha)), this.bg = n, 
                f.push(n), n.toFront(), e = 1 * this.deltaSignX, F.left = l + "px", F.top = h + "px", 
                f.translate(B - e, x), n = n.getBBox(), this.bottom = x + u + 1, this.yPos = n.y + x, 
                V && V.translate(this.pointToX - B + e, b - x), b = this.animationDuration, 0 < this.animationDuration && !d && !isNaN(this.prevX) && (f.translate(this.prevX, this.prevY), 
                f.animate({
                    translate: B - e + "," + x
                }, b, "easeOutSine"), m && (F.left = this.prevTX + "px", F.top = this.prevTY + "px", 
                this.xAnim = c.animate({
                    node: m
                }, "left", this.prevTX, l, b, "easeOutSine", "px"), this.yAnim = c.animate({
                    node: m
                }, "top", this.prevTY, h, b, "easeOutSine", "px"))), this.prevX = B - e, this.prevY = x, 
                this.prevTX = l, this.prevTY = h;
            }
        }
    },
    followMouse: function() {
        if (this.follow && this.show) {
            var a = this.chart.mouseX - this.offsetX * this.deltaSignX, b = this.chart.mouseY;
            if (this.pointToX = a, this.pointToY = b, a != this.previousX || b != this.previousY) if (this.previousX = a, 
            this.previousY = b, 0 === this.cornerRadius) this.draw(); else {
                var c = this.set;
                if (c) {
                    var d = c.getBBox(), a = a - d.width / 2, e = b - d.height - 10;
                    a < this.l && (a = this.l), a > this.r - d.width && (a = this.r - d.width), e < this.t && (e = b + 10), 
                    c.translate(a, e), b = this.textDiv.style, b.left = a + this.horizontalPadding + "px", 
                    b.top = e + this.verticalPadding + "px";
                }
            }
        }
    },
    changeColor: function(a) {
        this.balloonColor = a;
    },
    setBounds: function(a, b, c, d) {
        this.l = a, this.t = b, this.r = c, this.b = d, this.destroyTO && clearTimeout(this.destroyTO);
    },
    showBalloon: function(a) {
        this.text = a, this.show = !0, this.destroyTO && clearTimeout(this.destroyTO), a = this.chart, 
        this.fadeAnim1 && a.stopAnim(this.fadeAnim1), this.fadeAnim2 && a.stopAnim(this.fadeAnim2), 
        this.draw();
    },
    hide: function() {
        var a = this, b = a.fadeOutDuration, c = a.chart;
        if (b > 0) {
            a.destroyTO = setTimeout(function() {
                a.destroy.call(a);
            }, 1e3 * b), a.follow = !1, a.show = !1;
            var d = a.set;
            d && (d.setAttr("opacity", a.fillAlpha), a.fadeAnim1 = d.animate({
                opacity: 0
            }, b, "easeInSine")), a.textDiv && (a.fadeAnim2 = c.animate({
                node: a.textDiv
            }, "opacity", 1, 0, b, "easeInSine", ""));
        } else a.show = !1, a.follow = !1, a.destroy();
    },
    setPosition: function(a, b, c) {
        this.pointToX = a, this.pointToY = b, c && (a == this.previousX && b == this.previousY || this.draw()), 
        this.previousX = a, this.previousY = b;
    },
    followCursor: function(a) {
        var b = this;
        (b.follow = a) ? (b.pShowBullet = b.showBullet, b.showBullet = !1) : void 0 !== b.pShowBullet && (b.showBullet = b.pShowBullet), 
        clearInterval(b.interval);
        var c = b.chart.mouseX, d = b.chart.mouseY;
        !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = d, b.followMouse(), 
        b.interval = setInterval(function() {
            b.followMouse.call(b);
        }, 40));
    },
    removeDiv: function() {
        if (this.textDiv) {
            var a = this.textDiv.parentNode;
            a && a.removeChild(this.textDiv);
        }
    },
    destroy: function() {
        clearInterval(this.interval), AmCharts.remove(this.set), this.removeDiv(), this.set = null;
    }
}), AmCharts.AmCoordinateChart = AmCharts.Class({
    inherits: AmCharts.AmChart,
    construct: function(a) {
        AmCharts.AmCoordinateChart.base.construct.call(this, a), this.theme = a, this.createEvents("rollOverGraphItem", "rollOutGraphItem", "clickGraphItem", "doubleClickGraphItem", "rightClickGraphItem", "clickGraph", "rollOverGraph", "rollOutGraph"), 
        this.startAlpha = 1, this.startDuration = 0, this.startEffect = "elastic", this.sequencedAnimation = !0, 
        this.colors = "#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000".split(" "), 
        this.balloonDateFormat = "MMM DD, YYYY", this.valueAxes = [], this.graphs = [], 
        this.guides = [], this.gridAboveGraphs = !1, AmCharts.applyTheme(this, a, "AmCoordinateChart");
    },
    initChart: function() {
        AmCharts.AmCoordinateChart.base.initChart.call(this);
        var a = this.categoryAxis;
        a && (this.categoryAxis = AmCharts.processObject(a, AmCharts.CategoryAxis, this.theme)), 
        this.processValueAxes(), this.createValueAxes(), this.processGraphs(), this.processGuides(), 
        AmCharts.VML && (this.startAlpha = 1), this.setLegendData(this.graphs), this.gridAboveGraphs && this.gridSet.toFront();
    },
    createValueAxes: function() {
        if (0 === this.valueAxes.length) {
            var a = new AmCharts.ValueAxis();
            this.addValueAxis(a);
        }
    },
    parseData: function() {
        this.processValueAxes(), this.processGraphs();
    },
    parseSerialData: function() {
        var b, a = this.graphs, c = {}, d = this.seriesIdField;
        d || (d = this.categoryField), this.chartData = [];
        var e = this.dataProvider;
        if (e) {
            var g, k, l, f = !1, h = this.categoryAxis;
            h && (f = h.parseDates, k = h.forceShowField, l = h.labelColorField, g = h.categoryFunction);
            var m, n, q, p = {};
            f && (b = AmCharts.extractPeriod(h.minPeriod), m = b.period, n = b.count, q = AmCharts.getPeriodDuration(m, n));
            var r = {};
            this.lookupTable = r;
            var t, w = this.dataDateFormat, v = {};
            for (t = 0; t < e.length; t++) {
                var s = {}, u = e[t];
                if (b = u[this.categoryField], s.dataContext = u, s.category = g ? g(b, u, h) : String(b), 
                k && (s.forceShow = u[k]), l && (s.labelColor = u[l]), r[u[d]] = s, !f || (b = h.categoryFunction ? h.categoryFunction(b, u, h) : b instanceof Date ? AmCharts.newDate(b, h.minPeriod) : w ? AmCharts.stringToDate(b, w) : new Date(b), 
                b = AmCharts.resetDateToMin(b, m, n, h.firstDayOfWeek), s.category = b, s.time = b.getTime(), 
                !isNaN(s.time))) {
                    var x = this.valueAxes;
                    s.axes = {}, s.x = {};
                    var F;
                    for (F = 0; F < x.length; F++) {
                        var B = x[F].id;
                        s.axes[B] = {}, s.axes[B].graphs = {};
                        var z;
                        for (z = 0; z < a.length; z++) {
                            b = a[z];
                            var I = b.id, E = b.periodValue;
                            if (b.valueAxis.id == B) {
                                s.axes[B].graphs[I] = {};
                                var H = {};
                                H.index = t;
                                var V = u;
                                b.dataProvider && (V = c), H.values = this.processValues(V, b, E), !b.connect && v && v[I] && s.time - p[I] > 1.1 * q && (v[I].gap = !0), 
                                this.processFields(b, H, V), H.category = s.category, H.serialDataItem = s, H.graph = b, 
                                s.axes[B].graphs[I] = H, p[I] = s.time, v[I] = H;
                            }
                        }
                    }
                    this.chartData[t] = s;
                }
            }
        }
        for (c = 0; c < a.length; c++) b = a[c], b.dataProvider && this.parseGraphData(b);
    },
    processValues: function(a, b, c) {
        var e, d = {}, f = !1;
        return "candlestick" != b.type && "ohlc" != b.type || "" === c || (f = !0), e = Number(a[b.valueField + c]), 
        isNaN(e) || (d.value = e), e = Number(a[b.errorField + c]), isNaN(e) || (d.error = e), 
        f && (c = "Open"), e = Number(a[b.openField + c]), isNaN(e) || (d.open = e), f && (c = "Close"), 
        e = Number(a[b.closeField + c]), isNaN(e) || (d.close = e), f && (c = "Low"), e = Number(a[b.lowField + c]), 
        isNaN(e) || (d.low = e), f && (c = "High"), e = Number(a[b.highField + c]), isNaN(e) || (d.high = e), 
        d;
    },
    parseGraphData: function(a) {
        var b = a.dataProvider, c = a.seriesIdField;
        c || (c = this.seriesIdField), c || (c = this.categoryField);
        var d;
        for (d = 0; d < b.length; d++) {
            var e = b[d], f = this.lookupTable[String(e[c])], g = a.valueAxis.id;
            f && (g = f.axes[g].graphs[a.id], g.serialDataItem = f, g.values = this.processValues(e, a, a.periodValue), 
            this.processFields(a, g, e));
        }
    },
    addValueAxis: function(a) {
        a.chart = this, this.valueAxes.push(a), this.validateData();
    },
    removeValueAxesAndGraphs: function() {
        var b, a = this.valueAxes;
        for (b = a.length - 1; b > -1; b--) this.removeValueAxis(a[b]);
    },
    removeValueAxis: function(a) {
        var c, b = this.graphs;
        for (c = b.length - 1; c >= 0; c--) {
            var d = b[c];
            d && d.valueAxis == a && this.removeGraph(d);
        }
        for (b = this.valueAxes, c = b.length - 1; c >= 0; c--) b[c] == a && b.splice(c, 1);
        this.validateData();
    },
    addGraph: function(a) {
        this.graphs.push(a), this.chooseGraphColor(a, this.graphs.length - 1), this.validateData();
    },
    removeGraph: function(a) {
        var c, b = this.graphs;
        for (c = b.length - 1; c >= 0; c--) b[c] == a && (b.splice(c, 1), a.destroy());
        this.validateData();
    },
    processValueAxes: function() {
        var b, a = this.valueAxes;
        for (b = 0; b < a.length; b++) {
            var c = a[b], c = AmCharts.processObject(c, AmCharts.ValueAxis, this.theme);
            a[b] = c, c.chart = this, c.id || (c.id = "valueAxisAuto" + b + "_" + new Date().getTime()), 
            void 0 === c.usePrefixes && (c.usePrefixes = this.usePrefixes);
        }
    },
    processGuides: function() {
        var a = this.guides, b = this.categoryAxis;
        if (a) for (var c = 0; c < a.length; c++) {
            var d = a[c];
            (void 0 !== d.category || void 0 !== d.date) && b && b.addGuide(d);
            var e = d.valueAxis;
            e ? (AmCharts.isString(e) && (e = this.getValueAxisById(e)), e ? e.addGuide(d) : this.valueAxes[0].addGuide(d)) : isNaN(d.value) || this.valueAxes[0].addGuide(d);
        }
    },
    processGraphs: function() {
        var b, a = this.graphs;
        for (b = 0; b < a.length; b++) {
            var c = a[b], c = AmCharts.processObject(c, AmCharts.AmGraph, this.theme);
            a[b] = c, this.chooseGraphColor(c, b), c.chart = this, AmCharts.isString(c.valueAxis) && (c.valueAxis = this.getValueAxisById(c.valueAxis)), 
            c.valueAxis || (c.valueAxis = this.valueAxes[0]), c.id || (c.id = "graphAuto" + b + "_" + new Date().getTime());
        }
    },
    formatString: function(a, b, c) {
        var d = b.graph, e = d.valueAxis;
        return e.duration && b.values.value && (e = AmCharts.formatDuration(b.values.value, e.duration, "", e.durationUnits, e.maxInterval, e.numberFormatter), 
        a = a.split("[[value]]").join(e)), a = AmCharts.massReplace(a, {
            "[[title]]": d.title,
            "[[description]]": b.description
        }), a = c ? AmCharts.fixNewLines(a) : AmCharts.fixBrakes(a), a = AmCharts.cleanFromEmpty(a);
    },
    getBalloonColor: function(a, b, c) {
        var d = a.lineColor, e = a.balloonColor;
        return c && (e = d), c = a.fillColorsR, "object" == typeof c ? d = c[0] : void 0 !== c && (d = c), 
        b.isNegative && (c = a.negativeLineColor, a = a.negativeFillColors, "object" == typeof a ? c = a[0] : void 0 !== a && (c = a), 
        void 0 !== c && (d = c)), void 0 !== b.color && (d = b.color), void 0 === e && (e = d), 
        e;
    },
    getGraphById: function(a) {
        return AmCharts.getObjById(this.graphs, a);
    },
    getValueAxisById: function(a) {
        return AmCharts.getObjById(this.valueAxes, a);
    },
    processFields: function(a, b, c) {
        if (a.itemColors) {
            var d = a.itemColors, e = b.index;
            b.color = e < d.length ? d[e] : AmCharts.randomColor();
        }
        for (d = "lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern".split(" "), 
        e = 0; e < d.length; e++) {
            var f = d[e], g = a[f + "Field"];
            g && (g = c[g], AmCharts.isDefined(g) && (b[f] = g));
        }
        b.dataContext = c;
    },
    chooseGraphColor: function(a, b) {
        if (a.lineColor) a.lineColorR = a.lineColor; else {
            var c;
            c = this.colors.length > b ? this.colors[b] : AmCharts.randomColor(), a.lineColorR = c;
        }
        a.fillColorsR = a.fillColors ? a.fillColors : a.lineColorR, a.bulletBorderColorR = a.bulletBorderColor ? a.bulletBorderColor : a.useLineColorForBulletBorder ? a.lineColorR : a.bulletColor, 
        a.bulletColorR = a.bulletColor ? a.bulletColor : a.lineColorR, (c = this.patterns) && (a.pattern = c[b]);
    },
    handleLegendEvent: function(a) {
        var b = a.type;
        if (a = a.dataItem, !this.legend.data && a) {
            var c = a.hidden, d = a.showBalloon;
            switch (b) {
              case "clickMarker":
                this.textClickEnabled && (d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a));
                break;

              case "clickLabel":
                d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a);
                break;

              case "rollOverItem":
                c || this.highlightGraph(a);
                break;

              case "rollOutItem":
                c || this.unhighlightGraph();
                break;

              case "hideItem":
                this.hideGraph(a);
                break;

              case "showItem":
                this.showGraph(a);
            }
        }
    },
    highlightGraph: function(a) {
        var c, b = this.graphs, d = .2;
        if (this.legend && (d = this.legend.rollOverGraphAlpha), 1 != d) for (c = 0; c < b.length; c++) {
            var e = b[c];
            e != a && e.changeOpacity(d);
        }
    },
    unhighlightGraph: function() {
        var a;
        if (this.legend && (a = this.legend.rollOverGraphAlpha), 1 != a) {
            a = this.graphs;
            var b;
            for (b = 0; b < a.length; b++) a[b].changeOpacity(1);
        }
    },
    showGraph: function(a) {
        a.switchable && (a.hidden = !1, this.dataChanged = !0, "xy" != this.type && (this.marginsUpdated = !1), 
        this.chartCreated && this.initChart());
    },
    hideGraph: function(a) {
        a.switchable && (this.dataChanged = !0, "xy" != this.type && (this.marginsUpdated = !1), 
        a.hidden = !0, this.chartCreated && this.initChart());
    },
    hideGraphsBalloon: function(a) {
        a.showBalloon = !1, this.updateLegend();
    },
    showGraphsBalloon: function(a) {
        a.showBalloon = !0, this.updateLegend();
    },
    updateLegend: function() {
        this.legend && this.legend.invalidateSize();
    },
    resetAnimation: function() {
        var a = this.graphs;
        if (a) {
            var b;
            for (b = 0; b < a.length; b++) a[b].animationPlayed = !1;
        }
    },
    animateAgain: function() {
        this.resetAnimation(), this.validateNow();
    }
}), AmCharts.AmSlicedChart = AmCharts.Class({
    inherits: AmCharts.AmChart,
    construct: function(a) {
        this.createEvents("rollOverSlice", "rollOutSlice", "clickSlice", "pullOutSlice", "pullInSlice", "rightClickSlice"), 
        AmCharts.AmSlicedChart.base.construct.call(this, a), this.colors = "#FF0F00 #FF6600 #FF9E01 #FCD202 #F8FF01 #B0DE09 #04D215 #0D8ECF #0D52D1 #2A0CD0 #8A0CCF #CD0D74 #754DEB #DDDDDD #999999 #333333 #000000 #57032A #CA9726 #990000 #4B0C25".split(" "), 
        this.alpha = 1, this.groupPercent = 0, this.groupedTitle = "Other", this.groupedPulled = !1, 
        this.groupedAlpha = 1, this.marginLeft = 0, this.marginBottom = this.marginTop = 10, 
        this.marginRight = 0, this.hoverAlpha = 1, this.outlineColor = "#FFFFFF", this.outlineAlpha = 0, 
        this.outlineThickness = 1, this.startAlpha = 0, this.startDuration = 1, this.startEffect = "bounce", 
        this.sequencedAnimation = !0, this.pullOutDuration = 1, this.pullOutEffect = "bounce", 
        this.pullOnHover = this.pullOutOnlyOne = !1, this.labelsEnabled = !0, this.labelTickColor = "#000000", 
        this.labelTickAlpha = .2, this.hideLabelsPercent = 0, this.urlTarget = "_self", 
        this.autoMarginOffset = 10, this.gradientRatio = [], this.maxLabelWidth = 200, AmCharts.applyTheme(this, a, "AmSlicedChart");
    },
    initChart: function() {
        AmCharts.AmSlicedChart.base.initChart.call(this), this.dataChanged && (this.parseData(), 
        this.dispatchDataUpdated = !0, this.dataChanged = !1, this.setLegendData(this.chartData)), 
        this.drawChart();
    },
    handleLegendEvent: function(a) {
        var b = a.type, c = a.dataItem, d = this.legend;
        if (!d.data && c) {
            var e = c.hidden;
            switch (a = a.event, b) {
              case "clickMarker":
                e || d.switchable || this.clickSlice(c, a);
                break;

              case "clickLabel":
                e || this.clickSlice(c, a, !1);
                break;

              case "rollOverItem":
                e || this.rollOverSlice(c, !1, a);
                break;

              case "rollOutItem":
                e || this.rollOutSlice(c, a);
                break;

              case "hideItem":
                this.hideSlice(c, a);
                break;

              case "showItem":
                this.showSlice(c, a);
            }
        }
    },
    invalidateVisibility: function() {
        this.recalculatePercents(), this.initChart();
        var a = this.legend;
        a && a.invalidateSize();
    },
    addEventListeners: function(a, b) {
        var c = this;
        a.mouseover(function(a) {
            c.rollOverSlice(b, !0, a);
        }).mouseout(function(a) {
            c.rollOutSlice(b, a);
        }).touchend(function(a) {
            c.rollOverSlice(b, a), c.panEventsEnabled && c.clickSlice(b, a);
        }).touchstart(function(a) {
            c.rollOverSlice(b, a);
        }).click(function(a) {
            c.clickSlice(b, a);
        }).contextmenu(function(a) {
            c.handleRightClick(b, a);
        });
    },
    formatString: function(a, b, c) {
        return a = AmCharts.formatValue(a, b, [ "value" ], this.nf, "", this.usePrefixes, this.prefixesOfSmallNumbers, this.prefixesOfBigNumbers), 
        a = AmCharts.formatValue(a, b, [ "percents" ], this.pf), a = AmCharts.massReplace(a, {
            "[[title]]": b.title,
            "[[description]]": b.description
        }), -1 != a.indexOf("[[") && (a = AmCharts.formatDataContextValue(a, b.dataContext)), 
        a = c ? AmCharts.fixNewLines(a) : AmCharts.fixBrakes(a), a = AmCharts.cleanFromEmpty(a);
    },
    startSlices: function() {
        var a;
        for (a = 0; a < this.chartData.length; a++) 0 < this.startDuration && this.sequencedAnimation ? this.setStartTO(a) : this.startSlice(this.chartData[a]);
    },
    setStartTO: function(a) {
        var b = this;
        a = setTimeout(function() {
            b.startSequenced.call(b);
        }, b.startDuration / b.chartData.length * 500 * a), b.timeOuts.push(a);
    },
    pullSlices: function(a) {
        var c, b = this.chartData;
        for (c = 0; c < b.length; c++) {
            var d = b[c];
            d.pulled && this.pullSlice(d, 1, a);
        }
    },
    startSequenced: function() {
        var b, a = this.chartData;
        for (b = 0; b < a.length; b++) if (!a[b].started) {
            this.startSlice(this.chartData[b]);
            break;
        }
    },
    startSlice: function(a) {
        a.started = !0;
        var b = a.wedge, c = this.startDuration;
        b && c > 0 && (0 < a.alpha && b.show(), b.translate(a.startX, a.startY), b.animate({
            opacity: 1,
            translate: "0,0"
        }, c, this.startEffect));
    },
    showLabels: function() {
        var b, a = this.chartData;
        for (b = 0; b < a.length; b++) {
            var c = a[b];
            if (0 < c.alpha) {
                var d = c.label;
                d && d.show(), (c = c.tick) && c.show();
            }
        }
    },
    showSlice: function(a) {
        isNaN(a) ? a.hidden = !1 : this.chartData[a].hidden = !1, this.invalidateVisibility();
    },
    hideSlice: function(a) {
        isNaN(a) ? a.hidden = !0 : this.chartData[a].hidden = !0, this.hideBalloon(), this.invalidateVisibility();
    },
    rollOverSlice: function(a, b, c) {
        if (isNaN(a) || (a = this.chartData[a]), clearTimeout(this.hoverInt), !a.hidden) {
            this.pullOnHover && this.pullSlice(a, 1), 1 > this.hoverAlpha && a.wedge && a.wedge.attr({
                opacity: this.hoverAlpha
            });
            var d = a.balloonX, e = a.balloonY;
            a.pulled && (d += a.pullX, e += a.pullY);
            var f = this.formatString(this.balloonText, a, !0), g = this.balloonFunction;
            g && (f = g(a, f)), g = AmCharts.adjustLuminosity(a.color, -.15), this.showBalloon(f, g, b, d, e), 
            a = {
                type: "rollOverSlice",
                dataItem: a,
                chart: this,
                event: c
            }, this.fire(a.type, a);
        }
    },
    rollOutSlice: function(a, b) {
        isNaN(a) || (a = this.chartData[a]), a.wedge && a.wedge.attr({
            opacity: 1
        }), this.hideBalloon();
        var c = {
            type: "rollOutSlice",
            dataItem: a,
            chart: this,
            event: b
        };
        this.fire(c.type, c);
    },
    clickSlice: function(a, b, c) {
        isNaN(a) || (a = this.chartData[a]), a.pulled ? this.pullSlice(a, 0) : this.pullSlice(a, 1), 
        AmCharts.getURL(a.url, this.urlTarget), c || (a = {
            type: "clickSlice",
            dataItem: a,
            chart: this,
            event: b
        }, this.fire(a.type, a));
    },
    handleRightClick: function(a, b) {
        isNaN(a) || (a = this.chartData[a]);
        var c = {
            type: "rightClickSlice",
            dataItem: a,
            chart: this,
            event: b
        };
        this.fire(c.type, c);
    },
    drawTicks: function() {
        var b, a = this.chartData;
        for (b = 0; b < a.length; b++) {
            var c = a[b];
            if (c.label) {
                var d = c.ty, d = AmCharts.line(this.container, [ c.tx0, c.tx, c.tx2 ], [ c.ty0, d, d ], this.labelTickColor, this.labelTickAlpha);
                c.tick = d, c.wedge.push(d);
            }
        }
    },
    initialStart: function() {
        var a = this, b = a.startDuration, c = setTimeout(function() {
            a.showLabels.call(a);
        }, 1e3 * b);
        a.timeOuts.push(c), a.chartCreated ? a.pullSlices(!0) : (a.startSlices(), b > 0 ? (b = setTimeout(function() {
            a.pullSlices.call(a);
        }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices(!0));
    },
    pullSlice: function(a, b, c) {
        var d = this.pullOutDuration;
        !0 === c && (d = 0), (c = a.wedge) && (d > 0 ? c.animate({
            translate: b * a.pullX + "," + b * a.pullY
        }, d, this.pullOutEffect) : c.translate(b * a.pullX, b * a.pullY)), 1 == b ? (a.pulled = !0, 
        this.pullOutOnlyOne && this.pullInAll(a.index), a = {
            type: "pullOutSlice",
            dataItem: a,
            chart: this
        }) : (a.pulled = !1, a = {
            type: "pullInSlice",
            dataItem: a,
            chart: this
        }), this.fire(a.type, a);
    },
    pullInAll: function(a) {
        var c, b = this.chartData;
        for (c = 0; c < this.chartData.length; c++) c != a && b[c].pulled && this.pullSlice(b[c], 0);
    },
    pullOutAll: function(a) {
        a = this.chartData;
        var b;
        for (b = 0; b < a.length; b++) a[b].pulled || this.pullSlice(a[b], 1);
    },
    parseData: function() {
        var a = [];
        this.chartData = a;
        var b = this.dataProvider;
        if (isNaN(this.pieAlpha) || (this.alpha = this.pieAlpha), void 0 !== b) {
            var e, f, g, c = b.length, d = 0;
            for (e = 0; c > e; e++) {
                f = {};
                var h = b[e];
                f.dataContext = h, f.value = Number(h[this.valueField]), (g = h[this.titleField]) || (g = ""), 
                f.title = g, f.pulled = AmCharts.toBoolean(h[this.pulledField], !1), (g = h[this.descriptionField]) || (g = ""), 
                f.description = g, f.labelRadius = Number(h[this.labelRadiusField]), f.switchable = !0, 
                f.url = h[this.urlField], g = h[this.patternField], !g && this.patterns && (g = this.patterns[e]), 
                f.pattern = g, f.visibleInLegend = AmCharts.toBoolean(h[this.visibleInLegendField], !0), 
                g = h[this.alphaField], f.alpha = void 0 !== g ? Number(g) : this.alpha, g = h[this.colorField], 
                void 0 !== g && (f.color = AmCharts.toColor(g)), f.labelColor = AmCharts.toColor(h[this.labelColorField]), 
                d += f.value, f.hidden = !1, a[e] = f;
            }
            for (e = b = 0; c > e; e++) f = a[e], f.percents = f.value / d * 100, f.percents < this.groupPercent && b++;
            for (b > 1 && (this.groupValue = 0, this.removeSmallSlices(), a.push({
                title: this.groupedTitle,
                value: this.groupValue,
                percents: this.groupValue / d * 100,
                pulled: this.groupedPulled,
                color: this.groupedColor,
                url: this.groupedUrl,
                description: this.groupedDescription,
                alpha: this.groupedAlpha,
                pattern: this.groupedPattern,
                dataContext: {}
            })), c = this.baseColor, c || (c = this.pieBaseColor), d = this.brightnessStep, 
            d || (d = this.pieBrightnessStep), e = 0; e < a.length; e++) c ? g = AmCharts.adjustLuminosity(c, e * d / 100) : (g = this.colors[e], 
            void 0 === g && (g = AmCharts.randomColor())), void 0 === a[e].color && (a[e].color = g);
            this.recalculatePercents();
        }
    },
    recalculatePercents: function() {
        var c, d, a = this.chartData, b = 0;
        for (c = 0; c < a.length; c++) d = a[c], !d.hidden && 0 < d.value && (b += d.value);
        for (c = 0; c < a.length; c++) d = this.chartData[c], d.percents = !d.hidden && 0 < d.value ? 100 * d.value / b : 0;
    },
    removeSmallSlices: function() {
        var b, a = this.chartData;
        for (b = a.length - 1; b >= 0; b--) a[b].percents < this.groupPercent && (this.groupValue += a[b].value, 
        a.splice(b, 1));
    },
    animateAgain: function() {
        var a = this;
        a.startSlices();
        for (var b = 0; b < a.chartData.length; b++) {
            var c = a.chartData[b];
            c.started = !1;
            var d = c.wedge;
            d && d.translate(c.startX, c.startY);
        }
        b = a.startDuration, b > 0 ? (b = setTimeout(function() {
            a.pullSlices.call(a);
        }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices();
    },
    measureMaxLabel: function() {
        var c, a = this.chartData, b = 0;
        for (c = 0; c < a.length; c++) {
            var d = a[c], e = this.formatString(this.labelText, d), f = this.labelFunction;
            f && (e = f(d, e)), d = AmCharts.text(this.container, e, this.color, this.fontFamily, this.fontSize), 
            e = d.getBBox().width, e > b && (b = e), d.remove();
        }
        return b;
    }
}), AmCharts.AmRectangularChart = AmCharts.Class({
    inherits: AmCharts.AmCoordinateChart,
    construct: function(a) {
        AmCharts.AmRectangularChart.base.construct.call(this, a), this.theme = a, this.createEvents("zoomed"), 
        this.marginRight = this.marginBottom = this.marginTop = this.marginLeft = 20, this.verticalPosition = this.horizontalPosition = this.depth3D = this.angle = 0, 
        this.heightMultiplier = this.widthMultiplier = 1, this.plotAreaFillColors = "#FFFFFF", 
        this.plotAreaFillAlphas = 0, this.plotAreaBorderColor = "#000000", this.plotAreaBorderAlpha = 0, 
        this.zoomOutButtonImageSize = 17, this.zoomOutButtonImage = "lens.png", this.zoomOutText = "Show all", 
        this.zoomOutButtonColor = "#e5e5e5", this.zoomOutButtonAlpha = 0, this.zoomOutButtonRollOverAlpha = 1, 
        this.zoomOutButtonPadding = 8, this.trendLines = [], this.autoMargins = !0, this.marginsUpdated = !1, 
        this.autoMarginOffset = 10, AmCharts.applyTheme(this, a, "AmRectangularChart");
    },
    initChart: function() {
        AmCharts.AmRectangularChart.base.initChart.call(this), this.updateDxy();
        var a = !0;
        !this.marginsUpdated && this.autoMargins && (this.resetMargins(), a = !1), this.processScrollbars(), 
        this.updateMargins(), this.updatePlotArea(), this.updateScrollbars(), this.updateTrendLines(), 
        this.updateChartCursor(), this.updateValueAxes(), a && (this.scrollbarOnly || this.updateGraphs());
    },
    drawChart: function() {
        if (AmCharts.AmRectangularChart.base.drawChart.call(this), this.drawPlotArea(), 
        AmCharts.ifArray(this.chartData)) {
            var a = this.chartCursor;
            a && a.draw(), a = this.zoomOutText, "" !== a && a && this.drawZoomOutButton();
        }
    },
    resetMargins: function() {
        var b, a = {};
        if ("serial" == this.type) {
            var c = this.valueAxes;
            for (b = 0; b < c.length; b++) {
                var d = c[b];
                d.ignoreAxisWidth || (d.setOrientation(this.rotate), d.fixAxisPosition(), a[d.position] = !0);
            }
            (b = this.categoryAxis) && !b.ignoreAxisWidth && (b.setOrientation(!this.rotate), 
            b.fixAxisPosition(), b.fixAxisPosition(), a[b.position] = !0);
        } else {
            for (d = this.xAxes, c = this.yAxes, b = 0; b < d.length; b++) {
                var e = d[b];
                e.ignoreAxisWidth || (e.setOrientation(!0), e.fixAxisPosition(), a[e.position] = !0);
            }
            for (b = 0; b < c.length; b++) d = c[b], d.ignoreAxisWidth || (d.setOrientation(!1), 
            d.fixAxisPosition(), a[d.position] = !0);
        }
        a.left && (this.marginLeft = 0), a.right && (this.marginRight = 0), a.top && (this.marginTop = 0), 
        a.bottom && (this.marginBottom = 0), this.fixMargins = a;
    },
    measureMargins: function() {
        var b, a = this.valueAxes, c = this.autoMarginOffset, d = this.fixMargins, e = this.realWidth, f = this.realHeight, g = c, h = c, k = e;
        b = f;
        var l;
        for (l = 0; l < a.length; l++) b = this.getAxisBounds(a[l], g, k, h, b), g = Math.round(b.l), 
        k = Math.round(b.r), h = Math.round(b.t), b = Math.round(b.b);
        (a = this.categoryAxis) && (b = this.getAxisBounds(a, g, k, h, b), g = Math.round(b.l), 
        k = Math.round(b.r), h = Math.round(b.t), b = Math.round(b.b)), d.left && c > g && (this.marginLeft = Math.round(-g + c)), 
        d.right && k >= e - c && (this.marginRight = Math.round(k - e + c)), d.top && h < c + this.titleHeight && (this.marginTop = Math.round(this.marginTop - h + c + this.titleHeight)), 
        d.bottom && b > f - c && (this.marginBottom = Math.round(this.marginBottom + b - f + c)), 
        this.initChart();
    },
    getAxisBounds: function(a, b, c, d, e) {
        if (!a.ignoreAxisWidth) {
            var f = a.labelsSet, g = a.tickLength;
            if (a.inside && (g = 0), f) switch (f = a.getBBox(), a.position) {
              case "top":
                a = f.y, d > a && (d = a);
                break;

              case "bottom":
                a = f.y + f.height, a > e && (e = a);
                break;

              case "right":
                a = f.x + f.width + g + 3, a > c && (c = a);
                break;

              case "left":
                a = f.x - g, b > a && (b = a);
            }
        }
        return {
            l: b,
            t: d,
            r: c,
            b: e
        };
    },
    drawZoomOutButton: function() {
        var a = this, b = a.container.set();
        a.zoomButtonSet.push(b);
        var c = a.color, d = a.fontSize, e = a.zoomOutButtonImageSize, f = a.zoomOutButtonImage, g = AmCharts.lang.zoomOutText || a.zoomOutText, h = a.zoomOutButtonColor, k = a.zoomOutButtonAlpha, l = a.zoomOutButtonFontSize, m = a.zoomOutButtonPadding;
        isNaN(l) || (d = l), (l = a.zoomOutButtonFontColor) && (c = l);
        var n, l = a.zoomOutButton;
        l && (l.fontSize && (d = l.fontSize), l.color && (c = l.color), l.backgroundColor && (h = l.backgroundColor), 
        isNaN(l.backgroundAlpha) || (a.zoomOutButtonRollOverAlpha = l.backgroundAlpha));
        var p = l = 0;
        for (void 0 !== a.pathToImages && f && (n = a.container.image(a.pathToImages + f, 0, 0, e, e), 
        b.push(n), n = n.getBBox(), l = n.width + 5), void 0 !== g && (c = AmCharts.text(a.container, g, c, a.fontFamily, d, "start"), 
        d = c.getBBox(), p = n ? n.height / 2 - 3 : d.height / 2, c.translate(l, p), b.push(c)), 
        n = b.getBBox(), c = 1, AmCharts.isModern || (c = 0), h = AmCharts.rect(a.container, n.width + 2 * m + 5, n.height + 2 * m - 2, h, 1, 1, h, c), 
        h.setAttr("opacity", k), h.translate(-m, -m), b.push(h), h.toBack(), a.zbBG = h, 
        n = h.getBBox(), b.translate(a.marginLeftReal + a.plotAreaWidth - n.width + m, a.marginTopReal + m), 
        b.hide(), b.mouseover(function() {
            a.rollOverZB();
        }).mouseout(function() {
            a.rollOutZB();
        }).click(function() {
            a.clickZB();
        }).touchstart(function() {
            a.rollOverZB();
        }).touchend(function() {
            a.rollOutZB(), a.clickZB();
        }), k = 0; k < b.length; k++) b[k].attr({
            cursor: "pointer"
        });
        a.zbSet = b;
    },
    rollOverZB: function() {
        this.zbBG.setAttr("opacity", this.zoomOutButtonRollOverAlpha);
    },
    rollOutZB: function() {
        this.zbBG.setAttr("opacity", this.zoomOutButtonAlpha);
    },
    clickZB: function() {
        this.zoomOut();
    },
    zoomOut: function() {
        this.updateScrollbar = !0, this.zoom();
    },
    drawPlotArea: function() {
        var a = this.dx, b = this.dy, c = this.marginLeftReal, d = this.marginTopReal, e = this.plotAreaWidth - 1, f = this.plotAreaHeight - 1, g = this.plotAreaFillColors, h = this.plotAreaFillAlphas, k = this.plotAreaBorderColor, l = this.plotAreaBorderAlpha;
        this.trendLinesSet.clipRect(c, d, e, f), "object" == typeof h && (h = h[0]), g = AmCharts.polygon(this.container, [ 0, e, e, 0, 0 ], [ 0, 0, f, f, 0 ], g, h, 1, k, l, this.plotAreaGradientAngle), 
        g.translate(c + a, d + b), this.set.push(g), 0 !== a && 0 !== b && (g = this.plotAreaFillColors, 
        "object" == typeof g && (g = g[0]), g = AmCharts.adjustLuminosity(g, -.15), e = AmCharts.polygon(this.container, [ 0, a, e + a, e, 0 ], [ 0, b, b, 0, 0 ], g, h, 1, k, l), 
        e.translate(c, d + f), this.set.push(e), a = AmCharts.polygon(this.container, [ 0, 0, a, a, 0 ], [ 0, f, f + b, b, 0 ], g, h, 1, k, l), 
        a.translate(c, d), this.set.push(a)), (c = this.bbset) && this.scrollbarOnly && c.remove();
    },
    updatePlotArea: function() {
        var a = this.updateWidth(), b = this.updateHeight(), c = this.container;
        this.realWidth = a, this.realWidth = b, c && this.container.setSize(a, b), a = a - this.marginLeftReal - this.marginRightReal - this.dx, 
        b = b - this.marginTopReal - this.marginBottomReal, 1 > a && (a = 1), 1 > b && (b = 1), 
        this.plotAreaWidth = Math.round(a), this.plotAreaHeight = Math.round(b);
    },
    updateDxy: function() {
        this.dx = Math.round(this.depth3D * Math.cos(this.angle * Math.PI / 180)), this.dy = Math.round(-this.depth3D * Math.sin(this.angle * Math.PI / 180)), 
        this.d3x = Math.round(this.columnSpacing3D * Math.cos(this.angle * Math.PI / 180)), 
        this.d3y = Math.round(-this.columnSpacing3D * Math.sin(this.angle * Math.PI / 180));
    },
    updateMargins: function() {
        var a = this.getTitleHeight();
        this.titleHeight = a, this.marginTopReal = this.marginTop - this.dy + a, this.marginBottomReal = this.marginBottom, 
        this.marginLeftReal = this.marginLeft, this.marginRightReal = this.marginRight;
    },
    updateValueAxes: function() {
        var f, a = this.valueAxes, b = this.marginLeftReal, c = this.marginTopReal, d = this.plotAreaHeight, e = this.plotAreaWidth;
        for (f = 0; f < a.length; f++) {
            var g = a[f];
            g.axisRenderer = AmCharts.RecAxis, g.guideFillRenderer = AmCharts.RecFill, g.axisItemRenderer = AmCharts.RecItem, 
            g.dx = this.dx, g.dy = this.dy, g.viW = e - 1, g.viH = d - 1, g.marginsChanged = !0, 
            g.viX = b, g.viY = c, this.updateObjectSize(g);
        }
    },
    updateObjectSize: function(a) {
        a.width = (this.plotAreaWidth - 1) * this.widthMultiplier, a.height = (this.plotAreaHeight - 1) * this.heightMultiplier, 
        a.x = this.marginLeftReal + this.horizontalPosition, a.y = this.marginTopReal + this.verticalPosition;
    },
    updateGraphs: function() {
        var b, a = this.graphs;
        for (b = 0; b < a.length; b++) {
            var c = a[b];
            c.x = this.marginLeftReal + this.horizontalPosition, c.y = this.marginTopReal + this.verticalPosition, 
            c.width = this.plotAreaWidth * this.widthMultiplier, c.height = this.plotAreaHeight * this.heightMultiplier, 
            c.index = b, c.dx = this.dx, c.dy = this.dy, c.rotate = this.rotate;
        }
    },
    updateChartCursor: function() {
        var a = this.chartCursor;
        a && (a = AmCharts.processObject(a, AmCharts.ChartCursor, this.theme), this.addChartCursor(a), 
        a.x = this.marginLeftReal, a.y = this.marginTopReal, a.width = this.plotAreaWidth - 1, 
        a.height = this.plotAreaHeight - 1, a.chart = this);
    },
    processScrollbars: function() {
        var a = this.chartScrollbar;
        a && (a = AmCharts.processObject(a, AmCharts.ChartScrollbar, this.theme), this.addChartScrollbar(a));
    },
    updateScrollbars: function() {},
    addChartCursor: function(a) {
        AmCharts.callMethod("destroy", [ this.chartCursor ]), a && (this.listenTo(a, "changed", this.handleCursorChange), 
        this.listenTo(a, "zoomed", this.handleCursorZoom)), this.chartCursor = a;
    },
    removeChartCursor: function() {
        AmCharts.callMethod("destroy", [ this.chartCursor ]), this.chartCursor = null;
    },
    zoomTrendLines: function() {
        var b, a = this.trendLines;
        for (b = 0; b < a.length; b++) {
            var c = a[b];
            c.valueAxis.recalculateToPercents ? c.set && c.set.hide() : (c.x = this.marginLeftReal + this.horizontalPosition, 
            c.y = this.marginTopReal + this.verticalPosition, c.draw());
        }
    },
    addTrendLine: function(a) {
        this.trendLines.push(a);
    },
    removeTrendLine: function(a) {
        var c, b = this.trendLines;
        for (c = b.length - 1; c >= 0; c--) b[c] == a && b.splice(c, 1);
    },
    adjustMargins: function(a, b) {
        var c = a.scrollbarHeight + a.offset;
        "top" == a.position ? b ? this.marginLeftReal += c : this.marginTopReal += c : b ? this.marginRightReal += c : this.marginBottomReal += c;
    },
    getScrollbarPosition: function(a, b, c) {
        a.position = b ? "bottom" == c || "left" == c ? "bottom" : "top" : "top" == c || "right" == c ? "bottom" : "top";
    },
    updateChartScrollbar: function(a, b) {
        if (a) {
            a.rotate = b;
            var c = this.marginTopReal, d = this.marginLeftReal, e = a.scrollbarHeight, f = this.dx, g = this.dy, h = a.offset;
            "top" == a.position ? b ? (a.y = c, a.x = d - e - h) : (a.y = c - e + g - 1 - h, 
            a.x = d + f) : b ? (a.y = c + g, a.x = d + this.plotAreaWidth + f + h) : (a.y = c + this.plotAreaHeight + h, 
            a.x = this.marginLeftReal);
        }
    },
    showZB: function(a) {
        var b = this.zbSet;
        b && (a ? b.show() : b.hide(), this.rollOutZB());
    },
    handleReleaseOutside: function(a) {
        AmCharts.AmRectangularChart.base.handleReleaseOutside.call(this, a), (a = this.chartCursor) && a.handleReleaseOutside();
    },
    handleMouseDown: function(a) {
        AmCharts.AmRectangularChart.base.handleMouseDown.call(this, a);
        var b = this.chartCursor;
        b && b.handleMouseDown(a);
    },
    handleCursorChange: function() {}
}), AmCharts.TrendLine = AmCharts.Class({
    construct: function(a) {
        this.cname = "TrendLine", this.createEvents("click"), this.isProtected = !1, this.dashLength = 0, 
        this.lineColor = "#00CC00", this.lineThickness = this.lineAlpha = 1, AmCharts.applyTheme(this, a, this.cname);
    },
    draw: function() {
        var a = this;
        a.destroy();
        var d, e, f, g, b = a.chart, c = b.container, h = a.categoryAxis, k = a.initialDate, l = a.initialCategory, m = a.finalDate, n = a.finalCategory, p = a.valueAxis, q = a.valueAxisX, r = a.initialXValue, t = a.finalXValue, w = a.initialValue, v = a.finalValue, s = p.recalculateToPercents, u = b.dataDateFormat;
        h && (k && (k instanceof Date || (k = u ? AmCharts.stringToDate(k, u) : new Date(k)), 
        a.initialDate = k, d = h.dateToCoordinate(k)), l && (d = h.categoryToCoordinate(l)), 
        m && (m instanceof Date || (m = u ? AmCharts.stringToDate(m, u) : new Date(m)), 
        a.finalDate = m, e = h.dateToCoordinate(m)), n && (e = h.categoryToCoordinate(n))), 
        q && !s && (isNaN(r) || (d = q.getCoordinate(r)), isNaN(t) || (e = q.getCoordinate(t))), 
        p && !s && (isNaN(w) || (f = p.getCoordinate(w)), isNaN(v) || (g = p.getCoordinate(v))), 
        isNaN(d) || isNaN(e) || isNaN(f) || isNaN(f) || (b.rotate ? (h = [ f, g ], e = [ d, e ]) : (h = [ d, e ], 
        e = [ f, g ]), f = a.lineColor, d = AmCharts.line(c, h, e, f, a.lineAlpha, a.lineThickness, a.dashLength), 
        g = h, k = e, n = h[1] - h[0], p = e[1] - e[0], 0 === n && (n = .01), 0 === p && (p = .01), 
        l = n / Math.abs(n), m = p / Math.abs(p), p = n * p / Math.abs(n * p) * Math.sqrt(Math.pow(n, 2) + Math.pow(p, 2)), 
        n = Math.asin(n / p), p = 90 * Math.PI / 180 - n, n = Math.abs(5 * Math.cos(p)), 
        p = Math.abs(5 * Math.sin(p)), g.push(h[1] - l * p, h[0] - l * p), k.push(e[1] + m * n, e[0] + m * n), 
        h = AmCharts.polygon(c, g, k, f, .005, 0), c = c.set([ h, d ]), c.translate(b.marginLeftReal, b.marginTopReal), 
        b.trendLinesSet.push(c), a.line = d, a.set = c, h.mouseup(function() {
            a.handleLineClick();
        }).mouseover(function() {
            a.handleLineOver();
        }).mouseout(function() {
            a.handleLineOut();
        }), h.touchend && h.touchend(function() {
            a.handleLineClick();
        }));
    },
    handleLineClick: function() {
        var a = {
            type: "click",
            trendLine: this,
            chart: this.chart
        };
        this.fire(a.type, a);
    },
    handleLineOver: function() {
        var a = this.rollOverColor;
        void 0 !== a && this.line.attr({
            stroke: a
        });
    },
    handleLineOut: function() {
        this.line.attr({
            stroke: this.lineColor
        });
    },
    destroy: function() {
        AmCharts.remove(this.set);
    }
}), AmCharts.circle = function(a, b, c, d, e, f, g, h, k) {
    return (void 0 == e || 0 === e) && (e = .01), void 0 === f && (f = "#000000"), void 0 === g && (g = 0), 
    d = {
        fill: c,
        stroke: f,
        "fill-opacity": d,
        "stroke-width": e,
        "stroke-opacity": g
    }, a = isNaN(k) ? a.circle(0, 0, b).attr(d) : a.ellipse(0, 0, b, k).attr(d), h && a.gradient("radialGradient", [ c, AmCharts.adjustLuminosity(c, -.6) ]), 
    a;
}, AmCharts.text = function(a, b, c, d, e, f, g, h) {
    return f || (f = "middle"), "right" == f && (f = "end"), isNaN(h) && (h = 1), void 0 !== b && (b = String(b), 
    AmCharts.isIE && !AmCharts.isModern && (b = b.replace("&amp;", "&"), b = b.replace("&", "&amp;"))), 
    c = {
        fill: c,
        "font-family": d,
        "font-size": e,
        opacity: h
    }, !0 === g && (c["font-weight"] = "bold"), c["text-anchor"] = f, a.text(b, c);
}, AmCharts.polygon = function(a, b, c, d, e, f, g, h, k, l, m) {
    isNaN(f) && (f = .01), isNaN(h) && (h = e);
    var n = d, p = !1;
    for ("object" == typeof n && 1 < n.length && (p = !0, n = n[0]), void 0 === g && (g = n), 
    e = {
        fill: n,
        stroke: g,
        "fill-opacity": e,
        "stroke-width": f,
        "stroke-opacity": h
    }, void 0 !== m && m > 0 && (e["stroke-dasharray"] = m), m = AmCharts.dx, f = AmCharts.dy, 
    a.handDrawn && (c = AmCharts.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]), 
    g = Math.round, l && (g = AmCharts.doNothing), l = "M" + (g(b[0]) + m) + "," + (g(c[0]) + f), 
    h = 1; h < b.length; h++) l += " L" + (g(b[h]) + m) + "," + (g(c[h]) + f);
    return a = a.path(l + " Z").attr(e), p && a.gradient("linearGradient", d, k), a;
}, AmCharts.rect = function(a, b, c, d, e, f, g, h, k, l, m) {
    isNaN(f) && (f = 0), void 0 === k && (k = 0), void 0 === l && (l = 270), isNaN(e) && (e = 0);
    var n = d, p = !1;
    "object" == typeof n && (n = n[0], p = !0), void 0 === g && (g = n), void 0 === h && (h = e), 
    b = Math.round(b), c = Math.round(c);
    var q = 0, r = 0;
    return 0 > b && (b = Math.abs(b), q = -b), 0 > c && (c = Math.abs(c), r = -c), q += AmCharts.dx, 
    r += AmCharts.dy, e = {
        fill: n,
        stroke: g,
        "fill-opacity": e,
        "stroke-opacity": h
    }, void 0 !== m && m > 0 && (e["stroke-dasharray"] = m), a = a.rect(q, r, b, c, k, f).attr(e), 
    p && a.gradient("linearGradient", d, l), a;
}, AmCharts.bullet = function(a, b, c, d, e, f, g, h, k, l, m) {
    var n;
    switch ("circle" == b && (b = "round"), b) {
      case "round":
        n = AmCharts.circle(a, c / 2, d, e, f, g, h);
        break;

      case "square":
        n = AmCharts.polygon(a, [ -c / 2, c / 2, c / 2, -c / 2 ], [ c / 2, c / 2, -c / 2, -c / 2 ], d, e, f, g, h, l - 180);
        break;

      case "rectangle":
        n = AmCharts.polygon(a, [ -c, c, c, -c ], [ c / 2, c / 2, -c / 2, -c / 2 ], d, e, f, g, h, l - 180);
        break;

      case "diamond":
        n = AmCharts.polygon(a, [ -c / 2, 0, c / 2, 0 ], [ 0, -c / 2, 0, c / 2 ], d, e, f, g, h);
        break;

      case "triangleUp":
        n = AmCharts.triangle(a, c, 0, d, e, f, g, h);
        break;

      case "triangleDown":
        n = AmCharts.triangle(a, c, 180, d, e, f, g, h);
        break;

      case "triangleLeft":
        n = AmCharts.triangle(a, c, 270, d, e, f, g, h);
        break;

      case "triangleRight":
        n = AmCharts.triangle(a, c, 90, d, e, f, g, h);
        break;

      case "bubble":
        n = AmCharts.circle(a, c / 2, d, e, f, g, h, !0);
        break;

      case "line":
        n = AmCharts.line(a, [ -c / 2, c / 2 ], [ 0, 0 ], d, e, f, g, h);
        break;

      case "yError":
        n = a.set(), n.push(AmCharts.line(a, [ 0, 0 ], [ -c / 2, c / 2 ], d, e, f)), n.push(AmCharts.line(a, [ -k, k ], [ -c / 2, -c / 2 ], d, e, f)), 
        n.push(AmCharts.line(a, [ -k, k ], [ c / 2, c / 2 ], d, e, f));
        break;

      case "xError":
        n = a.set(), n.push(AmCharts.line(a, [ -c / 2, c / 2 ], [ 0, 0 ], d, e, f)), n.push(AmCharts.line(a, [ -c / 2, -c / 2 ], [ -k, k ], d, e, f)), 
        n.push(AmCharts.line(a, [ c / 2, c / 2 ], [ -k, k ], d, e, f));
    }
    return n && n.pattern(m), n;
}, AmCharts.triangle = function(a, b, c, d, e, f, g, h) {
    (void 0 === f || 0 === f) && (f = 1), void 0 === g && (g = "#000"), void 0 === h && (h = 0), 
    d = {
        fill: d,
        stroke: g,
        "fill-opacity": e,
        "stroke-width": f,
        "stroke-opacity": h
    }, b /= 2;
    var k;
    return 0 === c && (k = " M" + -b + "," + b + " L0," + -b + " L" + b + "," + b + " Z"), 
    180 == c && (k = " M" + -b + "," + -b + " L0," + b + " L" + b + "," + -b + " Z"), 
    90 == c && (k = " M" + -b + "," + -b + " L" + b + ",0 L" + -b + "," + b + " Z"), 
    270 == c && (k = " M" + -b + ",0 L" + b + "," + b + " L" + b + "," + -b + " Z"), 
    a.path(k).attr(d);
}, AmCharts.line = function(a, b, c, d, e, f, g, h, k, l, m) {
    if (a.handDrawn && !m) return AmCharts.handDrawnLine(a, b, c, d, e, f, g, h, k, l, m);
    for (f = {
        fill: "none",
        "stroke-width": f
    }, void 0 !== g && g > 0 && (f["stroke-dasharray"] = g), isNaN(e) || (f["stroke-opacity"] = e), 
    d && (f.stroke = d), d = Math.round, l && (d = AmCharts.doNothing), l = AmCharts.dx, 
    e = AmCharts.dy, g = "M" + (d(b[0]) + l) + "," + (d(c[0]) + e), h = 1; h < b.length; h++) g += " L" + (d(b[h]) + l) + "," + (d(c[h]) + e);
    return AmCharts.VML ? a.path(g, void 0, !0).attr(f) : (k && (g += " M0,0 L0,0"), 
    a.path(g).attr(f));
}, AmCharts.makeHD = function(a, b, c) {
    for (var d = [], e = [], f = 1; f < a.length; f++) for (var g = Number(a[f - 1]), h = Number(b[f - 1]), k = Number(a[f]), l = Number(b[f]), m = Math.sqrt(Math.pow(k - g, 2) + Math.pow(l - h, 2)), m = Math.round(m / 50) + 1, k = (k - g) / m, l = (l - h) / m, n = 0; m >= n; n++) {
        var p = g + n * k + Math.random() * c, q = h + n * l + Math.random() * c;
        d.push(p), e.push(q);
    }
    return [ d, e ];
}, AmCharts.handDrawnLine = function(a, b, c, d, e, f, g, h, k, l, m) {
    var n = a.set();
    for (m = 1; m < b.length; m++) for (var p = [ b[m - 1], b[m] ], q = [ c[m - 1], c[m] ], q = AmCharts.makeHD(p, q, a.handDrawScatter), p = q[0], q = q[1], r = 1; r < p.length; r++) n.push(AmCharts.line(a, [ p[r - 1], p[r] ], [ q[r - 1], q[r] ], d, e, f + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, g, h, k, l, !0));
    return n;
}, AmCharts.doNothing = function(a) {
    return a;
}, AmCharts.wedge = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    var p = Math.round;
    f = p(f), g = p(g), h = p(h);
    var q = p(g / f * h), r = AmCharts.VML, t = 359.5 + f / 100;
    t > 359.94 && (t = 359.94), e >= t && (e = t);
    var w = 1 / 180 * Math.PI, t = b + Math.sin(d * w) * h, v = c - Math.cos(d * w) * q, s = b + Math.sin(d * w) * f, u = c - Math.cos(d * w) * g, x = b + Math.sin((d + e) * w) * f, F = c - Math.cos((d + e) * w) * g, B = b + Math.sin((d + e) * w) * h, w = c - Math.cos((d + e) * w) * q, z = {
        fill: AmCharts.adjustLuminosity(l.fill, -.2),
        "stroke-opacity": 0,
        "fill-opacity": l["fill-opacity"]
    }, I = 0;
    180 < Math.abs(e) && (I = 1), d = a.set();
    var E;
    r && (t = p(10 * t), s = p(10 * s), x = p(10 * x), B = p(10 * B), v = p(10 * v), 
    u = p(10 * u), F = p(10 * F), w = p(10 * w), b = p(10 * b), k = p(10 * k), c = p(10 * c), 
    f *= 10, g *= 10, h *= 10, q *= 10, 1 > Math.abs(e) && 1 >= Math.abs(x - s) && 1 >= Math.abs(F - u) && (E = !0)), 
    e = "";
    var H;
    if (n && (z["fill-opacity"] = 0, z["stroke-opacity"] = l["stroke-opacity"] / 2, 
    z.stroke = l.stroke), k > 0 && (H = " M" + t + "," + (v + k) + " L" + s + "," + (u + k), 
    r ? (E || (H += " A" + (b - f) + "," + (k + c - g) + "," + (b + f) + "," + (k + c + g) + "," + s + "," + (u + k) + "," + x + "," + (F + k)), 
    H += " L" + B + "," + (w + k), h > 0 && (E || (H += " B" + (b - h) + "," + (k + c - q) + "," + (b + h) + "," + (k + c + q) + "," + B + "," + (k + w) + "," + t + "," + (k + v)))) : (H += " A" + f + "," + g + ",0," + I + ",1," + x + "," + (F + k) + " L" + B + "," + (w + k), 
    h > 0 && (H += " A" + h + "," + q + ",0," + I + ",0," + t + "," + (v + k))), H = a.path(H + " Z", void 0, void 0, "1000,1000").attr(z), 
    d.push(H), H = a.path(" M" + t + "," + v + " L" + t + "," + (v + k) + " L" + s + "," + (u + k) + " L" + s + "," + u + " L" + t + "," + v + " Z", void 0, void 0, "1000,1000").attr(z), 
    k = a.path(" M" + x + "," + F + " L" + x + "," + (F + k) + " L" + B + "," + (w + k) + " L" + B + "," + w + " L" + x + "," + F + " Z", void 0, void 0, "1000,1000").attr(z), 
    d.push(H), d.push(k)), r ? (E || (e = " A" + p(b - f) + "," + p(c - g) + "," + p(b + f) + "," + p(c + g) + "," + p(s) + "," + p(u) + "," + p(x) + "," + p(F)), 
    f = " M" + p(t) + "," + p(v) + " L" + p(s) + "," + p(u) + e + " L" + p(B) + "," + p(w)) : f = " M" + t + "," + v + " L" + s + "," + u + (" A" + f + "," + g + ",0," + I + ",1," + x + "," + F) + " L" + B + "," + w, 
    h > 0 && (r ? E || (f += " B" + (b - h) + "," + (c - q) + "," + (b + h) + "," + (c + q) + "," + B + "," + w + "," + t + "," + v) : f += " A" + h + "," + q + ",0," + I + ",0," + t + "," + v), 
    a.handDrawn && (b = AmCharts.line(a, [ t, s ], [ v, u ], l.stroke, l.thickness * Math.random() * a.handDrawThickness, l["stroke-opacity"]), 
    d.push(b)), a = a.path(f + " Z", void 0, void 0, "1000,1000").attr(l), m) {
        for (b = [], c = 0; c < m.length; c++) b.push(AmCharts.adjustLuminosity(l.fill, m[c]));
        0 < b.length && a.gradient("linearGradient", b);
    }
    return a.pattern(n), d.push(a), d;
}, AmCharts.adjustLuminosity = function(a, b) {
    a = String(a).replace(/[^0-9a-f]/gi, ""), 6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2])), 
    b = b || 0;
    var d, e, c = "#";
    for (e = 0; 3 > e; e++) d = parseInt(a.substr(2 * e, 2), 16), d = Math.round(Math.min(Math.max(0, d + d * b), 255)).toString(16), 
    c += ("00" + d).substr(d.length);
    return c;
}, AmCharts.Bezier = AmCharts.Class({
    construct: function(a, b, c, d, e, f, g, h, k, l) {
        for ("object" == typeof g && (g = g[0]), "object" == typeof h && (h = h[0]), f = {
            fill: g,
            "fill-opacity": h,
            "stroke-width": f
        }, void 0 !== k && k > 0 && (f["stroke-dasharray"] = k), isNaN(e) || (f["stroke-opacity"] = e), 
        d && (f.stroke = d), d = "M" + Math.round(b[0]) + "," + Math.round(c[0]), e = [], 
        k = 0; k < b.length; k++) e.push({
            x: Number(b[k]),
            y: Number(c[k])
        });
        1 < e.length && (b = this.interpolate(e), d += this.drawBeziers(b)), l ? d += l : AmCharts.VML || (d += "M0,0 L0,0"), 
        this.path = a.path(d).attr(f);
    },
    interpolate: function(a) {
        var b = [];
        b.push({
            x: a[0].x,
            y: a[0].y
        });
        var c = a[1].x - a[0].x, d = a[1].y - a[0].y, e = AmCharts.bezierX, f = AmCharts.bezierY;
        b.push({
            x: a[0].x + c / e,
            y: a[0].y + d / f
        });
        var g;
        for (g = 1; g < a.length - 1; g++) {
            var h = a[g - 1], k = a[g], d = a[g + 1];
            isNaN(d.x) && (d = k), isNaN(k.x) && (k = h), isNaN(h.x) && (h = k), c = d.x - k.x, 
            d = d.y - h.y, h = k.x - h.x, h > c && (h = c), b.push({
                x: k.x - h / e,
                y: k.y - d / f
            }), b.push({
                x: k.x,
                y: k.y
            }), b.push({
                x: k.x + h / e,
                y: k.y + d / f
            });
        }
        return d = a[a.length - 1].y - a[a.length - 2].y, c = a[a.length - 1].x - a[a.length - 2].x, 
        b.push({
            x: a[a.length - 1].x - c / e,
            y: a[a.length - 1].y - d / f
        }), b.push({
            x: a[a.length - 1].x,
            y: a[a.length - 1].y
        }), b;
    },
    drawBeziers: function(a) {
        var c, b = "";
        for (c = 0; c < (a.length - 1) / 3; c++) b += this.drawBezierMidpoint(a[3 * c], a[3 * c + 1], a[3 * c + 2], a[3 * c + 3]);
        return b;
    },
    drawBezierMidpoint: function(a, b, c, d) {
        var e = Math.round, f = this.getPointOnSegment(a, b, .75), g = this.getPointOnSegment(d, c, .75), h = (d.x - a.x) / 16, k = (d.y - a.y) / 16, l = this.getPointOnSegment(a, b, .375);
        return a = this.getPointOnSegment(f, g, .375), a.x -= h, a.y -= k, b = this.getPointOnSegment(g, f, .375), 
        b.x += h, b.y += k, c = this.getPointOnSegment(d, c, .375), h = this.getMiddle(l, a), 
        f = this.getMiddle(f, g), g = this.getMiddle(b, c), l = " Q" + e(l.x) + "," + e(l.y) + "," + e(h.x) + "," + e(h.y), 
        l += " Q" + e(a.x) + "," + e(a.y) + "," + e(f.x) + "," + e(f.y), l += " Q" + e(b.x) + "," + e(b.y) + "," + e(g.x) + "," + e(g.y), 
        l += " Q" + e(c.x) + "," + e(c.y) + "," + e(d.x) + "," + e(d.y);
    },
    getMiddle: function(a, b) {
        return {
            x: (a.x + b.x) / 2,
            y: (a.y + b.y) / 2
        };
    },
    getPointOnSegment: function(a, b, c) {
        return {
            x: a.x + (b.x - a.x) * c,
            y: a.y + (b.y - a.y) * c
        };
    }
}), AmCharts.AmDraw = AmCharts.Class({
    construct: function(a, b, c, d) {
        if (AmCharts.SVG_NS = "http://www.w3.org/2000/svg", AmCharts.SVG_XLINK = "http://www.w3.org/1999/xlink", 
        AmCharts.hasSVG = !!document.createElementNS && !!document.createElementNS(AmCharts.SVG_NS, "svg").createSVGRect, 
        1 > b && (b = 10), 1 > c && (c = 10), this.div = a, this.width = b, this.height = c, 
        this.rBin = document.createElement("div"), AmCharts.hasSVG) {
            AmCharts.SVG = !0;
            var e = this.createSvgElement("svg");
            e.style.position = "absolute", e.style.width = b + "px", e.style.height = c + "px", 
            b = this.createSvgElement("desc"), b.appendChild(document.createTextNode("JavaScript chart by amCharts " + d.version)), 
            e.appendChild(b), AmCharts.rtl && (e.setAttribute("direction", "rtl"), e.style.left = "auto", 
            e.style.right = "0px"), e.setAttribute("version", "1.1"), a.appendChild(e), this.container = e, 
            this.R = new AmCharts.SVGRenderer(this);
        } else AmCharts.isIE && AmCharts.VMLRenderer && (AmCharts.VML = !0, AmCharts.vmlStyleSheet || (document.namespaces.add("amvml", "urn:schemas-microsoft-com:vml"), 
        31 > document.styleSheets.length ? (e = document.createStyleSheet(), e.addRule(".amvml", "behavior:url(#default#VML); display:inline-block; antialias:true"), 
        AmCharts.vmlStyleSheet = e) : document.styleSheets[0].addRule(".amvml", "behavior:url(#default#VML); display:inline-block; antialias:true")), 
        this.container = a, this.R = new AmCharts.VMLRenderer(this, d), this.R.disableSelection(a));
    },
    createSvgElement: function(a) {
        return document.createElementNS(AmCharts.SVG_NS, a);
    },
    circle: function(a, b, c, d) {
        var e = new AmCharts.AmDObject("circle", this);
        return e.attr({
            r: c,
            cx: a,
            cy: b
        }), this.addToContainer(e.node, d), e;
    },
    ellipse: function(a, b, c, d, e) {
        var f = new AmCharts.AmDObject("ellipse", this);
        return f.attr({
            rx: c,
            ry: d,
            cx: a,
            cy: b
        }), this.addToContainer(f.node, e), f;
    },
    setSize: function(a, b) {
        a > 0 && b > 0 && (this.container.style.width = a + "px", this.container.style.height = b + "px");
    },
    rect: function(a, b, c, d, e, f, g) {
        var h = new AmCharts.AmDObject("rect", this);
        return AmCharts.VML && (e = Math.round(100 * e / Math.min(c, d)), c += 2 * f, d += 2 * f, 
        h.bw = f, h.node.style.marginLeft = -f, h.node.style.marginTop = -f), 1 > c && (c = 1), 
        1 > d && (d = 1), h.attr({
            x: a,
            y: b,
            width: c,
            height: d,
            rx: e,
            ry: e,
            "stroke-width": f
        }), this.addToContainer(h.node, g), h;
    },
    image: function(a, b, c, d, e, f) {
        var g = new AmCharts.AmDObject("image", this);
        return g.attr({
            x: b,
            y: c,
            width: d,
            height: e
        }), this.R.path(g, a), this.addToContainer(g.node, f), g;
    },
    addToContainer: function(a, b) {
        b || (b = this.container), b.appendChild(a);
    },
    text: function(a, b, c) {
        return this.R.text(a, b, c);
    },
    path: function(a, b, c, d) {
        var e = new AmCharts.AmDObject("path", this);
        return d || (d = "100,100"), e.attr({
            cs: d
        }), e.attr(c ? {
            dd: a
        } : {
            d: a
        }), this.addToContainer(e.node, b), e;
    },
    set: function(a) {
        return this.R.set(a);
    },
    remove: function(a) {
        if (a) {
            var b = this.rBin;
            b.appendChild(a), b.innerHTML = "";
        }
    },
    renderFix: function() {
        var c, a = this.container, b = a.style;
        try {
            c = a.getScreenCTM() || a.createSVGMatrix();
        } catch (d) {
            c = a.createSVGMatrix();
        }
        a = 1 - c.e % 1, c = 1 - c.f % 1, a > .5 && --a, c > .5 && --c, a && (b.left = a + "px"), 
        c && (b.top = c + "px");
    },
    update: function() {
        this.R.update();
    }
}), AmCharts.AmDObject = AmCharts.Class({
    construct: function(a, b) {
        this.D = b, this.R = b.R, this.node = this.R.create(this, a), this.y = this.x = 0, 
        this.scale = 1;
    },
    attr: function(a) {
        return this.R.attr(this, a), this;
    },
    getAttr: function(a) {
        return this.node.getAttribute(a);
    },
    setAttr: function(a, b) {
        return this.R.setAttr(this, a, b), this;
    },
    clipRect: function(a, b, c, d) {
        this.R.clipRect(this, a, b, c, d);
    },
    translate: function(a, b, c, d) {
        d || (a = Math.round(a), b = Math.round(b)), this.R.move(this, a, b, c), this.x = a, 
        this.y = b, this.scale = c, this.angle && this.rotate(this.angle);
    },
    rotate: function(a, b) {
        this.R.rotate(this, a, b), this.angle = a;
    },
    animate: function(a, b, c) {
        for (var d in a) if (a.hasOwnProperty(d)) {
            var e = d, f = a[d];
            c = AmCharts.getEffect(c), this.R.animate(this, e, f, b, c);
        }
    },
    push: function(a) {
        if (a) {
            var b = this.node;
            b.appendChild(a.node);
            var c = a.clipPath;
            c && b.appendChild(c), (a = a.grad) && b.appendChild(a);
        }
    },
    text: function(a) {
        this.R.setText(this, a);
    },
    remove: function() {
        this.R.remove(this);
    },
    clear: function() {
        var a = this.node;
        if (a.hasChildNodes()) for (;1 <= a.childNodes.length; ) a.removeChild(a.firstChild);
    },
    hide: function() {
        this.setAttr("visibility", "hidden");
    },
    show: function() {
        this.setAttr("visibility", "visible");
    },
    getBBox: function() {
        return this.R.getBBox(this);
    },
    toFront: function() {
        var a = this.node;
        if (a) {
            this.prevNextNode = a.nextSibling;
            var b = a.parentNode;
            b && b.appendChild(a);
        }
    },
    toPrevious: function() {
        var a = this.node;
        a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null);
    },
    toBack: function() {
        var a = this.node;
        if (a) {
            this.prevNextNode = a.nextSibling;
            var b = a.parentNode;
            if (b) {
                var c = b.firstChild;
                c && b.insertBefore(a, c);
            }
        }
    },
    mouseover: function(a) {
        return this.R.addListener(this, "mouseover", a), this;
    },
    mouseout: function(a) {
        return this.R.addListener(this, "mouseout", a), this;
    },
    click: function(a) {
        return this.R.addListener(this, "click", a), this;
    },
    dblclick: function(a) {
        return this.R.addListener(this, "dblclick", a), this;
    },
    mousedown: function(a) {
        return this.R.addListener(this, "mousedown", a), this;
    },
    mouseup: function(a) {
        return this.R.addListener(this, "mouseup", a), this;
    },
    touchstart: function(a) {
        return this.R.addListener(this, "touchstart", a), this;
    },
    touchend: function(a) {
        return this.R.addListener(this, "touchend", a), this;
    },
    contextmenu: function(a) {
        return this.node.addEventListener ? this.node.addEventListener("contextmenu", a, !0) : this.R.addListener(this, "contextmenu", a), 
        this;
    },
    stop: function() {
        AmCharts.removeFromArray(this.R.animations, this.an_x), AmCharts.removeFromArray(this.R.animations, this.an_y);
    },
    length: function() {
        return this.node.childNodes.length;
    },
    gradient: function(a, b, c) {
        this.R.gradient(this, a, b, c);
    },
    pattern: function(a, b) {
        a && this.R.pattern(this, a, b);
    }
}), AmCharts.VMLRenderer = AmCharts.Class({
    construct: function(a, b) {
        this.chart = b, this.D = a, this.cNames = {
            circle: "oval",
            ellipse: "oval",
            rect: "roundrect",
            path: "shape"
        }, this.styleMap = {
            x: "left",
            y: "top",
            width: "width",
            height: "height",
            "font-family": "fontFamily",
            "font-size": "fontSize",
            visibility: "visibility"
        };
    },
    create: function(a, b) {
        var c;
        if ("group" == b) c = document.createElement("div"), a.type = "div"; else if ("text" == b) c = document.createElement("div"), 
        a.type = "text"; else if ("image" == b) c = document.createElement("img"), a.type = "image"; else {
            a.type = "shape", a.shapeType = this.cNames[b], c = document.createElement("amvml:" + this.cNames[b]);
            var d = document.createElement("amvml:stroke");
            c.appendChild(d), a.stroke = d;
            var e = document.createElement("amvml:fill");
            c.appendChild(e), a.fill = e, e.className = "amvml", d.className = "amvml", c.className = "amvml";
        }
        return c.style.position = "absolute", c.style.top = 0, c.style.left = 0, c;
    },
    path: function(a, b) {
        a.node.setAttribute("src", b);
    },
    setAttr: function(a, b, c) {
        if (void 0 !== c) {
            var d;
            8 === document.documentMode && (d = !0);
            var e = a.node, f = a.type, g = e.style;
            "r" == b && (g.width = 2 * c, g.height = 2 * c), "oval" == a.shapeType && ("rx" == b && (g.width = 2 * c), 
            "ry" == b && (g.height = 2 * c)), "roundrect" == a.shapeType && ("width" != b && "height" != b || --c), 
            "cursor" == b && (g.cursor = c), "cx" == b && (g.left = c - AmCharts.removePx(g.width) / 2), 
            "cy" == b && (g.top = c - AmCharts.removePx(g.height) / 2);
            var h = this.styleMap[b];
            if (void 0 !== h && (g[h] = c), "text" == f && ("text-anchor" == b && (a.anchor = c, 
            h = e.clientWidth, "end" == c && (g.marginLeft = -h + "px"), "middle" == c && (g.marginLeft = -(h / 2) + "px", 
            g.textAlign = "center"), "start" == c && (g.marginLeft = "0px")), "fill" == b && (g.color = c), 
            "font-weight" == b && (g.fontWeight = c)), g = a.children) for (h = 0; h < g.length; h++) g[h].setAttr(b, c);
            "shape" == f && ("cs" == b && (e.style.width = "100px", e.style.height = "100px", 
            e.setAttribute("coordsize", c)), "d" == b && e.setAttribute("path", this.svgPathToVml(c)), 
            "dd" == b && e.setAttribute("path", c), f = a.stroke, a = a.fill, "stroke" == b && (d ? f.color = c : f.setAttribute("color", c)), 
            "stroke-width" == b && (d ? f.weight = c : f.setAttribute("weight", c)), "stroke-opacity" == b && (d ? f.opacity = c : f.setAttribute("opacity", c)), 
            "stroke-dasharray" == b && (g = "solid", c > 0 && 3 > c && (g = "dot"), c >= 3 && 6 >= c && (g = "dash"), 
            c > 6 && (g = "longdash"), d ? f.dashstyle = g : f.setAttribute("dashstyle", g)), 
            ("fill-opacity" == b || "opacity" == b) && (0 === c ? d ? a.on = !1 : a.setAttribute("on", !1) : d ? a.opacity = c : a.setAttribute("opacity", c)), 
            "fill" == b && (d ? a.color = c : a.setAttribute("color", c)), "rx" == b && (d ? e.arcSize = c + "%" : e.setAttribute("arcsize", c + "%")));
        }
    },
    attr: function(a, b) {
        for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c]);
    },
    text: function(a, b, c) {
        var d = new AmCharts.AmDObject("text", this.D), e = d.node;
        return e.style.whiteSpace = "pre", e.innerHTML = a, this.D.addToContainer(e, c), 
        this.attr(d, b), d;
    },
    getBBox: function(a) {
        return this.getBox(a.node);
    },
    getBox: function(a) {
        var f, b = a.offsetLeft, c = a.offsetTop, d = a.offsetWidth, e = a.offsetHeight;
        if (a.hasChildNodes()) {
            var g, h, k;
            for (k = 0; k < a.childNodes.length; k++) {
                f = this.getBox(a.childNodes[k]);
                var l = f.x;
                isNaN(l) || (isNaN(g) ? g = l : g > l && (g = l));
                var m = f.y;
                isNaN(m) || (isNaN(h) ? h = m : h > m && (h = m)), l = f.width + l, isNaN(l) || (d = Math.max(d, l)), 
                f = f.height + m, isNaN(f) || (e = Math.max(e, f));
            }
            0 > g && (b += g), 0 > h && (c += h);
        }
        return {
            x: b,
            y: c,
            width: d,
            height: e
        };
    },
    setText: function(a, b) {
        var c = a.node;
        c && (c.innerHTML = b), this.setAttr(a, "text-anchor", a.anchor);
    },
    addListener: function(a, b, c) {
        a.node["on" + b] = c;
    },
    move: function(a, b, c) {
        var d = a.node, e = d.style;
        "text" == a.type && (c -= AmCharts.removePx(e.fontSize) / 2 - 1), "oval" == a.shapeType && (b -= AmCharts.removePx(e.width) / 2, 
        c -= AmCharts.removePx(e.height) / 2), a = a.bw, isNaN(a) || (b -= a, c -= a), isNaN(b) || isNaN(c) || (d.style.left = b + "px", 
        d.style.top = c + "px");
    },
    svgPathToVml: function(a) {
        var b = a.split(" ");
        a = "";
        var c, e, d = Math.round;
        for (e = 0; e < b.length; e++) {
            var f = b[e], g = f.substring(0, 1), f = f.substring(1), h = f.split(","), k = d(h[0]) + "," + d(h[1]);
            if ("M" == g && (a += " m " + k), "L" == g && (a += " l " + k), "Z" == g && (a += " x e"), 
            "Q" == g) {
                var l = c.length, m = c[l - 1], n = h[0], p = h[1], k = h[2], q = h[3];
                c = d(c[l - 2] / 3 + 2 / 3 * n), m = d(m / 3 + 2 / 3 * p), n = d(2 / 3 * n + k / 3), 
                p = d(2 / 3 * p + q / 3), a += " c " + c + "," + m + "," + n + "," + p + "," + k + "," + q;
            }
            "A" == g && (a += " wa " + f), "B" == g && (a += " at " + f), c = h;
        }
        return a;
    },
    animate: function(a, b, c, d, e) {
        var f = a.node, g = this.chart;
        if ("translate" == b) {
            b = c.split(","), c = b[1];
            var h = f.offsetTop;
            g.animate(a, "left", f.offsetLeft, b[0], d, e, "px"), g.animate(a, "top", h, c, d, e, "px");
        }
    },
    clipRect: function(a, b, c, d, e) {
        a = a.node, 0 === b && 0 === c ? (a.style.width = d + "px", a.style.height = e + "px", 
        a.style.overflow = "hidden") : a.style.clip = "rect(" + c + "px " + (b + d) + "px " + (c + e) + "px " + b + "px)";
    },
    rotate: function(a, b, c) {
        if (0 !== Number(b)) {
            var d = a.node;
            a = d.style, c || (c = this.getBGColor(d.parentNode)), a.backgroundColor = c, a.paddingLeft = 1, 
            c = b * Math.PI / 180;
            var e = Math.cos(c), f = Math.sin(c), g = AmCharts.removePx(a.left), h = AmCharts.removePx(a.top), k = d.offsetWidth, d = d.offsetHeight;
            b /= Math.abs(b), a.left = g + k / 2 - k / 2 * Math.cos(c) - b * d / 2 * Math.sin(c) + 3, 
            a.top = h - b * k / 2 * Math.sin(c) + b * d / 2 * Math.sin(c), a.cssText = a.cssText + "; filter:progid:DXImageTransform.Microsoft.Matrix(M11='" + e + "', M12='" + -f + "', M21='" + f + "', M22='" + e + "', sizingmethod='auto expand');";
        }
    },
    getBGColor: function(a) {
        var b = "#FFFFFF";
        if (a.style) {
            var c = a.style.backgroundColor;
            "" !== c ? b = c : a.parentNode && (b = this.getBGColor(a.parentNode));
        }
        return b;
    },
    set: function(a) {
        var b = new AmCharts.AmDObject("group", this.D);
        if (this.D.container.appendChild(b.node), a) {
            var c;
            for (c = 0; c < a.length; c++) b.push(a[c]);
        }
        return b;
    },
    gradient: function(a, b, c, d) {
        var e = "";
        "radialGradient" == b && (b = "gradientradial", c.reverse()), "linearGradient" == b && (b = "gradient");
        var f;
        for (f = 0; f < c.length; f++) {
            var g = Math.round(100 * f / (c.length - 1)), e = e + (g + "% " + c[f]);
            f < c.length - 1 && (e += ",");
        }
        a = a.fill, 90 == d ? d = 0 : 270 == d ? d = 180 : 180 == d ? d = 90 : 0 === d && (d = 270), 
        8 === document.documentMode ? (a.type = b, a.angle = d) : (a.setAttribute("type", b), 
        a.setAttribute("angle", d)), e && (a.colors.value = e);
    },
    remove: function(a) {
        a.clipPath && this.D.remove(a.clipPath), this.D.remove(a.node);
    },
    disableSelection: function(a) {
        void 0 !== typeof a.onselectstart && (a.onselectstart = function() {
            return !1;
        }), a.style.cursor = "default";
    },
    pattern: function(a, b) {
        var c = a.node, d = a.fill, e = "none";
        b.color && (e = b.color), c.fillColor = e, 8 === document.documentMode ? (d.type = "tile", 
        d.src = b.url) : (d.setAttribute("type", "tile"), d.setAttribute("src", b.url));
    },
    update: function() {}
}), AmCharts.SVGRenderer = AmCharts.Class({
    construct: function(a) {
        this.D = a, this.animations = [];
    },
    create: function(a, b) {
        return document.createElementNS(AmCharts.SVG_NS, b);
    },
    attr: function(a, b) {
        for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c]);
    },
    setAttr: function(a, b, c) {
        void 0 !== c && a.node.setAttribute(b, c);
    },
    animate: function(a, b, c, d, e) {
        var f = a.node;
        a["an_" + b] && AmCharts.removeFromArray(this.animations, a["an_" + b]), "translate" == b ? (f = (f = f.getAttribute("transform")) ? String(f).substring(10, f.length - 1) : "0,0", 
        f = f.split(", ").join(" "), f = f.split(" ").join(","), 0 === f && (f = "0,0")) : f = Number(f.getAttribute(b)), 
        c = {
            obj: a,
            frame: 0,
            attribute: b,
            from: f,
            to: c,
            time: d,
            effect: e
        }, this.animations.push(c), a["an_" + b] = c;
    },
    update: function() {
        var a, b = this.animations;
        for (a = b.length - 1; a >= 0; a--) {
            var h, k, l, c = b[a], d = 1e3 * c.time / AmCharts.updateRate, e = c.frame + 1, f = c.obj, g = c.attribute;
            d >= e ? (c.frame++, "translate" == g ? (h = c.from.split(","), g = Number(h[0]), 
            h = Number(h[1]), isNaN(h) && (h = 0), k = c.to.split(","), l = Number(k[0]), k = Number(k[1]), 
            l = 0 === l - g ? l : Math.round(AmCharts[c.effect](0, e, g, l - g, d)), c = 0 === k - h ? k : Math.round(AmCharts[c.effect](0, e, h, k - h, d)), 
            g = "transform", c = "translate(" + l + "," + c + ")") : (k = Number(c.from), h = Number(c.to), 
            l = h - k, c = AmCharts[c.effect](0, e, k, l, d), isNaN(c) && (c = h), 0 === l && this.animations.splice(a, 1)), 
            this.setAttr(f, g, c)) : ("translate" == g ? (k = c.to.split(","), l = Number(k[0]), 
            k = Number(k[1]), f.translate(l, k)) : (h = Number(c.to), this.setAttr(f, g, h)), 
            this.animations.splice(a, 1));
        }
    },
    getBBox: function(a) {
        if (a = a.node) try {
            return a.getBBox();
        } catch (b) {}
        return {
            width: 0,
            height: 0,
            x: 0,
            y: 0
        };
    },
    path: function(a, b) {
        a.node.setAttributeNS(AmCharts.SVG_XLINK, "xlink:href", b);
    },
    clipRect: function(a, b, c, d, e) {
        var f = a.node, g = a.clipPath;
        g && this.D.remove(g);
        var h = f.parentNode;
        h && (f = document.createElementNS(AmCharts.SVG_NS, "clipPath"), g = AmCharts.getUniqueId(), 
        f.setAttribute("id", g), this.D.rect(b, c, d, e, 0, 0, f), h.appendChild(f), b = "#", 
        AmCharts.baseHref && !AmCharts.isIE && (b = this.removeTarget(window.location.href) + b), 
        this.setAttr(a, "clip-path", "url(" + b + g + ")"), this.clipPathC++, a.clipPath = f);
    },
    text: function(a, b, c) {
        var d = new AmCharts.AmDObject("text", this.D);
        a = String(a).split("\n");
        var f, e = b["font-size"];
        for (f = 0; f < a.length; f++) {
            var g = this.create(null, "tspan");
            g.appendChild(document.createTextNode(a[f])), g.setAttribute("y", (e + 2) * f + Math.round(e / 2)), 
            g.setAttribute("x", 0), g.style.fontSize = e + "px", d.node.appendChild(g);
        }
        return d.node.setAttribute("y", Math.round(e / 2)), this.attr(d, b), this.D.addToContainer(d.node, c), 
        d;
    },
    setText: function(a, b) {
        var c = a.node;
        c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)));
    },
    move: function(a, b, c, d) {
        isNaN(b) && (b = 0), isNaN(c) && (c = 0), b = "translate(" + b + "," + c + ")", 
        d && (b = b + " scale(" + d + ")"), this.setAttr(a, "transform", b);
    },
    rotate: function(a, b) {
        var c = a.node.getAttribute("transform"), d = "rotate(" + b + ")";
        c && (d = c + " " + d), this.setAttr(a, "transform", d);
    },
    set: function(a) {
        var b = new AmCharts.AmDObject("g", this.D);
        if (this.D.container.appendChild(b.node), a) {
            var c;
            for (c = 0; c < a.length; c++) b.push(a[c]);
        }
        return b;
    },
    addListener: function(a, b, c) {
        a.node["on" + b] = c;
    },
    gradient: function(a, b, c, d) {
        var e = a.node, f = a.grad;
        if (f && this.D.remove(f), b = document.createElementNS(AmCharts.SVG_NS, b), f = AmCharts.getUniqueId(), 
        b.setAttribute("id", f), !isNaN(d)) {
            var g = 0, h = 0, k = 0, l = 0;
            90 == d ? k = 100 : 270 == d ? l = 100 : 180 == d ? g = 100 : 0 === d && (h = 100), 
            b.setAttribute("x1", g + "%"), b.setAttribute("x2", h + "%"), b.setAttribute("y1", k + "%"), 
            b.setAttribute("y2", l + "%");
        }
        for (d = 0; d < c.length; d++) g = document.createElementNS(AmCharts.SVG_NS, "stop"), 
        h = 100 * d / (c.length - 1), 0 === d && (h = 0), g.setAttribute("offset", h + "%"), 
        g.setAttribute("stop-color", c[d]), b.appendChild(g);
        e.parentNode.appendChild(b), c = "#", AmCharts.baseHref && !AmCharts.isIE && (c = this.removeTarget(window.location.href) + c), 
        e.setAttribute("fill", "url(" + c + f + ")"), a.grad = b;
    },
    removeTarget: function(a) {
        return urlArr = a.split("#"), urlArr[0];
    },
    pattern: function(a, b, c) {
        var d = a.node;
        isNaN(c) && (c = 1);
        var e = a.patternNode;
        e && this.D.remove(e);
        var e = document.createElementNS(AmCharts.SVG_NS, "pattern"), f = AmCharts.getUniqueId(), g = b;
        b.url && (g = b.url);
        var h = Number(b.width);
        isNaN(h) && (h = 4);
        var k = Number(b.height);
        isNaN(k) && (k = 4), h /= c, k /= c, c = b.x, isNaN(c) && (c = 0);
        var l = -Math.random() * Number(b.randomX);
        isNaN(l) || (c = l), l = b.y, isNaN(l) && (l = 0);
        var m = -Math.random() * Number(b.randomY);
        isNaN(m) || (l = m), e.setAttribute("id", f), e.setAttribute("width", h), e.setAttribute("height", k), 
        e.setAttribute("patternUnits", "userSpaceOnUse"), e.setAttribute("xlink:href", g), 
        b.color && (m = document.createElementNS(AmCharts.SVG_NS, "rect"), m.setAttributeNS(null, "height", h), 
        m.setAttributeNS(null, "width", k), m.setAttributeNS(null, "fill", b.color), e.appendChild(m)), 
        this.D.image(g, 0, 0, h, k, e).translate(c, l), g = "#", AmCharts.baseHref && !AmCharts.isIE && (g = this.removeTarget(window.location.href) + g), 
        d.setAttribute("fill", "url(" + g + f + ")"), a.patternNode = e, d.parentNode.appendChild(e);
    },
    remove: function(a) {
        a.clipPath && this.D.remove(a.clipPath), a.grad && this.D.remove(a.grad), a.patternNode && this.D.remove(a.patternNode), 
        this.D.remove(a.node);
    }
}), AmCharts.AmDSet = AmCharts.Class({
    construct: function() {
        this.create("g");
    },
    attr: function(a) {
        this.R.attr(this.node, a);
    },
    move: function(a, b) {
        this.R.move(this.node, a, b);
    }
}), AmCharts.AmLegend = AmCharts.Class({
    construct: function(a) {
        this.cname = "AmLegend", this.createEvents("rollOverMarker", "rollOverItem", "rollOutMarker", "rollOutItem", "showItem", "hideItem", "clickMarker", "rollOverItem", "rollOutItem", "clickLabel"), 
        this.position = "bottom", this.borderColor = this.color = "#000000", this.borderAlpha = 0, 
        this.markerLabelGap = 5, this.verticalGap = 10, this.align = "left", this.horizontalGap = 0, 
        this.spacing = 10, this.markerDisabledColor = "#AAB3B3", this.markerType = "square", 
        this.markerSize = 16, this.markerBorderThickness = this.markerBorderAlpha = 1, this.marginBottom = this.marginTop = 0, 
        this.marginLeft = this.marginRight = 20, this.autoMargins = !0, this.valueWidth = 50, 
        this.switchable = !0, this.switchType = "x", this.switchColor = "#FFFFFF", this.rollOverColor = "#CC0000", 
        this.reversedOrder = !1, this.labelText = "[[title]]", this.valueText = "[[value]]", 
        this.useMarkerColorForLabels = !1, this.rollOverGraphAlpha = 1, this.textClickEnabled = !1, 
        this.equalWidths = !0, this.dateFormat = "DD-MM-YYYY", this.backgroundColor = "#FFFFFF", 
        this.backgroundAlpha = 0, this.useGraphSettings = !1, this.showEntries = !0, AmCharts.applyTheme(this, a, this.cname);
    },
    setData: function(a) {
        this.legendData = a, this.invalidateSize();
    },
    invalidateSize: function() {
        this.destroy(), this.entries = [], this.valueLabels = [], (AmCharts.ifArray(this.legendData) || AmCharts.ifArray(this.data)) && this.drawLegend();
    },
    drawLegend: function() {
        var a = this.chart, b = this.position, c = this.width, d = a.divRealWidth, e = a.divRealHeight, f = this.div, g = this.legendData;
        if (this.data && (g = this.data), isNaN(this.fontSize) && (this.fontSize = a.fontSize), 
        "right" == b || "left" == b) this.maxColumns = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10); else if (this.autoMargins) {
            this.marginRight = a.marginRight, this.marginLeft = a.marginLeft;
            var h = a.autoMarginOffset;
            "bottom" == b ? (this.marginBottom = h, this.marginTop = 0) : (this.marginTop = h, 
            this.marginBottom = 0);
        }
        var k;
        if (void 0 !== c ? k = AmCharts.toCoordinate(c, d) : "right" != b && "left" != b && (k = a.realWidth), 
        "outside" == b ? (k = f.offsetWidth, e = f.offsetHeight, f.clientHeight && (k = f.clientWidth, 
        e = f.clientHeight)) : (isNaN(k) || (f.style.width = k + "px"), f.className = "amChartsLegend"), 
        this.divWidth = k, (b = this.container) ? (b.container.innerHTML = "", f.appendChild(b.container), 
        b.setSize(k, e)) : b = new AmCharts.AmDraw(f, k, e, a), this.container = b, this.lx = 0, 
        this.ly = 8, e = this.markerSize, e > this.fontSize && (this.ly = e / 2 - 1), e > 0 && (this.lx += e + this.markerLabelGap), 
        this.titleWidth = 0, (e = this.title) && (a = AmCharts.text(this.container, e, this.color, a.fontFamily, this.fontSize, "start", !0), 
        a.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = a.getBBox(), 
        this.titleWidth = a.width + 15, this.titleHeight = a.height + 6), this.index = this.maxLabelWidth = 0, 
        this.showEntries) {
            for (a = 0; a < g.length; a++) this.createEntry(g[a]);
            for (a = this.index = 0; a < g.length; a++) this.createValue(g[a]);
        }
        this.arrangeEntries(), this.updateValues();
    },
    arrangeEntries: function() {
        var a = this.position, b = this.marginLeft + this.titleWidth, c = this.marginRight, d = this.marginTop, e = this.marginBottom, f = this.horizontalGap, g = this.div, h = this.divWidth, k = this.maxColumns, l = this.verticalGap, m = this.spacing, n = h - c - b, p = 0, q = 0, r = this.container;
        this.set && this.set.remove();
        var t = r.set();
        this.set = t;
        var w = r.set();
        t.push(w);
        var s, u, v = this.entries;
        for (u = 0; u < v.length; u++) {
            s = v[u].getBBox();
            var x = s.width;
            x > p && (p = x), s = s.height, s > q && (q = s);
        }
        var x = q = 0, F = f, B = 0, z = 0;
        for (u = 0; u < v.length; u++) {
            var I = v[u];
            this.reversedOrder && (I = v[v.length - u - 1]), s = I.getBBox();
            var E;
            this.equalWidths ? E = f + x * (p + m + this.markerLabelGap) : (E = F, F = F + s.width + f + m), 
            s.height > z && (z = s.height), E + s.width > n && u > 0 && 0 !== x && (q++, x = 0, 
            E = f, F = E + s.width + f + m, B = B + z + l, z = 0), I.translate(E, B), x++, !isNaN(k) && x >= k && (x = 0, 
            q++, B = B + z + l, z = 0), w.push(I);
        }
        s = w.getBBox(), k = s.height + 2 * l - 1, "left" == a || "right" == a ? (h = s.width + 2 * f, 
        g.style.width = h + b + c + "px") : h = h - b - c - 1, c = AmCharts.polygon(this.container, [ 0, h, h, 0 ], [ 0, 0, k, k ], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha), 
        t.push(c), t.translate(b, d), c.toBack(), b = f, ("top" == a || "bottom" == a || "absolute" == a || "outside" == a) && ("center" == this.align ? b = f + (h - s.width) / 2 : "right" == this.align && (b = f + h - s.width)), 
        w.translate(b, l + 1), this.titleHeight > k && (k = this.titleHeight), a = k + d + e + 1, 
        0 > a && (a = 0), g.style.height = Math.round(a) + "px", r.setSize(this.divWidth, a);
    },
    createEntry: function(a) {
        if (!1 !== a.visibleInLegend) {
            var b = this.chart, c = a.markerType;
            a.legendEntryWidth = this.markerSize, c || (c = this.markerType);
            var d = a.color, e = a.alpha;
            a.legendKeyColor && (d = a.legendKeyColor()), a.legendKeyAlpha && (e = a.legendKeyAlpha());
            var f;
            !0 === a.hidden && (f = d = this.markerDisabledColor);
            var g = a.pattern, h = a.customMarker;
            h || (h = this.customMarker);
            var k = this.container, l = this.markerSize, m = 0, n = 0, p = l / 2;
            if (this.useGraphSettings) if (m = a.type, this.switchType = void 0, "line" == m || "step" == m || "smoothedLine" == m || "ohlc" == m) g = k.set(), 
            a.hidden || (d = a.lineColorR, f = a.bulletBorderColorR), n = AmCharts.line(k, [ 0, 2 * l ], [ l / 2, l / 2 ], d, a.lineAlpha, a.lineThickness, a.dashLength), 
            g.push(n), a.bullet && (a.hidden || (d = a.bulletColorR), n = AmCharts.bullet(k, a.bullet, a.bulletSize, d, a.bulletAlpha, a.bulletBorderThickness, f, a.bulletBorderAlpha)) && (n.translate(l + 1, l / 2), 
            g.push(n)), p = 0, m = l, n = l / 3; else {
                var q;
                a.getGradRotation && (q = a.getGradRotation()), m = a.fillColorsR, !0 === a.hidden && (m = d), 
                (g = this.createMarker("rectangle", m, a.fillAlphas, a.lineThickness, d, a.lineAlpha, q, g)) && (p = l, 
                g.translate(p, l / 2)), m = l;
            } else h ? (b.path && (h = b.path + h), g = k.image(h, 0, 0, l, l)) : (g = this.createMarker(c, d, e, void 0, void 0, void 0, void 0, g)) && g.translate(l / 2, l / 2);
            this.addListeners(g, a), k = k.set([ g ]), this.switchable && a.switchable && k.setAttr("cursor", "pointer"), 
            (f = this.switchType) && "none" != f && ("x" == f ? (q = this.createX(), q.translate(l / 2, l / 2)) : q = this.createV(), 
            q.dItem = a, !0 !== a.hidden ? "x" == f ? q.hide() : q.show() : "x" != f && q.hide(), 
            this.switchable || q.hide(), this.addListeners(q, a), a.legendSwitch = q, k.push(q)), 
            f = this.color, a.showBalloon && this.textClickEnabled && void 0 !== this.selectedColor && (f = this.selectedColor), 
            this.useMarkerColorForLabels && (f = d), !0 === a.hidden && (f = this.markerDisabledColor), 
            d = AmCharts.massReplace(this.labelText, {
                "[[title]]": a.title
            }), q = this.fontSize, g && (q >= l && g.translate(p, l / 2 + this.ly - q / 2 + (q + 2 - l) / 2 - n), 
            a.legendEntryWidth = g.getBBox().width);
            var r;
            d && (d = AmCharts.fixBrakes(d), a.legendTextReal = d, r = this.labelWidth, r = isNaN(r) ? AmCharts.text(this.container, d, f, b.fontFamily, q, "start") : AmCharts.wrappedText(this.container, d, f, b.fontFamily, q, "start", !1, r, 0), 
            r.translate(this.lx + m, this.ly), k.push(r), b = r.getBBox().width, this.maxLabelWidth < b && (this.maxLabelWidth = b)), 
            this.entries[this.index] = k, a.legendEntry = this.entries[this.index], a.legendLabel = r, 
            this.index++;
        }
    },
    addListeners: function(a, b) {
        var c = this;
        a && a.mouseover(function(a) {
            c.rollOverMarker(b, a);
        }).mouseout(function(a) {
            c.rollOutMarker(b, a);
        }).click(function(a) {
            c.clickMarker(b, a);
        });
    },
    rollOverMarker: function(a, b) {
        this.switchable && this.dispatch("rollOverMarker", a, b), this.dispatch("rollOverItem", a, b);
    },
    rollOutMarker: function(a, b) {
        this.switchable && this.dispatch("rollOutMarker", a, b), this.dispatch("rollOutItem", a, b);
    },
    clickMarker: function(a, b) {
        this.switchable && (!0 === a.hidden ? this.dispatch("showItem", a, b) : this.dispatch("hideItem", a, b)), 
        this.dispatch("clickMarker", a, b);
    },
    rollOverLabel: function(a, b) {
        a.hidden || (this.textClickEnabled && a.legendLabel && a.legendLabel.attr({
            fill: this.rollOverColor
        }), this.dispatch("rollOverItem", a, b));
    },
    rollOutLabel: function(a, b) {
        if (!a.hidden) {
            if (this.textClickEnabled && a.legendLabel) {
                var c = this.color;
                void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor), this.useMarkerColorForLabels && (c = a.lineColor, 
                void 0 === c && (c = a.color)), a.legendLabel.attr({
                    fill: c
                });
            }
            this.dispatch("rollOutItem", a, b);
        }
    },
    clickLabel: function(a, b) {
        this.textClickEnabled ? a.hidden || this.dispatch("clickLabel", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch("showItem", a, b) : this.dispatch("hideItem", a, b));
    },
    dispatch: function(a, b, c) {
        this.fire(a, {
            type: a,
            dataItem: b,
            target: this,
            event: c,
            chart: this.chart
        });
    },
    createValue: function(a) {
        var b = this, c = b.fontSize;
        if (!1 !== a.visibleInLegend) {
            var d = b.maxLabelWidth;
            b.equalWidths || (b.valueAlign = "left"), "left" == b.valueAlign && (d = a.legendEntry.getBBox().width);
            var e = d;
            if (b.valueText && 0 < b.valueWidth) {
                var f = b.color;
                b.useMarkerColorForValues && (f = a.color, a.legendKeyColor && (f = a.legendKeyColor())), 
                !0 === a.hidden && (f = b.markerDisabledColor);
                var g = b.valueText, d = d + b.lx + b.markerLabelGap + b.valueWidth, h = "end";
                "left" == b.valueAlign && (d -= b.valueWidth, h = "start"), f = AmCharts.text(b.container, g, f, b.chart.fontFamily, c, h), 
                f.translate(d, b.ly), b.entries[b.index].push(f), e += b.valueWidth + 2 * b.markerLabelGap, 
                f.dItem = a, b.valueLabels.push(f);
            }
            b.index++, f = b.markerSize, c + 7 > f && (f = c + 7, AmCharts.VML && (f += 3)), 
            c = b.container.rect(a.legendEntryWidth, 0, e, f, 0, 0).attr({
                stroke: "none",
                fill: "#fff",
                "fill-opacity": .005
            }), c.dItem = a, b.entries[b.index - 1].push(c), c.mouseover(function(c) {
                b.rollOverLabel(a, c);
            }).mouseout(function(c) {
                b.rollOutLabel(a, c);
            }).click(function(c) {
                b.clickLabel(a, c);
            });
        }
    },
    createV: function() {
        var a = this.markerSize;
        return AmCharts.polygon(this.container, [ a / 5, a / 2, a - a / 5, a / 2 ], [ a / 3, a - a / 5, a / 5, a / 1.7 ], this.switchColor);
    },
    createX: function() {
        var a = (this.markerSize - 4) / 2, b = {
            stroke: this.switchColor,
            "stroke-width": 3
        }, c = this.container, d = AmCharts.line(c, [ -a, a ], [ -a, a ]).attr(b), a = AmCharts.line(c, [ -a, a ], [ a, -a ]).attr(b);
        return this.container.set([ d, a ]);
    },
    createMarker: function(a, b, c, d, e, f, g, h) {
        var k = this.markerSize, l = this.container;
        return e || (e = this.markerBorderColor), e || (e = b), isNaN(d) && (d = this.markerBorderThickness), 
        isNaN(f) && (f = this.markerBorderAlpha), AmCharts.bullet(l, a, k, b, c, d, e, f, k, g, h);
    },
    validateNow: function() {
        this.invalidateSize();
    },
    updateValues: function() {
        var c, a = this.valueLabels, b = this.chart, d = this.data;
        for (c = 0; c < a.length; c++) {
            var e = a[c], f = e.dItem, g = " ";
            if (d) e.text(f.value ? f.value : ""); else {
                if (void 0 !== f.type) {
                    var h = f.currentDataItem, k = this.periodValueText;
                    f.legendPeriodValueText && (k = f.legendPeriodValueText), h ? (g = this.valueText, 
                    f.legendValueText && (g = f.legendValueText), g = b.formatString(g, h)) : k && (g = b.formatPeriodString(k, f));
                } else g = b.formatString(this.valueText, f);
                (k = this.valueFunction) && (h && (f = h), g = k(f, g)), e.text(g);
            }
        }
    },
    renderFix: function() {
        if (!AmCharts.VML) {
            var a = this.container;
            a && a.renderFix();
        }
    },
    destroy: function() {
        this.div.innerHTML = "", AmCharts.remove(this.set);
    }
}), AmCharts.formatMilliseconds = function(a, b) {
    if (-1 != a.indexOf("fff")) {
        var c = b.getMilliseconds(), d = String(c);
        10 > c && (d = "00" + c), c >= 10 && 100 > c && (d = "0" + c), a = a.replace(/fff/g, d);
    }
    return a;
}, AmCharts.extractPeriod = function(a) {
    var b = AmCharts.stripNumbers(a), c = 1;
    return b != a && (c = Number(a.slice(0, a.indexOf(b)))), {
        period: b,
        count: c
    };
}, AmCharts.newDate = function(a, b) {
    return date = "fff" == b ? AmCharts.useUTC ? new Date(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate(), a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds(), a.getUTCMilliseconds()) : new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()) : new Date(a);
}, AmCharts.resetDateToMin = function(a, b, c, d) {
    void 0 === d && (d = 1);
    var e, f, g, h, k, l, m;
    switch (AmCharts.useUTC ? (e = a.getUTCFullYear(), f = a.getUTCMonth(), g = a.getUTCDate(), 
    h = a.getUTCHours(), k = a.getUTCMinutes(), l = a.getUTCSeconds(), m = a.getUTCMilliseconds(), 
    a = a.getUTCDay()) : (e = a.getFullYear(), f = a.getMonth(), g = a.getDate(), h = a.getHours(), 
    k = a.getMinutes(), l = a.getSeconds(), m = a.getMilliseconds(), a = a.getDay()), 
    b) {
      case "YYYY":
        e = Math.floor(e / c) * c, f = 0, g = 1, m = l = k = h = 0;
        break;

      case "MM":
        f = Math.floor(f / c) * c, g = 1, m = l = k = h = 0;
        break;

      case "WW":
        0 === a && d > 0 && (a = 7), g = g - a + d, m = l = k = h = 0;
        break;

      case "DD":
        m = l = k = h = 0;
        break;

      case "hh":
        h = Math.floor(h / c) * c, m = l = k = 0;
        break;

      case "mm":
        k = Math.floor(k / c) * c, m = l = 0;
        break;

      case "ss":
        l = Math.floor(l / c) * c, m = 0;
        break;

      case "fff":
        m = Math.floor(m / c) * c;
    }
    return AmCharts.useUTC ? (a = new Date(), a.setUTCFullYear(e, f, g), a.setUTCHours(h, k, l, m)) : a = new Date(e, f, g, h, k, l, m), 
    a;
}, AmCharts.getPeriodDuration = function(a, b) {
    void 0 === b && (b = 1);
    var c;
    switch (a) {
      case "YYYY":
        c = 316224e5;
        break;

      case "MM":
        c = 26784e5;
        break;

      case "WW":
        c = 6048e5;
        break;

      case "DD":
        c = 864e5;
        break;

      case "hh":
        c = 36e5;
        break;

      case "mm":
        c = 6e4;
        break;

      case "ss":
        c = 1e3;
        break;

      case "fff":
        c = 1;
    }
    return c * b;
}, AmCharts.intervals = {
    s: {
        nextInterval: "ss",
        contains: 1e3
    },
    ss: {
        nextInterval: "mm",
        contains: 60,
        count: 0
    },
    mm: {
        nextInterval: "hh",
        contains: 60,
        count: 1
    },
    hh: {
        nextInterval: "DD",
        contains: 24,
        count: 2
    },
    DD: {
        nextInterval: "",
        contains: 1/0,
        count: 3
    }
}, AmCharts.getMaxInterval = function(a, b) {
    var c = AmCharts.intervals;
    return a >= c[b].contains ? (a = Math.round(a / c[b].contains), b = c[b].nextInterval, 
    AmCharts.getMaxInterval(a, b)) : "ss" == b ? c[b].nextInterval : b;
}, AmCharts.dayNames = "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), 
AmCharts.shortDayNames = "Sun Mon Tue Wed Thu Fri Sat".split(" "), AmCharts.monthNames = "January February March April May June July August September October November December".split(" "), 
AmCharts.shortMonthNames = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), 
AmCharts.getWeekNumber = function(a) {
    a = new Date(a), a.setHours(0, 0, 0), a.setDate(a.getDate() + 4 - (a.getDay() || 7));
    var b = new Date(a.getFullYear(), 0, 1);
    return Math.ceil(((a - b) / 864e5 + 1) / 7);
}, AmCharts.stringToDate = function(a, b) {
    var c = {}, d = [ {
        pattern: "YYYY",
        period: "year"
    }, {
        pattern: "YY",
        period: "year"
    }, {
        pattern: "MM",
        period: "month"
    }, {
        pattern: "M",
        period: "month"
    }, {
        pattern: "DD",
        period: "date"
    }, {
        pattern: "D",
        period: "date"
    }, {
        pattern: "JJ",
        period: "hours"
    }, {
        pattern: "J",
        period: "hours"
    }, {
        pattern: "HH",
        period: "hours"
    }, {
        pattern: "H",
        period: "hours"
    }, {
        pattern: "KK",
        period: "hours"
    }, {
        pattern: "K",
        period: "hours"
    }, {
        pattern: "LL",
        period: "hours"
    }, {
        pattern: "L",
        period: "hours"
    }, {
        pattern: "NN",
        period: "minutes"
    }, {
        pattern: "N",
        period: "minutes"
    }, {
        pattern: "SS",
        period: "seconds"
    }, {
        pattern: "S",
        period: "seconds"
    }, {
        pattern: "QQQ",
        period: "milliseconds"
    }, {
        pattern: "QQ",
        period: "milliseconds"
    }, {
        pattern: "Q",
        period: "milliseconds"
    } ], e = !0, f = b.indexOf("AA");
    -1 != f && (a.substr(f, 2), "pm" == a.toLowerCase && (e = !1));
    var g, h, k, f = b;
    for (k = 0; k < d.length; k++) h = d[k].period, c[h] = 0, "date" == h && (c[h] = 1);
    for (k = 0; k < d.length; k++) if (g = d[k].pattern, h = d[k].period, -1 != b.indexOf(g)) {
        var l = AmCharts.getFromDateString(g, a, f);
        b = b.replace(g, ""), ("KK" == g || "K" == g || "LL" == g || "L" == g) && (e || (l += 12)), 
        c[h] = l;
    }
    return AmCharts.useUTC ? (d = new Date(), d.setUTCFullYear(c.year, c.month, c.date), 
    d.setUTCHours(c.hours, c.minutes, c.seconds, c.milliseconds)) : d = new Date(c.year, c.month, c.date, c.hours, c.minutes, c.seconds, c.milliseconds), 
    d;
}, AmCharts.getFromDateString = function(a, b, c) {
    return void 0 !== b ? (c = c.indexOf(a), b = b.substr(c, a.length), "0" == b.charAt(0) && (b = b.substr(1, b.length - 1)), 
    b = Number(b), isNaN(b) && (b = 0), -1 != a.indexOf("M") && b--, b) : void 0;
}, AmCharts.formatDate = function(a, b, c) {
    c || (c = AmCharts);
    var d, e, f, g, h, k, l, m = AmCharts.getWeekNumber(a);
    AmCharts.useUTC ? (d = a.getUTCFullYear(), e = a.getUTCMonth(), f = a.getUTCDate(), 
    g = a.getUTCDay(), h = a.getUTCHours(), k = a.getUTCMinutes(), l = a.getUTCSeconds(), 
    a = a.getUTCMilliseconds()) : (d = a.getFullYear(), e = a.getMonth(), f = a.getDate(), 
    g = a.getDay(), h = a.getHours(), k = a.getMinutes(), l = a.getSeconds(), a = a.getMilliseconds());
    var n = String(d).substr(2, 2), p = e + 1;
    9 > e && (p = "0" + p);
    var q = "0" + g;
    b = b.replace(/W/g, m), m = h, 24 == m && (m = 0);
    var r = m;
    10 > r && (r = "0" + r), b = b.replace(/JJ/g, r), b = b.replace(/J/g, m), r = h, 
    0 === r && (r = 24, -1 != b.indexOf("H") && f--), m = f, 10 > f && (m = "0" + f);
    var t = r;
    return 10 > t && (t = "0" + t), b = b.replace(/HH/g, t), b = b.replace(/H/g, r), 
    r = h, r > 11 && (r -= 12), t = r, 10 > t && (t = "0" + t), b = b.replace(/KK/g, t), 
    b = b.replace(/K/g, r), r = h, 0 === r && (r = 12), r > 12 && (r -= 12), t = r, 
    10 > t && (t = "0" + t), b = b.replace(/LL/g, t), b = b.replace(/L/g, r), r = k, 
    10 > r && (r = "0" + r), b = b.replace(/NN/g, r), b = b.replace(/N/g, k), k = l, 
    10 > k && (k = "0" + k), b = b.replace(/SS/g, k), b = b.replace(/S/g, l), l = a, 
    10 > l && (l = "00" + l), 100 > l && (l = "0" + l), k = a, 10 > k && (k = "00" + k), 
    b = b.replace(/QQQ/g, l), b = b.replace(/QQ/g, k), b = b.replace(/Q/g, a), b = 12 > h ? b.replace(/A/g, "am") : b.replace(/A/g, "pm"), 
    b = b.replace(/YYYY/g, "@IIII@"), b = b.replace(/YY/g, "@II@"), b = b.replace(/MMMM/g, "@XXXX@"), 
    b = b.replace(/MMM/g, "@XXX@"), b = b.replace(/MM/g, "@XX@"), b = b.replace(/M/g, "@X@"), 
    b = b.replace(/DD/g, "@RR@"), b = b.replace(/D/g, "@R@"), b = b.replace(/EEEE/g, "@PPPP@"), 
    b = b.replace(/EEE/g, "@PPP@"), b = b.replace(/EE/g, "@PP@"), b = b.replace(/E/g, "@P@"), 
    b = b.replace(/@IIII@/g, d), b = b.replace(/@II@/g, n), b = b.replace(/@XXXX@/g, c.monthNames[e]), 
    b = b.replace(/@XXX@/g, c.shortMonthNames[e]), b = b.replace(/@XX@/g, p), b = b.replace(/@X@/g, e + 1), 
    b = b.replace(/@RR@/g, m), b = b.replace(/@R@/g, f), b = b.replace(/@PPPP@/g, c.dayNames[g]), 
    b = b.replace(/@PPP@/g, c.shortDayNames[g]), b = b.replace(/@PP@/g, q), b = b.replace(/@P@/g, g);
}, AmCharts.changeDate = function(a, b, c, d, e) {
    if (AmCharts.useUTC) return AmCharts.changeUTCDate(a, b, c, d, e);
    var f = -1;
    switch (void 0 === d && (d = !0), void 0 === e && (e = !1), !0 === d && (f = 1), 
    b) {
      case "YYYY":
        a.setFullYear(a.getFullYear() + c * f), d || e || a.setDate(a.getDate() + 1);
        break;

      case "MM":
        b = a.getMonth(), a.setMonth(a.getMonth() + c * f), a.getMonth() > b + c * f && a.setDate(a.getDate() - 1), 
        d || e || a.setDate(a.getDate() + 1);
        break;

      case "DD":
        a.setDate(a.getDate() + c * f);
        break;

      case "WW":
        a.setDate(a.getDate() + c * f * 7);
        break;

      case "hh":
        a.setHours(a.getHours() + c * f);
        break;

      case "mm":
        a.setMinutes(a.getMinutes() + c * f);
        break;

      case "ss":
        a.setSeconds(a.getSeconds() + c * f);
        break;

      case "fff":
        a.setMilliseconds(a.getMilliseconds() + c * f);
    }
    return a;
}, AmCharts.changeUTCDate = function(a, b, c, d, e) {
    var f = -1;
    switch (void 0 === d && (d = !0), void 0 === e && (e = !1), !0 === d && (f = 1), 
    b) {
      case "YYYY":
        a.setUTCFullYear(a.getUTCFullYear() + c * f), d || e || a.setUTCDate(a.getUTCDate() + 1);
        break;

      case "MM":
        b = a.getUTCMonth(), a.setUTCMonth(a.getUTCMonth() + c * f), a.getUTCMonth() > b + c * f && a.setUTCDate(a.getUTCDate() - 1), 
        d || e || a.setUTCDate(a.getUTCDate() + 1);
        break;

      case "DD":
        a.setUTCDate(a.getUTCDate() + c * f);
        break;

      case "WW":
        a.setUTCDate(a.getUTCDate() + c * f * 7);
        break;

      case "hh":
        a.setUTCHours(a.getUTCHours() + c * f);
        break;

      case "mm":
        a.setUTCMinutes(a.getUTCMinutes() + c * f);
        break;

      case "ss":
        a.setUTCSeconds(a.getUTCSeconds() + c * f);
        break;

      case "fff":
        a.setUTCMilliseconds(a.getUTCMilliseconds() + c * f);
    }
    return a;
}, AmCharts.AmSerialChart = AmCharts.Class({
    inherits: AmCharts.AmRectangularChart,
    construct: function(a) {
        this.type = "serial", AmCharts.AmSerialChart.base.construct.call(this, a), this.cname = "AmSerialChart", 
        this.theme = a, this.createEvents("changed"), this.columnSpacing = 5, this.columnSpacing3D = 0, 
        this.columnWidth = .8, this.updateScrollbar = !0;
        var b = new AmCharts.CategoryAxis(a);
        b.chart = this, this.categoryAxis = b, this.zoomOutOnDataUpdate = !0, this.mouseWheelZoomEnabled = this.mouseWheelScrollEnabled = this.rotate = this.skipZoom = !1, 
        this.minSelectedTime = 0, AmCharts.applyTheme(this, a, this.cname);
    },
    initChart: function() {
        AmCharts.AmSerialChart.base.initChart.call(this), this.updateCategoryAxis(this.categoryAxis, this.rotate, "categoryAxis"), 
        this.dataChanged && (this.updateData(), this.dataChanged = !1, this.dispatchDataUpdated = !0);
        var a = this.chartCursor;
        a && (a.updateData(), a.fullWidth && (a.fullRectSet = this.cursorLineSet));
        var c, a = this.countColumns(), b = this.graphs;
        for (c = 0; c < b.length; c++) b[c].columnCount = a;
        this.updateScrollbar = !0, this.drawChart(), this.autoMargins && !this.marginsUpdated && (this.marginsUpdated = !0, 
        this.measureMargins());
    },
    handleWheelReal: function(a, b) {
        if (!this.wheelBusy) {
            var c = this.categoryAxis, d = c.parseDates, e = c.minDuration(), f = c = 1;
            this.mouseWheelZoomEnabled ? b || (c = -1) : b && (c = -1);
            var l = this.chartData.length, h = this.lastTime, g = this.firstTime;
            0 > a ? d ? (l = this.endTime - this.startTime, d = this.startTime + c * e, e = this.endTime + f * e, 
            f > 0 && c > 0 && e >= h && (e = h, d = h - l), this.zoomToDates(new Date(d), new Date(e))) : (f > 0 && c > 0 && this.end >= l - 1 && (c = f = 0), 
            d = this.start + c, e = this.end + f, this.zoomToIndexes(d, e)) : d ? (l = this.endTime - this.startTime, 
            d = this.startTime - c * e, e = this.endTime - f * e, f > 0 && c > 0 && g >= d && (d = g, 
            e = g + l), this.zoomToDates(new Date(d), new Date(e))) : (f > 0 && c > 0 && 1 > this.start && (c = f = 0), 
            d = this.start - c, e = this.end - f, this.zoomToIndexes(d, e));
        }
    },
    validateData: function(a) {
        this.marginsUpdated = !1, this.zoomOutOnDataUpdate && !a && (this.endTime = this.end = this.startTime = this.start = 0/0), 
        AmCharts.AmSerialChart.base.validateData.call(this);
    },
    drawChart: function() {
        AmCharts.AmSerialChart.base.drawChart.call(this);
        var a = this.chartData;
        if (AmCharts.ifArray(a)) {
            var b = this.chartScrollbar;
            if (b && b.draw(), 0 < this.realWidth && 0 < this.realHeight) {
                var c, a = a.length - 1, b = this.categoryAxis;
                b.parseDates && !b.equalSpacing ? (b = this.startTime, c = this.endTime, (isNaN(b) || isNaN(c)) && (b = this.firstTime, 
                c = this.lastTime)) : (b = this.start, c = this.end, (isNaN(b) || isNaN(c)) && (b = 0, 
                c = a)), this.endTime = this.startTime = this.end = this.start = void 0, this.zoom(b, c);
            }
        } else this.cleanChart();
        this.dispDUpd(), this.chartCreated = !0;
    },
    cleanChart: function() {
        AmCharts.callMethod("destroy", [ this.valueAxes, this.graphs, this.categoryAxis, this.chartScrollbar, this.chartCursor ]);
    },
    updateCategoryAxis: function(a, b, c) {
        a.chart = this, a.id = c, a.rotate = b, a.axisRenderer = AmCharts.RecAxis, a.guideFillRenderer = AmCharts.RecFill, 
        a.axisItemRenderer = AmCharts.RecItem, a.setOrientation(!this.rotate), a.x = this.marginLeftReal, 
        a.y = this.marginTopReal, a.dx = this.dx, a.dy = this.dy, a.width = this.plotAreaWidth - 1, 
        a.height = this.plotAreaHeight - 1, a.viW = this.plotAreaWidth - 1, a.viH = this.plotAreaHeight - 1, 
        a.viX = this.marginLeftReal, a.viY = this.marginTopReal, a.marginsChanged = !0;
    },
    updateValueAxes: function() {
        AmCharts.AmSerialChart.base.updateValueAxes.call(this);
        var b, a = this.valueAxes;
        for (b = 0; b < a.length; b++) {
            var c = a[b], d = this.rotate;
            c.rotate = d, c.setOrientation(d), d = this.categoryAxis, (!d.startOnAxis || d.parseDates) && (c.expandMinMax = !0);
        }
    },
    updateData: function() {
        this.parseData();
        var b, a = this.graphs, c = this.chartData;
        for (b = 0; b < a.length; b++) a[b].data = c;
        0 < c.length && (this.firstTime = this.getStartTime(c[0].time), this.lastTime = this.getEndTime(c[c.length - 1].time));
    },
    getStartTime: function(a) {
        var b = this.categoryAxis;
        return AmCharts.resetDateToMin(new Date(a), b.minPeriod, 1, b.firstDayOfWeek).getTime();
    },
    getEndTime: function(a) {
        var b = AmCharts.extractPeriod(this.categoryAxis.minPeriod);
        return AmCharts.changeDate(new Date(a), b.period, b.count, !0).getTime() - 1;
    },
    updateMargins: function() {
        AmCharts.AmSerialChart.base.updateMargins.call(this);
        var a = this.chartScrollbar;
        a && (this.getScrollbarPosition(a, this.rotate, this.categoryAxis.position), this.adjustMargins(a, this.rotate));
    },
    updateScrollbars: function() {
        AmCharts.AmSerialChart.base.updateScrollbars.call(this), this.updateChartScrollbar(this.chartScrollbar, this.rotate);
    },
    zoom: function(a, b) {
        var c = this.categoryAxis;
        c.parseDates && !c.equalSpacing ? this.timeZoom(a, b) : this.indexZoom(a, b), this.updateLegendValues();
    },
    timeZoom: function(a, b) {
        var c = this.maxSelectedTime;
        isNaN(c) || (b != this.endTime && b - a > c && (a = b - c, this.updateScrollbar = !0), 
        a != this.startTime && b - a > c && (b = a + c, this.updateScrollbar = !0));
        var d = this.minSelectedTime;
        if (d > 0 && d > b - a) {
            var e = Math.round(a + (b - a) / 2), d = Math.round(d / 2);
            a = e - d, b = e + d;
        }
        var f = this.chartData, e = this.categoryAxis;
        if (AmCharts.ifArray(f) && (a != this.startTime || b != this.endTime)) {
            var l = e.minDuration(), d = this.firstTime, h = this.lastTime;
            a || (a = d, isNaN(c) || (a = h - c)), b || (b = h), a > h && (a = h), d > b && (b = d), 
            d > a && (a = d), b > h && (b = h), a > b && (b = a + l), l / 5 > b - a && (h > b ? b = a + l / 5 : a = b - l / 5), 
            this.startTime = a, this.endTime = b, c = f.length - 1, l = this.getClosestIndex(f, "time", a, !0, 0, c), 
            f = this.getClosestIndex(f, "time", b, !1, l, c), e.timeZoom(a, b), e.zoom(l, f), 
            this.start = AmCharts.fitToBounds(l, 0, c), this.end = AmCharts.fitToBounds(f, 0, c), 
            this.zoomAxesAndGraphs(), this.zoomScrollbar(), this.showZB(a != d || b != h ? !0 : !1), 
            this.updateColumnsDepth(), this.dispatchTimeZoomEvent();
        }
    },
    indexZoom: function(a, b) {
        var c = this.maxSelectedSeries;
        if (isNaN(c) || (b != this.end && b - a > c && (a = b - c, this.updateScrollbar = !0), 
        a != this.start && b - a > c && (b = a + c, this.updateScrollbar = !0)), a != this.start || b != this.end) {
            var d = this.chartData.length - 1;
            isNaN(a) && (a = 0, isNaN(c) || (a = d - c)), isNaN(b) && (b = d), a > b && (b = a), 
            b > d && (b = d), a > d && (a = d - 1), 0 > a && (a = 0), this.start = a, this.end = b, 
            this.categoryAxis.zoom(a, b), this.zoomAxesAndGraphs(), this.zoomScrollbar(), this.showZB(0 !== a || b != this.chartData.length - 1 ? !0 : !1), 
            this.updateColumnsDepth(), this.dispatchIndexZoomEvent();
        }
    },
    updateGraphs: function() {
        AmCharts.AmSerialChart.base.updateGraphs.call(this);
        var b, a = this.graphs;
        for (b = 0; b < a.length; b++) {
            var c = a[b];
            c.columnWidthReal = this.columnWidth, c.categoryAxis = this.categoryAxis, AmCharts.isString(c.fillToGraph) && (c.fillToGraph = this.getGraphById(c.fillToGraph));
        }
    },
    updateColumnsDepth: function() {
        var a, c, b = this.graphs;
        for (AmCharts.remove(this.columnsSet), this.columnsArray = [], a = 0; a < b.length; a++) {
            c = b[a];
            var d = c.columnsArray;
            if (d) {
                var e;
                for (e = 0; e < d.length; e++) this.columnsArray.push(d[e]);
            }
        }
        if (this.columnsArray.sort(this.compareDepth), 0 < this.columnsArray.length) {
            for (b = this.container.set(), this.columnSet.push(b), a = 0; a < this.columnsArray.length; a++) b.push(this.columnsArray[a].column.set);
            c && b.translate(c.x, c.y), this.columnsSet = b;
        }
    },
    compareDepth: function(a, b) {
        return a.depth > b.depth ? 1 : -1;
    },
    zoomScrollbar: function() {
        var a = this.chartScrollbar, b = this.categoryAxis;
        a && this.updateScrollbar && (a.dragger.stop(), b.parseDates && !b.equalSpacing ? a.timeZoom(this.startTime, this.endTime) : a.zoom(this.start, this.end), 
        this.updateScrollbar = !0);
    },
    updateTrendLines: function() {
        var b, a = this.trendLines;
        for (b = 0; b < a.length; b++) {
            var c = a[b], c = AmCharts.processObject(c, AmCharts.TrendLine, this.theme);
            a[b] = c, c.chart = this, AmCharts.isString(c.valueAxis) && (c.valueAxis = this.getValueAxisById(c.valueAxis)), 
            c.valueAxis || (c.valueAxis = this.valueAxes[0]), c.categoryAxis = this.categoryAxis;
        }
    },
    zoomAxesAndGraphs: function() {
        if (!this.scrollbarOnly) {
            var b, a = this.valueAxes;
            for (b = 0; b < a.length; b++) a[b].zoom(this.start, this.end);
            for (a = this.graphs, b = 0; b < a.length; b++) a[b].zoom(this.start, this.end);
            this.zoomTrendLines(), (b = this.chartCursor) && b.zoom(this.start, this.end, this.startTime, this.endTime);
        }
    },
    countColumns: function() {
        var d, e, l, h, a = 0, b = this.valueAxes.length, c = this.graphs.length, f = !1;
        for (h = 0; b > h; h++) {
            e = this.valueAxes[h];
            var g = e.stackType;
            if ("100%" == g || "regular" == g) for (f = !1, l = 0; c > l; l++) d = this.graphs[l], 
            d.tcc = 1, d.valueAxis == e && "column" == d.type && (!f && d.stackable && (a++, 
            f = !0), (!d.stackable && d.clustered || d.newStack) && a++, d.columnIndex = a - 1, 
            d.clustered || (d.columnIndex = 0));
            if ("none" == g || "3d" == g) {
                for (f = !1, l = 0; c > l; l++) d = this.graphs[l], d.valueAxis == e && "column" == d.type && (d.clustered ? (d.tcc = 1, 
                d.newStack && (a = 0), d.hidden || (d.columnIndex = a, a++)) : d.hidden || (f = !0, 
                d.tcc = 1, d.columnIndex = 0));
                f && 0 == a && (a = 1);
            }
            if ("3d" == g) {
                for (e = 1, h = 0; c > h; h++) d = this.graphs[h], d.newStack && e++, d.depthCount = e, 
                d.tcc = a;
                a = e;
            }
        }
        return a;
    },
    parseData: function() {
        AmCharts.AmSerialChart.base.parseData.call(this), this.parseSerialData();
    },
    getCategoryIndexByValue: function(a) {
        var c, d, b = this.chartData;
        for (d = 0; d < b.length; d++) b[d].category == a && (c = d);
        return c;
    },
    handleCursorChange: function(a) {
        this.updateLegendValues(a.index);
    },
    handleCursorZoom: function(a) {
        this.updateScrollbar = !0, this.zoom(a.start, a.end);
    },
    handleScrollbarZoom: function(a) {
        this.updateScrollbar = !1, this.zoom(a.start, a.end);
    },
    dispatchTimeZoomEvent: function() {
        if (this.prevStartTime != this.startTime || this.prevEndTime != this.endTime) {
            var a = {
                type: "zoomed"
            };
            a.startDate = new Date(this.startTime), a.endDate = new Date(this.endTime), a.startIndex = this.start, 
            a.endIndex = this.end, this.startIndex = this.start, this.endIndex = this.end, this.startDate = a.startDate, 
            this.endDate = a.endDate, this.prevStartTime = this.startTime, this.prevEndTime = this.endTime;
            var b = this.categoryAxis, c = AmCharts.extractPeriod(b.minPeriod).period, b = b.dateFormatsObject[c];
            a.startValue = AmCharts.formatDate(a.startDate, b, this), a.endValue = AmCharts.formatDate(a.endDate, b, this), 
            a.chart = this, a.target = this, this.fire(a.type, a);
        }
    },
    dispatchIndexZoomEvent: function() {
        if (this.prevStartIndex != this.start || this.prevEndIndex != this.end) {
            this.startIndex = this.start, this.endIndex = this.end;
            var a = this.chartData;
            if (AmCharts.ifArray(a) && !isNaN(this.start) && !isNaN(this.end)) {
                var b = {
                    chart: this,
                    target: this,
                    type: "zoomed"
                };
                b.startIndex = this.start, b.endIndex = this.end, b.startValue = a[this.start].category, 
                b.endValue = a[this.end].category, this.categoryAxis.parseDates && (this.startTime = a[this.start].time, 
                this.endTime = a[this.end].time, b.startDate = new Date(this.startTime), b.endDate = new Date(this.endTime)), 
                this.prevStartIndex = this.start, this.prevEndIndex = this.end, this.fire(b.type, b);
            }
        }
    },
    updateLegendValues: function(a) {
        var c, b = this.graphs;
        for (c = 0; c < b.length; c++) {
            var d = b[c];
            d.currentDataItem = isNaN(a) ? void 0 : this.chartData[a].axes[d.valueAxis.id].graphs[d.id];
        }
        this.legend && this.legend.updateValues();
    },
    getClosestIndex: function(a, b, c, d, e, f) {
        0 > e && (e = 0), f > a.length - 1 && (f = a.length - 1);
        var l = e + Math.round((f - e) / 2), h = a[l][b];
        return 1 >= f - e ? d ? e : (d = a[f][b], Math.abs(a[e][b] - c) < Math.abs(d - c) ? e : f) : c == h ? l : h > c ? this.getClosestIndex(a, b, c, d, e, l) : this.getClosestIndex(a, b, c, d, l, f);
    },
    zoomToIndexes: function(a, b) {
        this.updateScrollbar = !0;
        var c = this.chartData;
        if (c) {
            var d = c.length;
            d > 0 && (0 > a && (a = 0), b > d - 1 && (b = d - 1), d = this.categoryAxis, d.parseDates && !d.equalSpacing ? this.zoom(c[a].time, this.getEndTime(c[b].time)) : this.zoom(a, b));
        }
    },
    zoomToDates: function(a, b) {
        this.updateScrollbar = !0;
        var c = this.chartData;
        if (this.categoryAxis.equalSpacing) {
            var d = this.getClosestIndex(c, "time", a.getTime(), !0, 0, c.length);
            b = AmCharts.resetDateToMin(b, this.categoryAxis.minPeriod, 1), c = this.getClosestIndex(c, "time", b.getTime(), !1, 0, c.length), 
            this.zoom(d, c);
        } else this.zoom(a.getTime(), b.getTime());
    },
    zoomToCategoryValues: function(a, b) {
        this.updateScrollbar = !0, this.zoom(this.getCategoryIndexByValue(a), this.getCategoryIndexByValue(b));
    },
    formatPeriodString: function(a, b) {
        if (b) {
            var c = [ "value", "open", "low", "high", "close" ], d = "value open low high close average sum count".split(" "), e = b.valueAxis, f = this.chartData, l = b.numberFormatter;
            l || (l = this.nf);
            for (var h = 0; h < c.length; h++) {
                for (var p, v, r, t, n, x, u, z, y, B, g = c[h], k = 0, m = 0, w = 0, q = 0, D = this.start; D <= this.end; D++) {
                    var s = f[D];
                    if (s && (s = s.axes[e.id].graphs[b.id])) {
                        if (s.values) {
                            var A = s.values[g];
                            if (this.rotate ? (0 > s.x || s.x > s.graph.height) && (A = 0/0) : (0 > s.x || s.x > s.graph.width) && (A = 0/0), 
                            !isNaN(A)) {
                                isNaN(p) && (p = A), v = A, (isNaN(r) || r > A) && (r = A), (isNaN(t) || A > t) && (t = A), 
                                n = AmCharts.getDecimals(k);
                                var H = AmCharts.getDecimals(A), k = k + A, k = AmCharts.roundTo(k, Math.max(n, H));
                                m++, n = k / m;
                            }
                        }
                        s.percents && (s = s.percents[g], !isNaN(s)) && (isNaN(x) && (x = s), u = s, (isNaN(z) || z > s) && (z = s), 
                        (isNaN(y) || s > y) && (y = s), B = AmCharts.getDecimals(w), A = AmCharts.getDecimals(s), 
                        w += s, w = AmCharts.roundTo(w, Math.max(B, A)), q++, B = w / q);
                    }
                }
                w = {
                    open: x,
                    close: u,
                    high: y,
                    low: z,
                    average: B,
                    sum: w,
                    count: q
                }, a = AmCharts.formatValue(a, {
                    open: p,
                    close: v,
                    high: t,
                    low: r,
                    average: n,
                    sum: k,
                    count: m
                }, d, l, g + "\\.", this.usePrefixes, this.prefixesOfSmallNumbers, this.prefixesOfBigNumbers), 
                a = AmCharts.formatValue(a, w, d, this.pf, "percents\\." + g + "\\.");
            }
        }
        return a = AmCharts.cleanFromEmpty(a);
    },
    formatString: function(a, b, c) {
        var d = b.graph;
        if (-1 != a.indexOf("[[category]]")) {
            var e = b.serialDataItem.category;
            if (this.categoryAxis.parseDates) {
                var f = this.balloonDateFormat, l = this.chartCursor;
                l && (f = l.categoryBalloonDateFormat), -1 != a.indexOf("[[category]]") && (f = AmCharts.formatDate(e, f, this), 
                -1 != f.indexOf("fff") && (f = AmCharts.formatMilliseconds(f, e)), e = f);
            }
            a = a.replace(/\[\[category\]\]/g, String(e));
        }
        return d = d.numberFormatter, d || (d = this.nf), e = b.graph.valueAxis, (f = e.duration) && !isNaN(b.values.value) && (e = AmCharts.formatDuration(b.values.value, f, "", e.durationUnits, e.maxInterval, d), 
        a = a.replace(RegExp("\\[\\[value\\]\\]", "g"), e)), e = "value open low high close total".split(" "), 
        f = this.pf, a = AmCharts.formatValue(a, b.percents, e, f, "percents\\."), a = AmCharts.formatValue(a, b.values, e, d, "", this.usePrefixes, this.prefixesOfSmallNumbers, this.prefixesOfBigNumbers), 
        a = AmCharts.formatValue(a, b.values, [ "percents" ], f), -1 != a.indexOf("[[") && (a = AmCharts.formatDataContextValue(a, b.dataContext)), 
        a = AmCharts.AmSerialChart.base.formatString.call(this, a, b, c);
    },
    addChartScrollbar: function(a) {
        AmCharts.callMethod("destroy", [ this.chartScrollbar ]), a && (a.chart = this, this.listenTo(a, "zoomed", this.handleScrollbarZoom)), 
        this.rotate ? void 0 === a.width && (a.width = a.scrollbarHeight) : void 0 === a.height && (a.height = a.scrollbarHeight), 
        this.chartScrollbar = a;
    },
    removeChartScrollbar: function() {
        AmCharts.callMethod("destroy", [ this.chartScrollbar ]), this.chartScrollbar = null;
    },
    handleReleaseOutside: function(a) {
        AmCharts.AmSerialChart.base.handleReleaseOutside.call(this, a), AmCharts.callMethod("handleReleaseOutside", [ this.chartScrollbar ]);
    }
}), AmCharts.Cuboid = AmCharts.Class({
    construct: function(a, b, c, d, e, f, l, h, g, k, m, p, v, r, t, n) {
        this.set = a.set(), this.container = a, this.h = Math.round(c), this.w = Math.round(b), 
        this.dx = d, this.dy = e, this.colors = f, this.alpha = l, this.bwidth = h, this.bcolor = g, 
        this.balpha = k, this.dashLength = r, this.topRadius = n, this.pattern = t, (this.rotate = v) ? 0 > b && 0 === m && (m = 180) : 0 > c && 270 == m && (m = 90), 
        this.gradientRotation = m, 0 === d && 0 === e && (this.cornerRadius = p), this.draw();
    },
    draw: function() {
        var a = this.set;
        a.clear();
        var b = this.container, c = this.w, d = this.h, e = this.dx, f = this.dy, l = this.colors, h = this.alpha, g = this.bwidth, k = this.bcolor, m = this.balpha, p = this.gradientRotation, v = this.cornerRadius, r = this.dashLength, t = this.pattern, n = this.topRadius, w = l, q = l;
        "object" == typeof l && (w = l[0], q = l[l.length - 1]);
        var x, u, z, y, B, D, s, A, H, M = h;
        t && (h = 0);
        var C, E, F, G, I = this.rotate;
        if (0 < Math.abs(e) || 0 < Math.abs(f)) if (isNaN(n)) s = q, q = AmCharts.adjustLuminosity(w, -.2), 
        q = AmCharts.adjustLuminosity(w, -.2), x = AmCharts.polygon(b, [ 0, e, c + e, c, 0 ], [ 0, f, f, 0, 0 ], q, h, 1, k, 0, p), 
        m > 0 && (H = AmCharts.line(b, [ 0, e, c + e ], [ 0, f, f ], k, m, g, r)), u = AmCharts.polygon(b, [ 0, 0, c, c, 0 ], [ 0, d, d, 0, 0 ], q, h, 1, k, 0, p), 
        u.translate(e, f), m > 0 && (z = AmCharts.line(b, [ e, e ], [ f, f + d ], k, m, g, r)), 
        y = AmCharts.polygon(b, [ 0, 0, e, e, 0 ], [ 0, d, d + f, f, 0 ], q, h, 1, k, 0, p), 
        B = AmCharts.polygon(b, [ c, c, c + e, c + e, c ], [ 0, d, d + f, f, 0 ], q, h, 1, k, 0, p), 
        m > 0 && (D = AmCharts.line(b, [ c, c + e, c + e, c ], [ 0, f, d + f, d ], k, m, g, r)), 
        q = AmCharts.adjustLuminosity(s, .2), s = AmCharts.polygon(b, [ 0, e, c + e, c, 0 ], [ d, d + f, d + f, d, d ], q, h, 1, k, 0, p), 
        m > 0 && (A = AmCharts.line(b, [ 0, e, c + e ], [ d, d + f, d + f ], k, m, g, r)); else {
            var J, K, L;
            I ? (J = d / 2, q = e / 2, L = d / 2, K = c + e / 2, E = Math.abs(d / 2), C = Math.abs(e / 2)) : (q = c / 2, 
            J = f / 2, K = c / 2, L = d + f / 2 + 1, C = Math.abs(c / 2), E = Math.abs(f / 2)), 
            F = C * n, G = E * n, C > .1 && C > .1 && (x = AmCharts.circle(b, C, w, h, g, k, m, !1, E), 
            x.translate(q, J)), F > .1 && F > .1 && (s = AmCharts.circle(b, F, AmCharts.adjustLuminosity(w, .5), h, g, k, m, !1, G), 
            s.translate(K, L));
        }
        for (h = M, 1 > Math.abs(d) && (d = 0), 1 > Math.abs(c) && (c = 0), !isNaN(n) && (0 < Math.abs(e) || 0 < Math.abs(f)) ? (l = [ w ], 
        l = {
            fill: l,
            stroke: k,
            "stroke-width": g,
            "stroke-opacity": m,
            "fill-opacity": h
        }, I ? (h = "M0,0 L" + c + "," + (d / 2 - d / 2 * n), g = " B", c > 0 && (g = " A"), 
        AmCharts.VML ? (h += g + Math.round(c - F) + "," + Math.round(d / 2 - G) + "," + Math.round(c + F) + "," + Math.round(d / 2 + G) + "," + c + ",0," + c + "," + d, 
        h = h + (" L0," + d) + (g + Math.round(-C) + "," + Math.round(d / 2 - E) + "," + Math.round(C) + "," + Math.round(d / 2 + E) + ",0," + d + ",0,0")) : (h += "A" + F + "," + G + ",0,0,0," + c + "," + (d - d / 2 * (1 - n)) + "L0," + d, 
        h += "A" + C + "," + E + ",0,0,1,0,0"), C = 90) : (g = c / 2 - c / 2 * n, h = "M0,0 L" + g + "," + d, 
        AmCharts.VML ? (h = "M0,0 L" + g + "," + d, g = " B", 0 > d && (g = " A"), h += g + Math.round(c / 2 - F) + "," + Math.round(d - G) + "," + Math.round(c / 2 + F) + "," + Math.round(d + G) + ",0," + d + "," + c + "," + d, 
        h += " L" + c + ",0", h += g + Math.round(c / 2 + C) + "," + Math.round(E) + "," + Math.round(c / 2 - C) + "," + Math.round(-E) + "," + c + ",0,0,0") : (h += "A" + F + "," + G + ",0,0,0," + (c - c / 2 * (1 - n)) + "," + d + "L" + c + ",0", 
        h += "A" + C + "," + E + ",0,0,1,0,0"), C = 180), b = b.path(h).attr(l), b.gradient("linearGradient", [ w, AmCharts.adjustLuminosity(w, -.3), AmCharts.adjustLuminosity(w, -.3), w ], C), 
        I ? b.translate(e / 2, 0) : b.translate(0, f / 2)) : b = 0 === d ? AmCharts.line(b, [ 0, c ], [ 0, 0 ], k, m, g, r) : 0 === c ? AmCharts.line(b, [ 0, 0 ], [ 0, d ], k, m, g, r) : v > 0 ? AmCharts.rect(b, c, d, l, h, g, k, m, v, p, r) : AmCharts.polygon(b, [ 0, 0, c, c, 0 ], [ 0, d, d, 0, 0 ], l, h, g, k, m, p, !1, r), 
        c = isNaN(n) ? 0 > d ? [ x, H, u, z, y, B, D, s, A, b ] : [ s, A, u, z, y, B, x, H, D, b ] : I ? c > 0 ? [ x, b, s ] : [ s, b, x ] : 0 > d ? [ x, b, s ] : [ s, b, x ], 
        d = 0; d < c.length; d++) (e = c[d]) && a.push(e);
        t && b.pattern(t);
    },
    width: function(a) {
        this.w = Math.round(a), this.draw();
    },
    height: function(a) {
        this.h = Math.round(a), this.draw();
    },
    animateHeight: function(a, b) {
        var c = this;
        c.easing = b, c.totalFrames = Math.round(1e3 * a / AmCharts.updateRate), c.rh = c.h, 
        c.frame = 0, c.height(1), setTimeout(function() {
            c.updateHeight.call(c);
        }, AmCharts.updateRate);
    },
    updateHeight: function() {
        var a = this;
        a.frame++;
        var b = a.totalFrames;
        a.frame <= b && (b = a.easing(0, a.frame, 1, a.rh - 1, b), a.height(b), setTimeout(function() {
            a.updateHeight.call(a);
        }, AmCharts.updateRate));
    },
    animateWidth: function(a, b) {
        var c = this;
        c.easing = b, c.totalFrames = Math.round(1e3 * a / AmCharts.updateRate), c.rw = c.w, 
        c.frame = 0, c.width(1), setTimeout(function() {
            c.updateWidth.call(c);
        }, AmCharts.updateRate);
    },
    updateWidth: function() {
        var a = this;
        a.frame++;
        var b = a.totalFrames;
        a.frame <= b && (b = a.easing(0, a.frame, 1, a.rw - 1, b), a.width(b), setTimeout(function() {
            a.updateWidth.call(a);
        }, AmCharts.updateRate));
    }
}), AmCharts.CategoryAxis = AmCharts.Class({
    inherits: AmCharts.AxisBase,
    construct: function(a) {
        this.cname = "CategoryAxis", AmCharts.CategoryAxis.base.construct.call(this, a), 
        this.minPeriod = "DD", this.equalSpacing = this.parseDates = !1, this.position = "bottom", 
        this.startOnAxis = !1, this.firstDayOfWeek = 1, this.gridPosition = "middle", this.markPeriodChange = this.boldPeriodBeginning = !0, 
        this.safeDistance = 30, this.centerLabelOnFullPeriod = !0, this.periods = [ {
            period: "ss",
            count: 1
        }, {
            period: "ss",
            count: 5
        }, {
            period: "ss",
            count: 10
        }, {
            period: "ss",
            count: 30
        }, {
            period: "mm",
            count: 1
        }, {
            period: "mm",
            count: 5
        }, {
            period: "mm",
            count: 10
        }, {
            period: "mm",
            count: 30
        }, {
            period: "hh",
            count: 1
        }, {
            period: "hh",
            count: 3
        }, {
            period: "hh",
            count: 6
        }, {
            period: "hh",
            count: 12
        }, {
            period: "DD",
            count: 1
        }, {
            period: "DD",
            count: 2
        }, {
            period: "DD",
            count: 3
        }, {
            period: "DD",
            count: 4
        }, {
            period: "DD",
            count: 5
        }, {
            period: "WW",
            count: 1
        }, {
            period: "MM",
            count: 1
        }, {
            period: "MM",
            count: 2
        }, {
            period: "MM",
            count: 3
        }, {
            period: "MM",
            count: 6
        }, {
            period: "YYYY",
            count: 1
        }, {
            period: "YYYY",
            count: 2
        }, {
            period: "YYYY",
            count: 5
        }, {
            period: "YYYY",
            count: 10
        }, {
            period: "YYYY",
            count: 50
        }, {
            period: "YYYY",
            count: 100
        } ], this.dateFormats = [ {
            period: "fff",
            format: "JJ:NN:SS"
        }, {
            period: "ss",
            format: "JJ:NN:SS"
        }, {
            period: "mm",
            format: "JJ:NN"
        }, {
            period: "hh",
            format: "JJ:NN"
        }, {
            period: "DD",
            format: "MMM DD"
        }, {
            period: "WW",
            format: "MMM DD"
        }, {
            period: "MM",
            format: "MMM"
        }, {
            period: "YYYY",
            format: "YYYY"
        } ], this.nextPeriod = {}, this.nextPeriod.fff = "ss", this.nextPeriod.ss = "mm", 
        this.nextPeriod.mm = "hh", this.nextPeriod.hh = "DD", this.nextPeriod.DD = "MM", 
        this.nextPeriod.MM = "YYYY", AmCharts.applyTheme(this, a, this.cname);
    },
    draw: function() {
        AmCharts.CategoryAxis.base.draw.call(this), this.generateDFObject();
        var a = this.chart.chartData;
        if (this.data = a, AmCharts.ifArray(a)) {
            var b, c = this.chart, d = this.start, e = this.labelFrequency, f = 0;
            b = this.end - d + 1;
            var k, l = this.gridCountR, h = this.showFirstLabel, g = this.showLastLabel, m = "", p = AmCharts.extractPeriod(this.minPeriod);
            k = AmCharts.getPeriodDuration(p.period, p.count);
            var v, r, t, n, w, q;
            v = this.rotate;
            var z, x = this.firstDayOfWeek, u = this.boldPeriodBeginning, a = AmCharts.resetDateToMin(new Date(a[a.length - 1].time + 1.05 * k), this.minPeriod, 1, x).getTime();
            this.endTime > a && (this.endTime = a), q = this.minorGridEnabled;
            var y, B, a = this.gridAlpha;
            if (this.parseDates && !this.equalSpacing) {
                this.timeDifference = this.endTime - this.startTime, d = this.choosePeriod(0), e = d.period, 
                v = d.count, r = AmCharts.getPeriodDuration(e, v), k > r && (e = p.period, v = p.count, 
                r = k), t = e, "WW" == t && (t = "DD"), this.stepWidth = this.getStepWidth(this.timeDifference);
                var l = Math.ceil(this.timeDifference / r) + 5, D = m = AmCharts.resetDateToMin(new Date(this.startTime - r), e, v, x).getTime();
                t == e && 1 == v && this.centerLabelOnFullPeriod && (w = r * this.stepWidth), this.cellWidth = k * this.stepWidth, 
                b = Math.round(m / r), d = -1, b / 2 == Math.round(b / 2) && (d = -2, m -= r);
                var s = c.firstTime, A = 0;
                if (q && v > 1 && (y = this.chooseMinorFrequency(v), B = AmCharts.getPeriodDuration(e, y)), 
                0 < this.gridCountR) for (b = d; l >= b; b++) {
                    if (p = s + r * (b + Math.floor((D - s) / r)) - A, "DD" == e && (p += 36e5), p = AmCharts.resetDateToMin(new Date(p), e, v, x).getTime(), 
                    "MM" == e && (q = (p - m) / r, (p - m) / r >= 1.5 && (p = p - (q - 1) * r + AmCharts.getPeriodDuration("DD", 3), 
                    p = AmCharts.resetDateToMin(new Date(p), e, 1).getTime(), A += r)), k = (p - this.startTime) * this.stepWidth, 
                    q = !1, this.nextPeriod[t] && (q = this.checkPeriodChange(this.nextPeriod[t], 1, p, m, t)), 
                    z = !1, q && this.markPeriodChange ? (q = this.dateFormatsObject[this.nextPeriod[t]], 
                    this.twoLineMode && (q = this.dateFormatsObject[t] + "\n" + q, q = AmCharts.fixBrakes(q)), 
                    z = !0) : q = this.dateFormatsObject[t], u || (z = !1), m = AmCharts.formatDate(new Date(p), q, c), 
                    (b == d && !h || b == l && !g) && (m = " "), this.labelFunction && (m = this.labelFunction(m, new Date(p), this, e, v, n).toString()), 
                    this.boldLabels && (z = !0), n = new this.axisItemRenderer(this, k, m, !1, w, 0, !1, z), 
                    this.pushAxisItem(n), n = m = p, !isNaN(y)) for (k = 1; v > k; k += y) this.gridAlpha = this.minorGridAlpha, 
                    q = p + B * k, q = AmCharts.resetDateToMin(new Date(q), e, y, x).getTime(), q = new this.axisItemRenderer(this, (q - this.startTime) * this.stepWidth), 
                    this.pushAxisItem(q);
                    this.gridAlpha = a;
                }
            } else if (this.parseDates) {
                if (this.parseDates && this.equalSpacing) {
                    if (f = this.start, this.startTime = this.data[this.start].time, this.endTime = this.data[this.end].time, 
                    this.timeDifference = this.endTime - this.startTime, d = this.choosePeriod(0), e = d.period, 
                    v = d.count, r = AmCharts.getPeriodDuration(e, v), k > r && (e = p.period, v = p.count, 
                    r = k), t = e, "WW" == t && (t = "DD"), this.stepWidth = this.getStepWidth(b), l = Math.ceil(this.timeDifference / r) + 1, 
                    m = AmCharts.resetDateToMin(new Date(this.startTime - r), e, v, x).getTime(), this.cellWidth = this.getStepWidth(b), 
                    b = Math.round(m / r), d = -1, b / 2 == Math.round(b / 2) && (d = -2, m -= r), k = this.start, 
                    k / 2 == Math.round(k / 2) && k--, 0 > k && (k = 0), w = this.end + 2, w >= this.data.length && (w = this.data.length), 
                    B = !1, B = !h, this.previousPos = -1e3, 20 < this.labelRotation && (this.safeDistance = 5), 
                    r = k, this.data[k].time != AmCharts.resetDateToMin(new Date(this.data[k].time), e, v, x).getTime()) for (x = 0, 
                    z = m, b = k; w > b; b++) p = this.data[b].time, this.checkPeriodChange(e, v, p, z) && (x++, 
                    x >= 2 && (r = b, b = w), z = p);
                    if (q && v > 1 && (y = this.chooseMinorFrequency(v), AmCharts.getPeriodDuration(e, y)), 
                    0 < this.gridCountR) for (b = k; w > b; b++) p = this.data[b].time, this.checkPeriodChange(e, v, p, m) && b >= r ? (k = this.getCoordinate(b - this.start), 
                    q = !1, this.nextPeriod[t] && (q = this.checkPeriodChange(this.nextPeriod[t], 1, p, m, t)), 
                    z = !1, q && this.markPeriodChange ? (q = this.dateFormatsObject[this.nextPeriod[t]], 
                    z = !0) : q = this.dateFormatsObject[t], m = AmCharts.formatDate(new Date(p), q, c), 
                    (b == d && !h || b == l && !g) && (m = " "), B ? B = !1 : (u || (z = !1), k - this.previousPos > this.safeDistance * Math.cos(this.labelRotation * Math.PI / 180) && (this.labelFunction && (m = this.labelFunction(m, new Date(p), this, e, v, n)), 
                    this.boldLabels && (z = !0), n = new this.axisItemRenderer(this, k, m, void 0, void 0, void 0, void 0, z), 
                    x = n.graphics(), this.pushAxisItem(n), n = x.getBBox().width, AmCharts.isModern || (n -= k), 
                    this.previousPos = k + n)), n = m = p) : isNaN(y) || (this.checkPeriodChange(e, y, p, D) && (this.gridAlpha = this.minorGridAlpha, 
                    k = this.getCoordinate(b - this.start), q = new this.axisItemRenderer(this, k), 
                    this.pushAxisItem(q), D = p), this.gridAlpha = a);
                }
            } else if (this.cellWidth = this.getStepWidth(b), l > b && (l = b), f += this.start, 
            this.stepWidth = this.getStepWidth(b), l > 0) for (u = Math.floor(b / l), y = this.chooseMinorFrequency(u), 
            k = f, k / 2 == Math.round(k / 2) && k--, 0 > k && (k = 0), l = 0, this.end - k + 1 >= this.autoRotateCount && (this.labelRotation = this.autoRotateAngle), 
            b = k; b <= this.end + 2; b++) {
                if (n = !1, b >= 0 && b < this.data.length ? (t = this.data[b], m = t.category, 
                n = t.forceShow) : m = "", q && !isNaN(y)) {
                    if (b / y != Math.round(b / y) && !n) continue;
                    b / u == Math.round(b / u) || n || (this.gridAlpha = this.minorGridAlpha, m = void 0);
                } else if (b / u != Math.round(b / u) && !n) continue;
                k = this.getCoordinate(b - f), n = 0, "start" == this.gridPosition && (k -= this.cellWidth / 2, 
                n = this.cellWidth / 2), x = !0, tickShift = n, "start" == this.tickPosition && (tickShift = 0, 
                x = !1, n = 0), (b == d && !h || b == this.end && !g) && (m = void 0), Math.round(l / e) != l / e && (m = void 0), 
                l++, D = this.cellWidth, v && (D = 0/0), this.labelFunction && t && (m = this.labelFunction(m, t, this)), 
                m = AmCharts.fixBrakes(m), z = !1, this.boldLabels && (z = !0), b > this.end && "start" == this.tickPosition && (m = " "), 
                n = new this.axisItemRenderer(this, k, m, x, D, n, void 0, z, tickShift, !1, t.labelColor), 
                n.serialDataItem = t, this.pushAxisItem(n), this.gridAlpha = a;
            }
            for (b = 0; b < this.data.length; b++) (h = this.data[b]) && (g = this.parseDates && !this.equalSpacing ? Math.round((h.time - this.startTime) * this.stepWidth + this.cellWidth / 2) : this.getCoordinate(b - f), 
            h.x[this.id] = g);
            for (h = this.guides.length, b = 0; h > b; b++) g = this.guides[b], u = u = u = a = d = 0/0, 
            y = g.above, g.toCategory && (u = c.getCategoryIndexByValue(g.toCategory), isNaN(u) || (d = this.getCoordinate(u - f), 
            g.expand && (d += this.cellWidth / 2), n = new this.axisItemRenderer(this, d, "", !0, 0/0, 0/0, g), 
            this.pushAxisItem(n, y))), g.category && (u = c.getCategoryIndexByValue(g.category), 
            isNaN(u) || (a = this.getCoordinate(u - f), g.expand && (a -= this.cellWidth / 2), 
            u = (d - a) / 2, n = new this.axisItemRenderer(this, a, g.label, !0, 0/0, u, g), 
            this.pushAxisItem(n, y))), g.toDate && (g.toDate instanceof Date || (g.toDate = AmCharts.stringToDate(g.toDate, c.dataDateFormat)), 
            this.equalSpacing ? (u = c.getClosestIndex(this.data, "time", g.toDate.getTime(), !1, 0, this.data.length - 1), 
            isNaN(u) || (d = this.getCoordinate(u - f))) : d = (g.toDate.getTime() - this.startTime) * this.stepWidth, 
            n = new this.axisItemRenderer(this, d, "", !0, 0/0, 0/0, g), this.pushAxisItem(n, y)), 
            g.date && (g.date instanceof Date || (g.date = AmCharts.stringToDate(g.date, c.dataDateFormat)), 
            this.equalSpacing ? (u = c.getClosestIndex(this.data, "time", g.date.getTime(), !1, 0, this.data.length - 1), 
            isNaN(u) || (a = this.getCoordinate(u - f))) : a = (g.date.getTime() - this.startTime) * this.stepWidth, 
            u = (d - a) / 2, n = "H" == this.orientation ? new this.axisItemRenderer(this, a, g.label, !1, 2 * u, 0/0, g) : new this.axisItemRenderer(this, a, g.label, !1, 0/0, u, g), 
            this.pushAxisItem(n, y)), (d > 0 || a > 0) && (d < this.width || a < this.width) && (d = new this.guideFillRenderer(this, a, d, g), 
            a = d.graphics(), this.pushAxisItem(d, y), g.graphics = a, a.index = b, g.balloonText && this.addEventListeners(a, g));
        }
        this.axisCreated = !0, c = this.x, f = this.y, this.set.translate(c, f), this.labelsSet.translate(c, f), 
        this.positionTitle(), (c = this.axisLine.set) && c.toFront(), c = this.getBBox().height, 
        2 < c - this.previousHeight && this.autoWrap && !this.parseDates && (this.axisCreated = this.chart.marginsUpdated = !1), 
        this.previousHeight = c;
    },
    chooseMinorFrequency: function(a) {
        for (var b = 10; b > 0; b--) if (a / b == Math.round(a / b)) return a / b;
    },
    choosePeriod: function(a) {
        var b = AmCharts.getPeriodDuration(this.periods[a].period, this.periods[a].count), c = Math.ceil(this.timeDifference / b), d = this.periods;
        return this.timeDifference < b && a > 0 ? d[a - 1] : c <= this.gridCountR ? d[a] : a + 1 < d.length ? this.choosePeriod(a + 1) : d[a];
    },
    getStepWidth: function(a) {
        var b;
        return this.startOnAxis ? (b = this.axisWidth / (a - 1), 1 == a && (b = this.axisWidth)) : b = this.axisWidth / a, 
        b;
    },
    getCoordinate: function(a) {
        return a *= this.stepWidth, this.startOnAxis || (a += this.stepWidth / 2), Math.round(a);
    },
    timeZoom: function(a, b) {
        this.startTime = a, this.endTime = b;
    },
    minDuration: function() {
        var a = AmCharts.extractPeriod(this.minPeriod);
        return AmCharts.getPeriodDuration(a.period, a.count);
    },
    checkPeriodChange: function(a, b, c, d, e) {
        c = new Date(c);
        var f = new Date(d), l = this.firstDayOfWeek;
        return d = b, "DD" == a && (b = 1), c = AmCharts.resetDateToMin(c, a, b, l).getTime(), 
        b = AmCharts.resetDateToMin(f, a, b, l).getTime(), "DD" == a && "hh" != e && c - b <= AmCharts.getPeriodDuration(a, d) ? !1 : c != b ? !0 : !1;
    },
    generateDFObject: function() {
        this.dateFormatsObject = {};
        var a;
        for (a = 0; a < this.dateFormats.length; a++) {
            var b = this.dateFormats[a];
            this.dateFormatsObject[b.period] = b.format;
        }
    },
    xToIndex: function(a) {
        var b = this.data, c = this.chart, d = c.rotate, e = this.stepWidth;
        this.parseDates && !this.equalSpacing ? (a = this.startTime + Math.round(a / e) - this.minDuration() / 2, 
        c = c.getClosestIndex(b, "time", a, !1, this.start, this.end + 1)) : (this.startOnAxis || (a -= e / 2), 
        c = this.start + Math.round(a / e));
        var f, c = AmCharts.fitToBounds(c, 0, b.length - 1);
        return b[c] && (f = b[c].x[this.id]), d ? f > this.height + 1 && c-- : f > this.width + 1 && c--, 
        0 > f && c++, c = AmCharts.fitToBounds(c, 0, b.length - 1);
    },
    dateToCoordinate: function(a) {
        return this.parseDates && !this.equalSpacing ? (a.getTime() - this.startTime) * this.stepWidth : this.parseDates && this.equalSpacing ? (a = this.chart.getClosestIndex(this.data, "time", a.getTime(), !1, 0, this.data.length - 1), 
        this.getCoordinate(a - this.start)) : 0/0;
    },
    categoryToCoordinate: function(a) {
        return this.chart ? (a = this.chart.getCategoryIndexByValue(a), this.getCoordinate(a - this.start)) : 0/0;
    },
    coordinateToDate: function(a) {
        return this.equalSpacing ? (a = this.xToIndex(a), new Date(this.data[a].time)) : new Date(this.startTime + a / this.stepWidth);
    }
});